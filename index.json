{"repository_name":"crinja_lint","body":"<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/veelenga/bin/master/ameba/logo.png\" width=\"800\">\n  <h3 align=\"center\">Ameba</h3>\n  <p align=\"center\">Code style linter for Crystal<p>\n  <p align=\"center\">\n    <sup>\n      <i>(a single-celled animal that catches food and moves about by extending fingerlike projections of protoplasm)</i>\n    </sup>\n  </p>\n  <p align=\"center\">\n    <a href=\"https://github.com/crystal-ameba/ameba/actions/workflows/ci.yml\"><img src=\"https://github.com/crystal-ameba/ameba/actions/workflows/ci.yml/badge.svg\"></a>\n    <a href=\"https://github.com/crystal-ameba/ameba/releases\"><img src=\"https://img.shields.io/github/release/crystal-ameba/ameba.svg?maxAge=360\"></a>\n    <a href=\"https://github.com/crystal-ameba/ameba/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/crystal-ameba/ameba.svg\"></a>\n  </p>\n</p>\n\n- [About](#about)\n- [Usage](#usage)\n  - [Watch a tutorial](#watch-a-tutorial)\n  - [Autocorrection](#autocorrection)\n  - [Explain issues](#explain-issues)\n  - [Run in parallel](#run-in-parallel)\n- [Installation](#installation)\n  - [As a project dependency:](#as-a-project-dependency)\n  - [OS X](#os-x)\n  - [Docker](#docker)\n  - [From sources](#from-sources)\n- [Configuration](#configuration)\n  - [Sources](#sources)\n  - [Rules](#rules)\n  - [Inline disabling](#inline-disabling)\n- [Editors \\& integrations](#editors--integrations)\n- [Credits \\& inspirations](#credits--inspirations)\n- [Contributors](#contributors)\n\n## About\n\nAmeba is a static code analysis tool for the Crystal language.\nIt enforces a consistent [Crystal code style](https://crystal-lang.org/reference/conventions/coding_style.html),\nalso catches code smells and wrong code constructions.\n\nSee also [Roadmap](https://github.com/crystal-ameba/ameba/wiki).\n\n## Usage\n\nRun `ameba` binary within your project directory to catch code issues:\n\n```sh\n$ ameba\nInspecting 107 files\n\n...............F.....................FF....................................................................\n\nsrc/ameba/formatter/flycheck_formatter.cr:6:37\n[W] Lint/UnusedArgument: Unused argument `location`. If it's necessary, use `_` as an argument name to indicate that it won't be used.\n> source.issues.each do |issue, location|\n                                ^\n\nsrc/ameba/formatter/base_formatter.cr:16:14\n[W] Lint/UselessAssign: Useless assignment to variable `s`\n> return s += issues.size\n         ^\n\nsrc/ameba/formatter/base_formatter.cr:16:7 [Correctable]\n[C] Style/RedundantReturn: Redundant `return` detected\n> return s += issues.size\n  ^---------------------^\n\nFinished in 389.45 milliseconds\n107 inspected, 3 failures\n```\n\n### Watch a tutorial\n\n<a href=\"https://luckycasts.com/videos/ameba\"><img src=\"https://i.imgur.com/uOETQlM.png\" title=\"Write Better Crystal Code with the Ameba Shard\" width=\"500\" /></a>\n\n[ðŸŽ¬ Watch the LuckyCast showing how to use Ameba](https://luckycasts.com/videos/ameba)\n\n### Autocorrection\n\nRules that are marked as `[Correctable]` in the output can be automatically corrected using `--fix` flag:\n\n```sh\n$ ameba --fix\n```\n\n### Explain issues\n\nAmeba allows you to dig deeper into an issue, by showing you details about the issue\nand the reasoning by it being reported.\n\nTo be convenient, you can just copy-paste the `PATH:line:column` string from the\nreport and paste behind the `ameba` command to check it out.\n\n```sh\n$ ameba crystal/command/format.cr:26:83           # show explanation for the issue\n$ ameba --explain crystal/command/format.cr:26:83 # same thing\n```\n\n### Run in parallel\n\nSome quick benchmark results measured while running Ameba on Crystal repo:\n\n```sh\n$ CRYSTAL_WORKERS=1 ameba #=> 29.11 seconds\n$ CRYSTAL_WORKERS=2 ameba #=> 19.49 seconds\n$ CRYSTAL_WORKERS=4 ameba #=> 13.48 seconds\n$ CRYSTAL_WORKERS=8 ameba #=> 10.14 seconds\n```\n\n## Installation\n\n### As a project dependency:\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndevelopment_dependencies:\n  ameba:\n    github: crystal-ameba/ameba\n```\n\nBuild `bin/ameba` binary within your project directory while running `shards install`.\n\n### OS X\n\n```sh\n$ brew tap crystal-ameba/ameba\n$ brew install ameba\n```\n\n### Docker\n\nBuild the image:\n\n```sh\n$ docker build -t ghcr.io/crystal-ameba/ameba .\n```\n\nTo use the resulting image on a local source folder, mount the current (or target) directory into `/src`:\n\n```sh\n$ docker run -v $(pwd):/src ghcr.io/crystal-ameba/ameba\n```\n\nAlso available on GitHub: https://github.com/crystal-ameba/ameba/pkgs/container/ameba\n\n### From sources\n\n```sh\n$ git clone https://github.com/crystal-ameba/ameba && cd ameba\n$ make install\n```\n\n## Configuration\n\nDefault configuration file is `.ameba.yml`.\nIt allows to configure rule properties, disable specific rules and exclude sources from the rules.\n\nGenerate new file by running `ameba --gen-config`.\n\n### Sources\n\n**List of sources to run Ameba on can be configured globally via:**\n\n- `Globs` section - an array of wildcards (or paths) to include to the\n  inspection. Defaults to `%w[**/*.cr !lib]`, meaning it includes all project\n  files with `*.cr` extension except those which exist in `lib` folder.\n- `Excluded` section - an array of wildcards (or paths) to exclude from the\n  source list defined by `Globs`. Defaults to an empty array.\n\nIn this example we define default globs and exclude `src/compiler` folder:\n\n``` yaml\nGlobs:\n  - \"**/*.cr\"\n  - \"**/*.ecr\"\n  - \"!lib\"\n\nExcluded:\n  - src/compiler\n```\n\n**Specific sources can be excluded at rule level**:\n\n``` yaml\nStyle/RedundantBegin:\n  Excluded:\n    - src/server/processor.cr\n    - src/server/api.cr\n```\n\n### Rules\n\nOne or more rules, or a one or more group of rules can be included or excluded\nvia command line arguments:\n\n```sh\n$ ameba --only   Lint/Syntax # runs only Lint/Syntax rule\n$ ameba --only   Style,Lint  # runs only rules from Style and Lint groups\n$ ameba --except Lint/Syntax # runs all rules except Lint/Syntax\n$ ameba --except Style,Lint  # runs all rules except rules in Style and Lint groups\n```\n\nOr through the configuration file:\n\n``` yaml\nStyle/RedundantBegin:\n  Enabled: false\n```\n\n### Inline disabling\n\nOne or more rules or one or more group of rules can be disabled using inline directives:\n\n```crystal\n# ameba:disable Style/LargeNumbers\ntime = Time.epoch(1483859302)\n\ntime = Time.epoch(1483859302) # ameba:disable Style/LargeNumbers, Lint/UselessAssign\ntime = Time.epoch(1483859302) # ameba:disable Style, Lint\n```\n\n## Editors & integrations\n\n- Vim: [vim-crystal](https://github.com/rhysd/vim-crystal), [Ale](https://github.com/w0rp/ale)\n- Emacs: [ameba.el](https://github.com/crystal-ameba/ameba.el)\n- Sublime Text: [Sublime Linter Ameba](https://github.com/epergo/SublimeLinter-contrib-ameba)\n- VSCode: [vscode-crystal-ameba](https://github.com/crystal-ameba/vscode-crystal-ameba)\n- Codacy: [codacy-ameba](https://github.com/codacy/codacy-ameba)\n- GitHub Actions: [github-action](https://github.com/crystal-ameba/github-action)\n\n## Credits & inspirations\n\n- [Crystal Language](https://crystal-lang.org)\n- [Rubocop](https://rubocop.org)\n- [Credo](http://credo-ci.org)\n- [Dogma](https://github.com/lpil/dogma)\n\n## Contributors\n\n- [veelenga](https://github.com/veelenga) Vitalii Elenhaupt - creator, maintainer\n- [Sija](https://github.com/Sija) Sijawusz Pur Rahnama - contributor, maintainer\n","program":{"html_id":"crinja_lint/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"ancestors":[{"html_id":"crinja_lint/Ameba/Spec/ExpectIssue","kind":"module","full_name":"Ameba::Spec::ExpectIssue","name":"ExpectIssue"},{"html_id":"crinja_lint/Ameba/Spec/Util","kind":"module","full_name":"Ameba::Spec::Util","name":"Util"},{"html_id":"crinja_lint/Ameba/Spec/BeValid","kind":"module","full_name":"Ameba::Spec::BeValid","name":"BeValid"}],"locations":[],"repository_name":"crinja_lint","program":true,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/Ameba/Spec/BeValid","kind":"module","full_name":"Ameba::Spec::BeValid","name":"BeValid"},{"html_id":"crinja_lint/Ameba/Spec/ExpectIssue","kind":"module","full_name":"Ameba::Spec::ExpectIssue","name":"ExpectIssue"}],"extended_modules":[{"html_id":"crinja_lint/Ameba/Spec/BeValid","kind":"module","full_name":"Ameba::Spec::BeValid","name":"BeValid"},{"html_id":"crinja_lint/Ameba/Spec/ExpectIssue","kind":"module","full_name":"Ameba::Spec::ExpectIssue","name":"ExpectIssue"}],"types":[{"html_id":"crinja_lint/Ameba","path":"Ameba.html","kind":"module","full_name":"Ameba","name":"Ameba","abstract":false,"locations":[{"filename":"src/ameba.cr","line_number":20,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba.cr#L20"},{"filename":"src/ameba/glob_utils.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/glob_utils.cr#L1"},{"filename":"src/ameba/inline_comments.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L1"},{"filename":"src/ameba/issue.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L1"},{"filename":"src/ameba/reportable.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L1"},{"filename":"src/ameba/runner.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L1"},{"filename":"src/ameba/severity.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L3"},{"filename":"src/ameba/source.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L1"},{"filename":"src/ameba/spec/support.cr","line_number":7,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/support.cr#L7"},{"filename":"src/ameba/tokenizer.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/tokenizer.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ (`shards version \\\"/home/runner/work/crinja_lint/crinja_lint/src\\\"`).chomp.stringify }}"}],"extended_modules":[{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"}],"doc":"Ameba's entry module.\n\nTo run the linter with default parameters:\n\n```\nAmeba.run\n```\n\nTo configure and run it:\n\n```\nconfig = Ameba::Config.load\nconfig.formatter = formatter\nconfig.files = file_paths\n\nAmeba.run config\n```","summary":"<p>Ameba's entry module.</p>","instance_methods":[{"html_id":"run(config=Config.load)-instance-method","name":"run","doc":"Initializes `Ameba::Runner` and runs it.\nCan be configured via `config` parameter.\n\nExamples:\n\n```\nAmeba.run\nAmeba.run config\n```","summary":"<p>Initializes <code><a href=\"Ameba/Runner.html\">Ameba::Runner</a></code> and runs it.</p>","abstract":false,"args":[{"name":"config","default_value":"Config.load","external_name":"config","restriction":""}],"args_string":"(config = Config.load)","args_html":"(config = <span class=\"t\">Config</span>.load)","location":{"filename":"src/ameba.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba.cr#L34"},"def":{"name":"run","args":[{"name":"config","default_value":"Config.load","external_name":"config","restriction":""}],"visibility":"Public","body":"(Runner.new(config)).run"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/AST","path":"Ameba/AST.html","kind":"module","full_name":"Ameba::AST","name":"AST","abstract":false,"locations":[{"filename":"src/ameba/ast/visitor/node_visitor.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/node_visitor.cr#L1"},{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"types":[{"html_id":"crinja_lint/Ameba/AST/NodeVisitor","path":"Ameba/AST/NodeVisitor.html","kind":"class","full_name":"Ameba::AST::NodeVisitor","name":"NodeVisitor","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Crinja/AST","kind":"module","full_name":"Crinja::AST","name":"AST"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/ast/visitor/node_visitor.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/node_visitor.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/Crinja/AST","kind":"module","full_name":"Crinja::AST","name":"AST"}],"subclasses":[{"html_id":"crinja_lint/Ameba/AST/TagVisitor","kind":"class","full_name":"Ameba::AST::TagVisitor","name":"TagVisitor"}],"namespace":{"html_id":"crinja_lint/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"constructors":[{"html_id":"new(rule:Ameba::Rule::Base,source:Ameba::Source)-class-method","name":"new","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":"::Ameba::Rule::Base"},{"name":"source","external_name":"source","restriction":"::Ameba::Source"}],"args_string":"(rule : Ameba::Rule::Base, source : Ameba::Source)","args_html":"(rule : <a href=\"../../Ameba/Rule/Base.html\">Ameba::Rule::Base</a>, source : <a href=\"../../Ameba/Source.html\">Ameba::Source</a>)","location":{"filename":"src/ameba/ast/visitor/node_visitor.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/node_visitor.cr#L8"},"def":{"name":"new","args":[{"name":"rule","external_name":"rule","restriction":"::Ameba::Rule::Base"},{"name":"source","external_name":"source","restriction":"::Ameba::Source"}],"visibility":"Public","body":"_ = allocate\n_.initialize(rule, source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"end_visit(node:ASTNode)-instance-method","name":"end_visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"ASTNode"}],"args_string":"(node : ASTNode)","args_html":"(node : ASTNode)","location":{"filename":"src/ameba/ast/visitor/node_visitor.cr","line_number":17,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/node_visitor.cr#L17"},"def":{"name":"end_visit","args":[{"name":"node","external_name":"node","restriction":"ASTNode"}],"visibility":"Public","body":"true"},"external_var":false},{"html_id":"visit(node:ASTNode)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"ASTNode"}],"args_string":"(node : ASTNode)","args_html":"(node : ASTNode)","location":{"filename":"src/ameba/ast/visitor/node_visitor.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/node_visitor.cr#L11"},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"ASTNode"}],"visibility":"Public","body":"@rule.test(@source, node)\n\ntrue\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/AST/TagVisitor","path":"Ameba/AST/TagVisitor.html","kind":"class","full_name":"Ameba::AST::TagVisitor","name":"TagVisitor","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/AST/NodeVisitor","kind":"class","full_name":"Ameba::AST::NodeVisitor","name":"NodeVisitor"},"ancestors":[{"html_id":"crinja_lint/Ameba/AST/NodeVisitor","kind":"class","full_name":"Ameba::AST::NodeVisitor","name":"NodeVisitor"},{"html_id":"crinja_lint/Crinja/AST","kind":"module","full_name":"Crinja::AST","name":"AST"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crinja_lint/Ameba/Rule/Lint/UselessAssign/AssignVisitor","kind":"class","full_name":"Ameba::Rule::Lint::UselessAssign::AssignVisitor","name":"AssignVisitor"},{"html_id":"crinja_lint/Ameba/Rule/Style/BlockEndTagName/BlockTagVisitor","kind":"class","full_name":"Ameba::Rule::Style::BlockEndTagName::BlockTagVisitor","name":"BlockTagVisitor"}],"namespace":{"html_id":"crinja_lint/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"instance_methods":[{"html_id":"visit(node:Crinja::AST::TagNode)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::TagNode"}],"args_string":"(node : Crinja::AST::TagNode)","args_html":"(node : Crinja::AST::TagNode)","location":{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L3"},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::TagNode"}],"visibility":"Public","body":"@rule.test(@source, node)\n\nbegin\n  tag = @source.env.tags[node.name]\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\n  return true\nend\n\nvisit_tag(node, tag)\n\ntrue\n"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag::Set)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Set"}],"args_string":"(node, tag : Crinja::Tag::Set)","args_html":"(node, tag : <a href=\"../../Crinja/Tag/Set.html\">Crinja::Tag::Set</a>)","location":{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":22,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L22"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Set"}],"visibility":"Public","body":"@rule.test(@source, node, tag)\nbegin\n  variables = tag.validate_arguments(node, @source.env)\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\n  return\nend\n\nvariables.each_value(&.accept(self))\n"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag::For)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::For"}],"args_string":"(node, tag : Crinja::Tag::For)","args_html":"(node, tag : <a href=\"../../Crinja/Tag/For.html\">Crinja::Tag::For</a>)","location":{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L34"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::For"}],"visibility":"Public","body":"begin\n  _, collection_expr, if_expr, _ = tag.validate_arguments(node, @source.env)\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\n  return\nend\n\ncollection_expr.accept(self)\nif_expr.try(&.accept(self))\n\n@rule.test(@source, node, tag)\n"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag::If|Crinja::Tag::If::Elif)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::If | Crinja::Tag::If::Elif"}],"args_string":"(node, tag : Crinja::Tag::If | Crinja::Tag::If::Elif)","args_html":"(node, tag : <a href=\"../../Crinja/Tag/If.html\">Crinja::Tag::If</a> | <a href=\"../../Crinja/Tag/If/Elif.html\">Crinja::Tag::If::Elif</a>)","location":{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":48,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L48"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::If | Crinja::Tag::If::Elif"}],"visibility":"Public","body":"@rule.test(@source, node, tag)\n\nbegin\n  expr = tag.validate_arguments(node, @source.env)\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\n  return\nend\n\nexpr.accept(self)\n"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag::Call)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Call"}],"args_string":"(node, tag : Crinja::Tag::Call)","args_html":"(node, tag : <a href=\"../../Crinja/Tag/Call.html\">Crinja::Tag::Call</a>)","location":{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":61,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L61"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Call"}],"visibility":"Public","body":"@rule.test(@source, node, tag)\n\nbegin\n  _, call = tag.validate_arguments(node, @source.env)\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\n  return\nend\n\ncall.accept(self)\n"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag::Import)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Import"}],"args_string":"(node, tag : Crinja::Tag::Import)","args_html":"(node, tag : <a href=\"../../Crinja/Tag/Import.html\">Crinja::Tag::Import</a>)","location":{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":74,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L74"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Import"}],"visibility":"Public","body":"@rule.test(@source, node, tag)\n\nbegin\n  name_expr, _ = tag.validate_arguments(node, @source.env)\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\n  return\nend\n\nname_expr.accept(self)\n"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag"}],"args_string":"(node, tag : Crinja::Tag)","args_html":"(node, tag : <a href=\"../../Crinja/Tag.html\">Crinja::Tag</a>)","location":{"filename":"src/ameba/ast/visitor/tag_visitor.cr","line_number":18,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/ast/visitor/tag_visitor.cr#L18"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag"}],"visibility":"Public","body":"@rule.test(@source, node, tag)"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Config","path":"Ameba/Config.html","kind":"class","full_name":"Ameba::Config","name":"Config","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Ameba/GlobUtils","kind":"module","full_name":"Ameba::GlobUtils","name":"GlobUtils"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/config.cr","line_number":39,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L39"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"AVAILABLE_FORMATTERS","name":"AVAILABLE_FORMATTERS","value":"{progress: Formatter::DotFormatter, todo: Formatter::TODOFormatter, flycheck: Formatter::FlycheckFormatter, silent: Formatter::BaseFormatter, disabled: Formatter::DisabledFormatter, json: Formatter::JSONFormatter, \"github-actions\": Formatter::GitHubActionsFormatter}"},{"id":"DEFAULT_GLOBS","name":"DEFAULT_GLOBS","value":"[\"**/*.html.j2\", \"**/*.jinja2\", \"!lib\", \"!venv\", \"!.venv\"] of ::String"},{"id":"DEFAULT_PATH","name":"DEFAULT_PATH","value":"Path[Dir.current] / FILENAME"},{"id":"DEFAULT_PATHS","name":"DEFAULT_PATHS","value":"{Path[\"~\"] / FILENAME, Path[XDG_CONFIG_HOME] / \"crinja_lint/config.yml\"}"},{"id":"FILENAME","name":"FILENAME","value":"\".crinja_lint.yml\""},{"id":"XDG_CONFIG_HOME","name":"XDG_CONFIG_HOME","value":"ENV.fetch(\"XDG_CONFIG_HOME\", \"~/.config\")"}],"included_modules":[{"html_id":"crinja_lint/Ameba/GlobUtils","kind":"module","full_name":"Ameba::GlobUtils","name":"GlobUtils"}],"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"A configuration entry for `Ameba::Runner`.\n\nConfig can be loaded from configuration YAML file and adjusted.\n\n```\nconfig = Config.load\nconfig.formatter = my_formatter\n```\n\nBy default config loads `.ameba.yml` file located in a current\nworking directory.\n\nIf it cannot be found until reaching the root directory, then it will be\nsearched for in the userâ€™s global config locations, which consists of a\ndotfile or a config file inside the XDG Base Directory specification.\n\n- `~/.ameba.yml`\n- `$XDG_CONFIG_HOME/ameba/config.yml` (expands to `~/.config/ameba/config.yml`\n  if `$XDG_CONFIG_HOME` is not set)\n\nIf both files exist, the dotfile will be selected.\n\nAs an example, if Ameba is invoked from inside `/path/to/project/lib/utils`,\nthen it will use the config as specified inside the first of the following files:\n\n- `/path/to/project/lib/utils/.ameba.yml`\n- `/path/to/project/lib/.ameba.yml`\n- `/path/to/project/.ameba.yml`\n- `/path/to/.ameba.yml`\n- `/path/.ameba.yml`\n- `/.ameba.yml`\n- `~/.ameba.yml`\n- `~/.config/ameba/config.yml`","summary":"<p>A configuration entry for <code><a href=\"../Ameba/Runner.html\">Ameba::Runner</a></code>.</p>","class_methods":[{"html_id":"formatter_names-class-method","name":"formatter_names","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":165,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L165"},"def":{"name":"formatter_names","visibility":"Public","body":"AVAILABLE_FORMATTERS.keys.join('|')"},"external_var":false},{"html_id":"load(path=nil,colors=true,skip_reading_config=false)-class-method","name":"load","doc":"Loads YAML configuration file by `path`.\n\n```\nconfig = Ameba::Config.load\n```","summary":"<p>Loads YAML configuration file by <code>path</code>.</p>","abstract":false,"args":[{"name":"path","default_value":"nil","external_name":"path","restriction":""},{"name":"colors","default_value":"true","external_name":"colors","restriction":""},{"name":"skip_reading_config","default_value":"false","external_name":"skip_reading_config","restriction":""}],"args_string":"(path = nil, colors = true, skip_reading_config = false)","args_html":"(path = <span class=\"n\">nil</span>, colors = <span class=\"n\">true</span>, skip_reading_config = <span class=\"n\">false</span>)","location":{"filename":"src/ameba/config.cr","line_number":130,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L130"},"def":{"name":"load","args":[{"name":"path","default_value":"nil","external_name":"path","restriction":""},{"name":"colors","default_value":"true","external_name":"colors","restriction":""},{"name":"skip_reading_config","default_value":"false","external_name":"skip_reading_config","restriction":""}],"visibility":"Public","body":"begin\n  Colorize.enabled = colors\n  content = if skip_reading_config\n    \"{}\"\n  else\n    (read_config(path)) || \"{}\"\n  end\n  Config.new(YAML.parse(content))\nrescue e\n  raise(\"Unable to load config file: #{e.message}\")\nend"},"external_var":false}],"instance_methods":[{"html_id":"autocorrect=(autocorrect:Bool)-instance-method","name":"autocorrect=","doc":"Returns `true` if correctable issues should be autocorrected.","summary":"<p>Returns <code>true</code> if correctable issues should be autocorrected.</p>","abstract":false,"args":[{"name":"autocorrect","external_name":"autocorrect","restriction":"::Bool"}],"args_string":"(autocorrect : Bool)","args_html":"(autocorrect : Bool)","location":{"filename":"src/ameba/config.cr","line_number":96,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L96"},"def":{"name":"autocorrect=","args":[{"name":"autocorrect","external_name":"autocorrect","restriction":"::Bool"}],"visibility":"Public","body":"@autocorrect = autocorrect"},"external_var":false},{"html_id":"autocorrect?:Bool-instance-method","name":"autocorrect?","doc":"Returns `true` if correctable issues should be autocorrected.","summary":"<p>Returns <code>true</code> if correctable issues should be autocorrected.</p>","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":96,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L96"},"def":{"name":"autocorrect?","visibility":"Public","body":"@autocorrect"},"external_var":false},{"html_id":"excluded:Array(String)-instance-method","name":"excluded","doc":"Represents a list of paths to exclude from globs.\nCan have wildcards.\n\n```\nconfig = Ameba::Config.load\nconfig.excluded = [\"spec\", \"src/server/*.cr\"]\n```","summary":"<p>Represents a list of paths to exclude from globs.</p>","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":93,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L93"},"def":{"name":"excluded","return_type":"Array(String)","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String))-instance-method","name":"excluded=","doc":"Represents a list of paths to exclude from globs.\nCan have wildcards.\n\n```\nconfig = Ameba::Config.load\nconfig.excluded = [\"spec\", \"src/server/*.cr\"]\n```","summary":"<p>Represents a list of paths to exclude from globs.</p>","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String)"}],"args_string":"(excluded : Array(String))","args_html":"(excluded : Array(String))","location":{"filename":"src/ameba/config.cr","line_number":93,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L93"},"def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String)"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"formatter:Formatter::BaseFormatter-instance-method","name":"formatter","doc":"Returns a formatter to be used while inspecting files.\nIf formatter is not set, it will return default formatter.\n\n```\nconfig = Ameba::Config.load\nconfig.formatter = custom_formatter\nconfig.formatter\n```","summary":"<p>Returns a formatter to be used while inspecting files.</p>","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":197,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L197"},"def":{"name":"formatter","return_type":"Formatter::BaseFormatter","visibility":"Public","body":"if (__temp_382 = @formatter).nil?\n  @formatter = (Formatter::DotFormatter.new)\nelse\n  __temp_382\nend"},"external_var":false},{"html_id":"formatter=(name:String|Symbol)-instance-method","name":"formatter=","doc":"Sets formatter by name.\n\n```\nconfig = Ameba::Config.load\nconfig.formatter = :progress\n```","summary":"<p>Sets formatter by name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"args_string":"(name : String | Symbol)","args_html":"(name : String | Symbol)","location":{"filename":"src/ameba/config.cr","line_number":207,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L207"},"def":{"name":"formatter=","args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"visibility":"Public","body":"if formatter = AVAILABLE_FORMATTERS[name]?\nelse\n  raise(\"Unknown formatter `#{name}`. Use one of #{Config.formatter_names}.\")\nend\n@formatter = formatter.new\n"},"external_var":false},{"html_id":"formatter=(formatter:Formatter::BaseFormatter)-instance-method","name":"formatter=","doc":"Returns a formatter to be used while inspecting files.\nIf formatter is not set, it will return default formatter.\n\n```\nconfig = Ameba::Config.load\nconfig.formatter = custom_formatter\nconfig.formatter\n```","summary":"<p>Returns a formatter to be used while inspecting files.</p>","abstract":false,"args":[{"name":"formatter","external_name":"formatter","restriction":"Formatter::BaseFormatter"}],"args_string":"(formatter : Formatter::BaseFormatter)","args_html":"(formatter : <a href=\"../Ameba/Formatter/BaseFormatter.html\">Formatter::BaseFormatter</a>)","location":{"filename":"src/ameba/config.cr","line_number":197,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L197"},"def":{"name":"formatter=","args":[{"name":"formatter","external_name":"formatter","restriction":"Formatter::BaseFormatter"}],"visibility":"Public","body":"@formatter = formatter"},"external_var":false},{"html_id":"globs:Array(String)-instance-method","name":"globs","doc":"Returns a list of paths (with wildcards) to files.\nRepresents a list of sources to be inspected.\nIf globs are not set, it will return default list of files.\n\n```\nconfig = Ameba::Config.load\nconfig.globs = [\"**/*.cr\"]\nconfig.globs\n```","summary":"<p>Returns a list of paths (with wildcards) to files.</p>","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":84,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L84"},"def":{"name":"globs","return_type":"Array(String)","visibility":"Public","body":"@globs"},"external_var":false},{"html_id":"globs=(globs:Array(String))-instance-method","name":"globs=","doc":"Returns a list of paths (with wildcards) to files.\nRepresents a list of sources to be inspected.\nIf globs are not set, it will return default list of files.\n\n```\nconfig = Ameba::Config.load\nconfig.globs = [\"**/*.cr\"]\nconfig.globs\n```","summary":"<p>Returns a list of paths (with wildcards) to files.</p>","abstract":false,"args":[{"name":"globs","external_name":"globs","restriction":"Array(String)"}],"args_string":"(globs : Array(String))","args_html":"(globs : Array(String))","location":{"filename":"src/ameba/config.cr","line_number":84,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L84"},"def":{"name":"globs=","args":[{"name":"globs","external_name":"globs","restriction":"Array(String)"}],"visibility":"Public","body":"@globs = globs"},"external_var":false},{"html_id":"rules:Array(Rule::Base)-instance-method","name":"rules","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":69,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L69"},"def":{"name":"rules","return_type":"Array(Rule::Base)","visibility":"Public","body":"@rules"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":70,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L70"},"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../Ameba/Severity.html\">Ameba::Severity</a>)","location":{"filename":"src/ameba/config.cr","line_number":70,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L70"},"def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"sources-instance-method","name":"sources","doc":"Returns a list of sources matching globs and excluded sections.\n\n```\nconfig = Ameba::Config.load\nconfig.sources # => list of default sources\nconfig.globs = [\"**/*.cr\", \"**/*.ecr\"]\nconfig.excluded = [\"spec\"]\nconfig.sources # => list of sources pointing to files found by the wildcards\n```","summary":"<p>Returns a list of sources matching globs and excluded sections.</p>","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":180,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L180"},"def":{"name":"sources","visibility":"Public","body":"@sources || (@sources = if file = stdin_filename\n  [Source.new(STDIN.gets_to_end, file)]\nelse\n  ((find_files_by_globs(globs)) - (find_files_by_globs(excluded))).map do |path|\n    (Source.new(File.read(path), path)).as(Source)\n  end\nend)"},"external_var":false},{"html_id":"sources=(sources:Array(Source)|Nil)-instance-method","name":"sources=","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":"Array(Source) | ::Nil"}],"args_string":"(sources : Array(Source) | Nil)","args_html":"(sources : Array(<a href=\"../Ameba/Source.html\">Source</a>) | Nil)","location":{"filename":"src/ameba/config.cr","line_number":169,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L169"},"def":{"name":"sources=","args":[{"name":"sources","external_name":"sources","restriction":"Array(Source) | ::Nil"}],"visibility":"Public","body":"@sources = sources"},"external_var":false},{"html_id":"stdin_filename:String|Nil-instance-method","name":"stdin_filename","doc":"Returns a filename if reading source file from STDIN.","summary":"<p>Returns a filename if reading source file from STDIN.</p>","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":99,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L99"},"def":{"name":"stdin_filename","return_type":"String | ::Nil","visibility":"Public","body":"@stdin_filename"},"external_var":false},{"html_id":"stdin_filename=(stdin_filename:String|Nil)-instance-method","name":"stdin_filename=","doc":"Returns a filename if reading source file from STDIN.","summary":"<p>Returns a filename if reading source file from STDIN.</p>","abstract":false,"args":[{"name":"stdin_filename","external_name":"stdin_filename","restriction":"String | ::Nil"}],"args_string":"(stdin_filename : String | Nil)","args_html":"(stdin_filename : String | Nil)","location":{"filename":"src/ameba/config.cr","line_number":99,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L99"},"def":{"name":"stdin_filename=","args":[{"name":"stdin_filename","external_name":"stdin_filename","restriction":"String | ::Nil"}],"visibility":"Public","body":"@stdin_filename = stdin_filename"},"external_var":false},{"html_id":"update_rule(name,enabled=true,excluded=nil)-instance-method","name":"update_rule","doc":"Updates rule properties.\n\n```\nconfig = Ameba::Config.load\nconfig.update_rule \"MyRuleName\", enabled: false\n```","summary":"<p>Updates rule properties.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"enabled","default_value":"true","external_name":"enabled","restriction":""},{"name":"excluded","default_value":"nil","external_name":"excluded","restriction":""}],"args_string":"(name, enabled = true, excluded = nil)","args_html":"(name, enabled = <span class=\"n\">true</span>, excluded = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/config.cr","line_number":230,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L230"},"def":{"name":"update_rule","args":[{"name":"name","external_name":"name","restriction":""},{"name":"enabled","default_value":"true","external_name":"enabled","restriction":""},{"name":"excluded","default_value":"nil","external_name":"excluded","restriction":""}],"visibility":"Public","body":"rule = @rules.find() do |__arg3|\n  __arg3.name == name\nend\nif rule\nelse\n  raise(ArgumentError.new(\"Rule `#{name}` does not exist\"))\nend\n\nrule.tap(&.enabled = enabled).tap(&.excluded = excluded)\n"},"external_var":false},{"html_id":"update_rules(names:Enumerable(String),enabled=true,excluded=nil)-instance-method","name":"update_rules","doc":"Updates rules properties.\n\n```\nconfig = Ameba::Config.load\nconfig.update_rules %w[Rule1 Rule2], enabled: true\n```\n\nalso it allows to update groups of rules:\n\n```\nconfig.update_rules %w[Group1 Group2], enabled: true\n```","summary":"<p>Updates rules properties.</p>","abstract":false,"args":[{"name":"names","external_name":"names","restriction":"Enumerable(String)"},{"name":"enabled","default_value":"true","external_name":"enabled","restriction":""},{"name":"excluded","default_value":"nil","external_name":"excluded","restriction":""}],"args_string":"(names : Enumerable(String), enabled = true, excluded = nil)","args_html":"(names : Enumerable(String), enabled = <span class=\"n\">true</span>, excluded = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/config.cr","line_number":251,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L251"},"def":{"name":"update_rules","args":[{"name":"names","external_name":"names","restriction":"Enumerable(String)"},{"name":"enabled","default_value":"true","external_name":"enabled","restriction":""},{"name":"excluded","default_value":"nil","external_name":"excluded","restriction":""}],"visibility":"Public","body":"names.each do |name|\n  if rules = @rule_groups[name]?\n    rules.each do |rule|\n      rule.enabled = enabled\n      rule.excluded = excluded\n    end\n  else\n    update_rule(name, enabled, excluded)\n  end\nend"},"external_var":false},{"html_id":"version:SemanticVersion|Nil-instance-method","name":"version","doc":"Returns an ameba version to be used by `Ameba::Runner`.","summary":"<p>Returns an ameba version to be used by <code><a href=\"../Ameba/Runner.html\">Ameba::Runner</a></code>.</p>","abstract":false,"location":{"filename":"src/ameba/config.cr","line_number":73,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L73"},"def":{"name":"version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@version"},"external_var":false},{"html_id":"version=(version:SemanticVersion|Nil)-instance-method","name":"version=","doc":"Returns an ameba version to be used by `Ameba::Runner`.","summary":"<p>Returns an ameba version to be used by <code><a href=\"../Ameba/Runner.html\">Ameba::Runner</a></code>.</p>","abstract":false,"args":[{"name":"version","external_name":"version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(version : SemanticVersion | Nil)","args_html":"(version : SemanticVersion | Nil)","location":{"filename":"src/ameba/config.cr","line_number":73,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L73"},"def":{"name":"version=","args":[{"name":"version","external_name":"version","restriction":"SemanticVersion | ::Nil"}],"visibility":"Public","body":"@version = version"},"external_var":false},{"html_id":"version=(version:String)-instance-method","name":"version=","doc":"Sets version from string.\n\n```\nconfig = Ameba::Config.load\nconfig.version = \"1.6.0\"\n```","summary":"<p>Sets version from string.</p>","abstract":false,"args":[{"name":"version","external_name":"version","restriction":"String"}],"args_string":"(version : String)","args_html":"(version : String)","location":{"filename":"src/ameba/config.cr","line_number":220,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/config.cr#L220"},"def":{"name":"version=","args":[{"name":"version","external_name":"version","restriction":"String"}],"visibility":"Public","body":"@version = SemanticVersion.parse(version)"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter","path":"Ameba/Formatter.html","kind":"module","full_name":"Ameba::Formatter","name":"Formatter","abstract":false,"locations":[{"filename":"src/ameba/formatter/base_formatter.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L4"},{"filename":"src/ameba/formatter/disabled_formatter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/disabled_formatter.cr#L1"},{"filename":"src/ameba/formatter/dot_formatter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/dot_formatter.cr#L3"},{"filename":"src/ameba/formatter/explain_formatter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/explain_formatter.cr#L3"},{"filename":"src/ameba/formatter/flycheck_formatter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/flycheck_formatter.cr#L1"},{"filename":"src/ameba/formatter/github_actions_formatter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/github_actions_formatter.cr#L3"},{"filename":"src/ameba/formatter/json_formatter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/json_formatter.cr#L3"},{"filename":"src/ameba/formatter/todo_formatter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/todo_formatter.cr#L1"},{"filename":"src/ameba/formatter/util.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"A module that utilizes Ameba's formatters.","summary":"<p>A module that utilizes Ameba's formatters.</p>","types":[{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","path":"Ameba/Formatter/BaseFormatter.html","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/base_formatter.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L8"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crinja_lint/Ameba/Formatter/DisabledFormatter","kind":"class","full_name":"Ameba::Formatter::DisabledFormatter","name":"DisabledFormatter"},{"html_id":"crinja_lint/Ameba/Formatter/DotFormatter","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter"},{"html_id":"crinja_lint/Ameba/Formatter/FlycheckFormatter","kind":"class","full_name":"Ameba::Formatter::FlycheckFormatter","name":"FlycheckFormatter"},{"html_id":"crinja_lint/Ameba/Formatter/GitHubActionsFormatter","kind":"class","full_name":"Ameba::Formatter::GitHubActionsFormatter","name":"GitHubActionsFormatter"},{"html_id":"crinja_lint/Ameba/Formatter/JSONFormatter","kind":"class","full_name":"Ameba::Formatter::JSONFormatter","name":"JSONFormatter"},{"html_id":"crinja_lint/Ameba/Lsp/Provider/DiagnosticsFormatter","kind":"class","full_name":"Ameba::Lsp::Provider::DiagnosticsFormatter","name":"DiagnosticsFormatter"}],"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A base formatter for all formatters. It uses `output` IO\nto report results and also implements stub methods for\ncallbacks in `Ameba::Runner#run` method.","summary":"<p>A base formatter for all formatters.</p>","constructors":[{"html_id":"new(output:IO=STDOUT)-class-method","name":"new","abstract":false,"args":[{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"::IO"}],"args_string":"(output : IO = STDOUT)","args_html":"(output : IO = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/ameba/formatter/base_formatter.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L13"},"def":{"name":"new","args":[{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"::IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"config:Hash(Symbol,Bool|String)-instance-method","name":"config","abstract":false,"location":{"filename":"src/ameba/formatter/base_formatter.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L11"},"def":{"name":"config","visibility":"Public","body":"@config"},"external_var":false},{"html_id":"finished(sources):Nil-instance-method","name":"finished","doc":"Callback that indicates when inspection is finished.\nA list of inspected sources is passed as an argument.","summary":"<p>Callback that indicates when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/base_formatter.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L34"},"def":{"name":"finished","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":""},"external_var":false},{"html_id":"output:IO::FileDescriptor|IO::Memory-instance-method","name":"output","doc":"TODO: allow other IOs","summary":"<p><span class=\"flag orange\">TODO</span>  allow other IOs</p>","abstract":false,"location":{"filename":"src/ameba/formatter/base_formatter.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L10"},"def":{"name":"output","return_type":"IO::FileDescriptor | IO::Memory","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"source_finished(source:Source):Nil-instance-method","name":"source_finished","doc":"Callback that indicates when source inspection is finished.\nA corresponding source is passed as an argument.\n\nWARNING: This method needs to be MT safe","summary":"<p>Callback that indicates when source inspection is finished.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source) : Nil","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>) : Nil","location":{"filename":"src/ameba/formatter/base_formatter.cr","line_number":30,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L30"},"def":{"name":"source_finished","args":[{"name":"source","external_name":"source","restriction":"Source"}],"return_type":"Nil","visibility":"Public","body":""},"external_var":false},{"html_id":"source_started(source:Source):Nil-instance-method","name":"source_started","doc":"Callback that indicates when source inspection is started.\nA corresponding source is passed as an argument.\n\nWARNING: This method needs to be MT safe","summary":"<p>Callback that indicates when source inspection is started.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source) : Nil","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>) : Nil","location":{"filename":"src/ameba/formatter/base_formatter.cr","line_number":24,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L24"},"def":{"name":"source_started","args":[{"name":"source","external_name":"source","restriction":"Source"}],"return_type":"Nil","visibility":"Public","body":""},"external_var":false},{"html_id":"started(sources):Nil-instance-method","name":"started","doc":"Callback that indicates when inspecting is started.\nA list of sources to inspect is passed as an argument.","summary":"<p>Callback that indicates when inspecting is started.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/base_formatter.cr","line_number":18,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/base_formatter.cr#L18"},"def":{"name":"started","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":""},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/DisabledFormatter","path":"Ameba/Formatter/DisabledFormatter.html","kind":"class","full_name":"Ameba::Formatter::DisabledFormatter","name":"DisabledFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/disabled_formatter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/disabled_formatter.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that shows all disabled lines by inline directives.","summary":"<p>A formatter that shows all disabled lines by inline directives.</p>","instance_methods":[{"html_id":"finished(sources):Nil-instance-method","name":"finished","doc":"Callback that indicates when inspection is finished.\nA list of inspected sources is passed as an argument.","summary":"<p>Callback that indicates when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/disabled_formatter.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/disabled_formatter.cr#L4"},"def":{"name":"finished","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"output << \"Disabled rules using inline directives:\\n\\n\"\n\nsources.each do |source|\n  source.issues.each do |issue|\n    if issue.disabled?\n    else\n      next\n    end\n    if loc = issue.location\n    else\n      next\n    end\n\n    output << (\"#{source.path}:#{loc.line_number}\".colorize(:cyan))\n    output << \" #{issue.rule.name}\\n\"\n  end\nend\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/DotFormatter","path":"Ameba/Formatter/DotFormatter.html","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"},{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/dot_formatter.cr","line_number":6,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/dot_formatter.cr#L6"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"}],"subclasses":[{"html_id":"crinja_lint/Ameba/Formatter/TODOFormatter","kind":"class","full_name":"Ameba::Formatter::TODOFormatter","name":"TODOFormatter"}],"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that shows a progress of inspection in a terminal using dots.\nIt is similar to Crystal's dot formatter for specs.","summary":"<p>A formatter that shows a progress of inspection in a terminal using dots.</p>","instance_methods":[{"html_id":"finished(sources):Nil-instance-method","name":"finished","doc":"Reports a message when inspection is finished.","summary":"<p>Reports a message when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/dot_formatter.cr","line_number":27,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/dot_formatter.cr#L27"},"def":{"name":"finished","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"output.flush\noutput << \"\\n\\n\"\n\nshow_affected_code = !config[:without_affected_code]?\nfailed_sources = sources.reject(&.valid?)\n\nfailed_sources.each do |source|\n  source.issues.each do |issue|\n    if issue.disabled?\n      next\n    end\n    if (location = issue.location).nil?\n      next\n    end\n\n    output.print(location.colorize(:cyan))\n    if issue.correctable?\n      if config[:autocorrect]?\n        output.print(\" [Corrected]\".colorize(:green))\n      else\n        output.print(\" [Correctable]\".colorize(:yellow))\n      end\n    end\n    output.puts\n    output.puts((\"[%s] %s: %s\" % {issue.rule.severity.symbol, issue.rule.name, issue.message}).colorize(issue.rule.severity.color))\n\n    if show_affected_code && (code = affected_code(issue))\n      output << (code.colorize(:default))\n    end\n\n    output.puts\n  end\nend\n\noutput.puts(finished_in_message(@started_at, Time.monotonic))\noutput.puts(final_message(sources, failed_sources))\n"},"external_var":false},{"html_id":"source_finished(source:Source):Nil-instance-method","name":"source_finished","doc":"Reports a result of the inspection of a corresponding source.","summary":"<p>Reports a result of the inspection of a corresponding source.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source) : Nil","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>) : Nil","location":{"filename":"src/ameba/formatter/dot_formatter.cr","line_number":21,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/dot_formatter.cr#L21"},"def":{"name":"source_finished","args":[{"name":"source","external_name":"source","restriction":"Source"}],"return_type":"Nil","visibility":"Public","body":"sym = source.valid? ? \".\".colorize(:green) : \"F\".colorize(:red)\n@mutex.synchronize do\n  output << sym\nend\n"},"external_var":false},{"html_id":"started(sources):Nil-instance-method","name":"started","doc":"Reports a message when inspection is started.","summary":"<p>Reports a message when inspection is started.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/dot_formatter.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/dot_formatter.cr#L13"},"def":{"name":"started","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@started_at = Time.monotonic\n\noutput.puts(started_message(sources.size))\noutput.puts\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/ExplainFormatter","path":"Ameba/Formatter/ExplainFormatter.html","kind":"class","full_name":"Ameba::Formatter::ExplainFormatter","name":"ExplainFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/explain_formatter.cr","line_number":6,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/explain_formatter.cr#L6"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"}],"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that shows the detailed explanation of the issue at\na specific location.","summary":"<p>A formatter that shows the detailed explanation of the issue at a specific location.</p>","constructors":[{"html_id":"new(output:IO,location)-class-method","name":"new","doc":"Creates a new instance of `ExplainFormatter`.\n\nAccepts *output* which indicates the io where the explanation will be written to.\nSecond argument is *location* which indicates the location to explain.\n\n```\nExplainFormatter.new output, {\n  file:   path,\n  line:   line_number,\n  column: column_number,\n}\n```","summary":"<p>Creates a new instance of <code><a href=\"../../Ameba/Formatter/ExplainFormatter.html\">ExplainFormatter</a></code>.</p>","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"::IO"},{"name":"location","external_name":"location","restriction":""}],"args_string":"(output : IO, location)","args_html":"(output : IO, location)","location":{"filename":"src/ameba/formatter/explain_formatter.cr","line_number":24,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/explain_formatter.cr#L24"},"def":{"name":"new","args":[{"name":"output","external_name":"output","restriction":"::IO"},{"name":"location","external_name":"location","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(output, location)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"finished(sources):Nil-instance-method","name":"finished","doc":"Reports the explanations at the *@location*.","summary":"<p>Reports the explanations at the <em>@location</em>.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/explain_formatter.cr","line_number":33,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/explain_formatter.cr#L33"},"def":{"name":"finished","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"source = sources.find() do |__arg0|\n  __arg0.path == @location.filename\nend\nif source\nelse\n  return\nend\n\nissue = source.issues.find() do |__arg1|\n  __arg1.location == @location\nend\nif issue\nelse\n  return\nend\n\nexplain(source, issue)\n"},"external_var":false},{"html_id":"location:Crystal::Location-instance-method","name":"location","abstract":false,"location":{"filename":"src/ameba/formatter/explain_formatter.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/explain_formatter.cr#L10"},"def":{"name":"location","return_type":"Crystal::Location","visibility":"Public","body":"@location"},"external_var":false},{"html_id":"output:IO::FileDescriptor|IO::Memory-instance-method","name":"output","abstract":false,"location":{"filename":"src/ameba/formatter/explain_formatter.cr","line_number":9,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/explain_formatter.cr#L9"},"def":{"name":"output","return_type":"IO::FileDescriptor | IO::Memory","visibility":"Public","body":"@output"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/FlycheckFormatter","path":"Ameba/Formatter/FlycheckFormatter.html","kind":"class","full_name":"Ameba::Formatter::FlycheckFormatter","name":"FlycheckFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/flycheck_formatter.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/flycheck_formatter.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"instance_methods":[{"html_id":"source_finished(source:Source):Nil-instance-method","name":"source_finished","doc":"Callback that indicates when source inspection is finished.\nA corresponding source is passed as an argument.\n\nWARNING: This method needs to be MT safe","summary":"<p>Callback that indicates when source inspection is finished.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source) : Nil","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>) : Nil","location":{"filename":"src/ameba/formatter/flycheck_formatter.cr","line_number":5,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/flycheck_formatter.cr#L5"},"def":{"name":"source_finished","args":[{"name":"source","external_name":"source","restriction":"Source"}],"return_type":"Nil","visibility":"Public","body":"source.issues.each do |issue|\n  if issue.disabled?\n    next\n  end\n  if issue.correctable? && config[:autocorrect]?\n    next\n  end\n\n  if loc = issue.location\n  else\n    next\n  end\n\n  @mutex.synchronize do\n    output.printf(\"%s:%d:%d: %s: [%s] %s\\n\", source.path, loc.line_number, loc.column_number, issue.rule.severity.symbol, issue.rule.name, issue.message.gsub('\\n', \" \"))\n  end\nend"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/GitHubActionsFormatter","path":"Ameba/Formatter/GitHubActionsFormatter.html","kind":"class","full_name":"Ameba::Formatter::GitHubActionsFormatter","name":"GitHubActionsFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"},{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/github_actions_formatter.cr","line_number":7,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/github_actions_formatter.cr#L7"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"}],"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that outputs issues in a GitHub Actions compatible format.\n\nSee [GitHub Actions documentation](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions) for details.","summary":"<p>A formatter that outputs issues in a GitHub Actions compatible format.</p>","instance_methods":[{"html_id":"finished(sources):Nil-instance-method","name":"finished","doc":"Reports a message when inspection is finished.","summary":"<p>Reports a message when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/github_actions_formatter.cr","line_number":51,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/github_actions_formatter.cr#L51"},"def":{"name":"finished","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"if step_summary_file = ENV[\"GITHUB_STEP_SUMMARY\"]?\nelse\n  return\nend\n\nif started_at = @started_at\n  time_elapsed = Time.monotonic - started_at\nend\n\nFile.write(step_summary_file, summary(sources, time_elapsed))\n"},"external_var":false},{"html_id":"source_finished(source:Source):Nil-instance-method","name":"source_finished","doc":"Reports a result of the inspection of a corresponding source.","summary":"<p>Reports a result of the inspection of a corresponding source.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source) : Nil","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>) : Nil","location":{"filename":"src/ameba/formatter/github_actions_formatter.cr","line_number":19,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/github_actions_formatter.cr#L19"},"def":{"name":"source_finished","args":[{"name":"source","external_name":"source","restriction":"Source"}],"return_type":"Nil","visibility":"Public","body":"source.issues.each do |issue|\n  if issue.disabled?\n    next\n  end\n\n  @mutex.synchronize do\n    output << \"::\"\n    output << (command_name(issue.rule.severity))\n    output << \" \"\n    output << \"file=\"\n    output << (escape_property(source.path))\n    if location = issue.location\n      output << \",line=\"\n      output << location.line_number\n      output << \",col=\"\n      output << location.column_number\n    end\n    if end_location = issue.end_location\n      output << \",endLine=\"\n      output << end_location.line_number\n      output << \",endColumn=\"\n      output << end_location.column_number\n    end\n    output << \",title=\"\n    output << (escape_property(issue.rule.name))\n    output << \"::\"\n    output << (escape_data(issue.message))\n    output << \"\\n\"\n  end\nend"},"external_var":false},{"html_id":"started(sources):Nil-instance-method","name":"started","doc":"Reports a message when inspection is started.","summary":"<p>Reports a message when inspection is started.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/github_actions_formatter.cr","line_number":14,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/github_actions_formatter.cr#L14"},"def":{"name":"started","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@started_at = Time.monotonic"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/JSONFormatter","path":"Ameba/Formatter/JSONFormatter.html","kind":"class","full_name":"Ameba::Formatter::JSONFormatter","name":"JSONFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/json_formatter.cr","line_number":65,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/json_formatter.cr#L65"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that produces the result in a json format.\n\nExample:\n\n```json\n{\n  \"metadata\": {\n    \"ameba_version\": \"x.x.x\",\n    \"crystal_version\": \"x.x.x\",\n  },\n  \"sources\": [\n    {\n      \"issues\": [\n        {\n          \"location\": {\n            \"column\": 7,\n            \"line\": 17,\n          },\n          \"end_location\": {\n            \"column\": 20,\n            \"line\": 17,\n          },\n          \"message\": \"Useless assignment to variable `a`\",\n          \"rule_name\": \"UselessAssign\",\n          \"severity\": \"Convention\",\n        },\n        {\n          \"location\": {\n            \"column\": 7,\n            \"line\": 18,\n          },\n          \"end_location\": {\n            \"column\": 8,\n            \"line\": 18,\n          },\n          \"message\": \"Useless assignment to variable `a`\",\n          \"rule_name\": \"UselessAssign\",\n        },\n        {\n          \"location\": {\n            \"column\": 7,\n            \"line\": 19,\n          },\n          \"end_location\": {\n            \"column\": 9,\n            \"line\": 19,\n          },\n          \"message\": \"Useless assignment to variable `a`\",\n          \"rule_name\": \"UselessAssign\",\n          \"severity\": \"Convention\",\n        },\n      ],\n      \"path\": \"src/ameba/formatter/json_formatter.cr\",\n    },\n  ],\n  \"summary\": {\n    \"issues_count\": 3,\n    \"target_sources_count\": 1,\n  }\n}\n```","summary":"<p>A formatter that produces the result in a json format.</p>","instance_methods":[{"html_id":"finished(sources):Nil-instance-method","name":"finished","doc":"Callback that indicates when inspection is finished.\nA list of inspected sources is passed as an argument.","summary":"<p>Callback that indicates when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/json_formatter.cr","line_number":95,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/json_formatter.cr#L95"},"def":{"name":"finished","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@result.to_json(@output)"},"external_var":false},{"html_id":"source_finished(source:Source):Nil-instance-method","name":"source_finished","doc":"Callback that indicates when source inspection is finished.\nA corresponding source is passed as an argument.\n\nWARNING: This method needs to be MT safe","summary":"<p>Callback that indicates when source inspection is finished.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source) : Nil","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>) : Nil","location":{"filename":"src/ameba/formatter/json_formatter.cr","line_number":73,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/json_formatter.cr#L73"},"def":{"name":"source_finished","args":[{"name":"source","external_name":"source","restriction":"Source"}],"return_type":"Nil","visibility":"Public","body":"json_source = AsJSON::Source.new(source.path)\n\nsource.issues.each do |issue|\n  if issue.disabled?\n    next\n  end\n  if issue.correctable? && config[:autocorrect]?\n    next\n  end\n\n  json_source.issues << (AsJSON::Issue.new(issue.rule.name, issue.rule.severity.to_s, issue.location, issue.end_location, issue.message))\nend\n\n@mutex.synchronize do\n  __temp_392 = @result.summary\n  __temp_392.issues_count = __temp_392.issues_count + json_source.issues.size\n  @result.sources << json_source\nend\n"},"external_var":false},{"html_id":"started(sources):Nil-instance-method","name":"started","doc":"Callback that indicates when inspecting is started.\nA list of sources to inspect is passed as an argument.","summary":"<p>Callback that indicates when inspecting is started.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/json_formatter.cr","line_number":69,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/json_formatter.cr#L69"},"def":{"name":"started","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@result.summary.target_sources_count = sources.size"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/TODOFormatter","path":"Ameba/Formatter/TODOFormatter.html","kind":"class","full_name":"Ameba::Formatter::TODOFormatter","name":"TODOFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Formatter/DotFormatter","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/DotFormatter","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter"},{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"},{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/formatter/todo_formatter.cr","line_number":5,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/todo_formatter.cr#L5"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that creates a todo config.\nBasically, it takes all issues reported and disables corresponding rules\nor excludes failed sources from these rules.","summary":"<p>A formatter that creates a todo config.</p>","constructors":[{"html_id":"new(output=STDOUT,config_path:Path=Config::DEFAULT_PATH)-class-method","name":"new","abstract":false,"args":[{"name":"output","default_value":"STDOUT","external_name":"output","restriction":""},{"name":"config_path","default_value":"Config::DEFAULT_PATH","external_name":"config_path","restriction":"::Path"}],"args_string":"(output = STDOUT, config_path : Path = Config::DEFAULT_PATH)","args_html":"(output = <span class=\"t\">STDOUT</span>, config_path : Path = <span class=\"t\">Config</span><span class=\"t\">::</span><span class=\"t\">DEFAULT_PATH</span>)","location":{"filename":"src/ameba/formatter/todo_formatter.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/todo_formatter.cr#L8"},"def":{"name":"new","args":[{"name":"output","default_value":"STDOUT","external_name":"output","restriction":""},{"name":"config_path","default_value":"Config::DEFAULT_PATH","external_name":"config_path","restriction":"::Path"}],"visibility":"Public","body":"_ = allocate\n_.initialize(output, config_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"finished(sources):Nil-instance-method","name":"finished","doc":"Reports a message when inspection is finished.","summary":"<p>Reports a message when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":""}],"args_string":"(sources) : Nil","args_html":"(sources) : Nil","location":{"filename":"src/ameba/formatter/todo_formatter.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/todo_formatter.cr#L11"},"def":{"name":"finished","args":[{"name":"sources","external_name":"sources","restriction":""}],"return_type":"Nil","visibility":"Public","body":"super(sources)\n\nissues = sources.flat_map(&.issues)\nif issues.any? do |issue|\n  !issue.disabled?\nend\nelse\n  @output.puts(\"No issues found. File is not generated.\")\n  return\nend\n\nif issues.any?(&.syntax?)\n  @output.puts(\"Unable to generate TODO file. Please fix syntax issues.\")\n  return\nend\n\nissues.sort_by!() do |__arg2|\n  __arg2.rule.name\nend\ngenerate_todo_config(issues)\n\n@output.puts(\"Created #{@config_path}\")\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Formatter/Util","path":"Ameba/Formatter/Util.html","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util","abstract":false,"locations":[{"filename":"src/ameba/formatter/util.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"crinja_lint/Ameba/Formatter/Util","kind":"module","full_name":"Ameba::Formatter::Util","name":"Util"}],"including_types":[{"html_id":"crinja_lint/Ameba/Formatter/DotFormatter","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter"},{"html_id":"crinja_lint/Ameba/Formatter/ExplainFormatter","kind":"class","full_name":"Ameba::Formatter::ExplainFormatter","name":"ExplainFormatter"},{"html_id":"crinja_lint/Ameba/Formatter/GitHubActionsFormatter","kind":"class","full_name":"Ameba::Formatter::GitHubActionsFormatter","name":"GitHubActionsFormatter"}],"namespace":{"html_id":"crinja_lint/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"instance_methods":[{"html_id":"affected_code(issue:Issue,context_lines=0,max_length=120,ellipsis=\"...\",prompt=\">\")-instance-method","name":"affected_code","abstract":false,"args":[{"name":"issue","external_name":"issue","restriction":"Issue"},{"name":"context_lines","default_value":"0","external_name":"context_lines","restriction":""},{"name":"max_length","default_value":"120","external_name":"max_length","restriction":""},{"name":"ellipsis","default_value":"\" ...\"","external_name":"ellipsis","restriction":""},{"name":"prompt","default_value":"\"> \"","external_name":"prompt","restriction":""}],"args_string":"(issue : Issue, context_lines = 0, max_length = 120, ellipsis = \" ...\", prompt = \"> \")","args_html":"(issue : <a href=\"../../Ameba/Issue.html\">Issue</a>, context_lines = <span class=\"n\">0</span>, max_length = <span class=\"n\">120</span>, ellipsis = <span class=\"s\">&quot; ...&quot;</span>, prompt = <span class=\"s\">&quot;&gt; &quot;</span>)","location":{"filename":"src/ameba/formatter/util.cr","line_number":70,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L70"},"def":{"name":"affected_code","args":[{"name":"issue","external_name":"issue","restriction":"Issue"},{"name":"context_lines","default_value":"0","external_name":"context_lines","restriction":""},{"name":"max_length","default_value":"120","external_name":"max_length","restriction":""},{"name":"ellipsis","default_value":"\" ...\"","external_name":"ellipsis","restriction":""},{"name":"prompt","default_value":"\"> \"","external_name":"prompt","restriction":""}],"visibility":"Public","body":"if location = issue.location\nelse\n  return\nend\n\naffected_code(issue.code, location, issue.end_location, context_lines, max_length, ellipsis, prompt)\n"},"external_var":false},{"html_id":"affected_code(code,location,end_location=nil,context_lines=0,max_length=120,ellipsis=\"...\",prompt=\">\")-instance-method","name":"affected_code","abstract":false,"args":[{"name":"code","external_name":"code","restriction":""},{"name":"location","external_name":"location","restriction":""},{"name":"end_location","default_value":"nil","external_name":"end_location","restriction":""},{"name":"context_lines","default_value":"0","external_name":"context_lines","restriction":""},{"name":"max_length","default_value":"120","external_name":"max_length","restriction":""},{"name":"ellipsis","default_value":"\" ...\"","external_name":"ellipsis","restriction":""},{"name":"prompt","default_value":"\"> \"","external_name":"prompt","restriction":""}],"args_string":"(code, location, end_location = nil, context_lines = 0, max_length = 120, ellipsis = \" ...\", prompt = \"> \")","args_html":"(code, location, end_location = <span class=\"n\">nil</span>, context_lines = <span class=\"n\">0</span>, max_length = <span class=\"n\">120</span>, ellipsis = <span class=\"s\">&quot; ...&quot;</span>, prompt = <span class=\"s\">&quot;&gt; &quot;</span>)","location":{"filename":"src/ameba/formatter/util.cr","line_number":76,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L76"},"def":{"name":"affected_code","args":[{"name":"code","external_name":"code","restriction":""},{"name":"location","external_name":"location","restriction":""},{"name":"end_location","default_value":"nil","external_name":"end_location","restriction":""},{"name":"context_lines","default_value":"0","external_name":"context_lines","restriction":""},{"name":"max_length","default_value":"120","external_name":"max_length","restriction":""},{"name":"ellipsis","default_value":"\" ...\"","external_name":"ellipsis","restriction":""},{"name":"prompt","default_value":"\"> \"","external_name":"prompt","restriction":""}],"visibility":"Public","body":"lines = code.split('\\n')\nlineno, column = location.line_number, location.column_number\n\nif affected_line = lines[lineno - 1]?.presence\nelse\n  return\nend\n\nif column < max_length\n  affected_line = trim(affected_line, max_length, ellipsis)\nend\n\nposition = prompt.size + column\nposition = position - 1\n\nshow_context = context_lines > 0\n\nif show_context\n  pre_context, post_context = context(lines, lineno, context_lines)\nelse\n  affected_line_size, affected_line = affected_line.size, affected_line.lstrip\n\n  indent_size_diff = affected_line_size - affected_line.size\n  if column > indent_size_diff\n    position = position - indent_size_diff\n  end\nend\n\nString.build do |str|\n  if show_context\n    pre_context.try(&.each do |line|\n      line = trim(line, max_length, ellipsis)\n      str << prompt\n      str.puts(line.colorize(:dark_gray))\n    end)\n  end\n\n  str << prompt\n  str.puts(affected_line.colorize(:white))\n\n  str << (\" \" * position)\n  str << (\"^\".colorize(:yellow))\n\n  if end_location\n    end_lineno = end_location.line_number\n    end_column = end_location.column_number\n\n    if (end_lineno == lineno) && end_column > column\n      end_position = end_column - column\n      end_position = end_position - 1\n\n      str << ((\"-\" * end_position).colorize(:dark_gray))\n      str << (\"^\".colorize(:yellow))\n    end\n  end\n\n  str.puts\n\n  if show_context\n    post_context.try(&.each do |line|\n      line = trim(line, max_length, ellipsis)\n      str << prompt\n      str.puts(line.colorize(:dark_gray))\n    end)\n  end\nend\n"},"external_var":false},{"html_id":"context(lines,lineno,context_lines=3,remove_empty=true)-instance-method","name":"context","abstract":false,"args":[{"name":"lines","external_name":"lines","restriction":""},{"name":"lineno","external_name":"lineno","restriction":""},{"name":"context_lines","default_value":"3","external_name":"context_lines","restriction":""},{"name":"remove_empty","default_value":"true","external_name":"remove_empty","restriction":""}],"args_string":"(lines, lineno, context_lines = 3, remove_empty = true)","args_html":"(lines, lineno, context_lines = <span class=\"n\">3</span>, remove_empty = <span class=\"n\">true</span>)","location":{"filename":"src/ameba/formatter/util.cr","line_number":44,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L44"},"def":{"name":"context","args":[{"name":"lines","external_name":"lines","restriction":""},{"name":"lineno","external_name":"lineno","restriction":""},{"name":"context_lines","default_value":"3","external_name":"context_lines","restriction":""},{"name":"remove_empty","default_value":"true","external_name":"remove_empty","restriction":""}],"visibility":"Public","body":"pre_context, post_context = [] of ::String, [] of ::String\n\nlines.each_with_index do |line, i|\n  case i + 1\n  when (lineno - context_lines)...lineno\n    pre_context << line\n  when (lineno + 1)..(lineno + context_lines)\n    post_context << line\n  end\nend\n\nif remove_empty\n  while pre_context.first?.try(&.blank?)\n    pre_context.shift\n  end\n\n  while post_context.last?.try(&.blank?)\n    post_context.pop\n  end\nend\n\n{pre_context, post_context}\n"},"external_var":false},{"html_id":"deansify(message:String|Nil):String|Nil-instance-method","name":"deansify","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String | ::Nil"}],"args_string":"(message : String | Nil) : String | Nil","args_html":"(message : String | Nil) : String | Nil","location":{"filename":"src/ameba/formatter/util.cr","line_number":30,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L30"},"def":{"name":"deansify","args":[{"name":"message","external_name":"message","restriction":"String | ::Nil"}],"return_type":"String | ::Nil","visibility":"Public","body":"message.try do |__arg0|\n  (__arg0.gsub(/\\x1b[^m]*m/, \"\")).presence\nend"},"external_var":false},{"html_id":"pluralize(count:Int,singular:String,plural=\"#{singular}s\")-instance-method","name":"pluralize","abstract":false,"args":[{"name":"count","external_name":"count","restriction":"Int"},{"name":"singular","external_name":"singular","restriction":"String"},{"name":"plural","default_value":"\"#{singular}s\"","external_name":"plural","restriction":""}],"args_string":"(count : Int, singular : String, plural = \"#{singular}s\")","args_html":"(count : Int, singular : String, plural = <span class=\"s\">&quot;</span><span class=\"i\">#{</span>singular<span class=\"i\">}</span><span class=\"s\">s&quot;</span>)","location":{"filename":"src/ameba/formatter/util.cr","line_number":5,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L5"},"def":{"name":"pluralize","args":[{"name":"count","external_name":"count","restriction":"Int"},{"name":"singular","external_name":"singular","restriction":"String"},{"name":"plural","default_value":"\"#{singular}s\"","external_name":"plural","restriction":""}],"visibility":"Public","body":"count == 1 ? singular : plural"},"external_var":false},{"html_id":"to_human(span:Time::Span)-instance-method","name":"to_human","abstract":false,"args":[{"name":"span","external_name":"span","restriction":"Time::Span"}],"args_string":"(span : Time::Span)","args_html":"(span : Time::Span)","location":{"filename":"src/ameba/formatter/util.cr","line_number":9,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L9"},"def":{"name":"to_human","args":[{"name":"span","external_name":"span","restriction":"Time::Span"}],"visibility":"Public","body":"total_milliseconds = span.total_milliseconds\nif total_milliseconds < 1\n  return \"#{(span.total_milliseconds * 1000).round.to_i} microseconds\"\nend\n\ntotal_seconds = span.total_seconds\nif total_seconds < 1\n  return \"#{span.total_milliseconds.round(2)} milliseconds\"\nend\n\nif total_seconds < 60\n  return \"#{total_seconds.round(2)} seconds\"\nend\n\nminutes = span.minutes\nseconds = span.seconds\n\n\"#{minutes}:#{seconds < 10 ? \"0\" : \"\"}#{seconds} minutes\"\n"},"external_var":false},{"html_id":"trim(str,max_length=120,ellipsis=\"...\")-instance-method","name":"trim","abstract":false,"args":[{"name":"str","external_name":"str","restriction":""},{"name":"max_length","default_value":"120","external_name":"max_length","restriction":""},{"name":"ellipsis","default_value":"\" ...\"","external_name":"ellipsis","restriction":""}],"args_string":"(str, max_length = 120, ellipsis = \" ...\")","args_html":"(str, max_length = <span class=\"n\">120</span>, ellipsis = <span class=\"s\">&quot; ...&quot;</span>)","location":{"filename":"src/ameba/formatter/util.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/formatter/util.cr#L34"},"def":{"name":"trim","args":[{"name":"str","external_name":"str","restriction":""},{"name":"max_length","default_value":"120","external_name":"max_length","restriction":""},{"name":"ellipsis","default_value":"\" ...\"","external_name":"ellipsis","restriction":""}],"visibility":"Public","body":"if (str.size - ellipsis.size) > max_length\n  str = str[0, max_length]\n  if str.size > ellipsis.size\n    str = str[0...(-ellipsis.size)] + ellipsis\n  end\nend\nstr\n"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/GlobUtils","path":"Ameba/GlobUtils.html","kind":"module","full_name":"Ameba::GlobUtils","name":"GlobUtils","abstract":false,"locations":[{"filename":"src/ameba/glob_utils.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/glob_utils.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"crinja_lint/Ameba/GlobUtils","kind":"module","full_name":"Ameba::GlobUtils","name":"GlobUtils"}],"including_types":[{"html_id":"crinja_lint/Ameba/Config","kind":"class","full_name":"Ameba::Config","name":"Config"}],"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Helper module that is utilizes helpers for working with globs.","summary":"<p>Helper module that is utilizes helpers for working with globs.</p>","instance_methods":[{"html_id":"expand(globs)-instance-method","name":"expand","doc":"Expands globs. Globs can point to files or even directories.\n\n```\nexpand([\"spec/*.cr\", \"src\"]) # => all files in src folder + first level specs\n```","summary":"<p>Expands globs.</p>","abstract":false,"args":[{"name":"globs","external_name":"globs","restriction":""}],"args_string":"(globs)","args_html":"(globs)","location":{"filename":"src/ameba/glob_utils.cr","line_number":24,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/glob_utils.cr#L24"},"def":{"name":"expand","args":[{"name":"globs","external_name":"globs","restriction":""}],"visibility":"Public","body":"globs.flat_map do |glob|\n  if File.directory?(glob)\n    ext = \".{html.j2,jinja2}\"\n\n    glob = glob + \"/**/*#{ext}\"\n  end\n\n  Dir[glob]\nend.uniq!.select! do |path|\n  File.file?(path)\nend"},"external_var":false},{"html_id":"find_files_by_globs(globs)-instance-method","name":"find_files_by_globs","doc":"Returns all files that match specified globs.\nGlobs can have wildcards or be rejected:\n\n```\nfind_files_by_globs([\"**/*.cr\", \"!lib\"])\n```","summary":"<p>Returns all files that match specified globs.</p>","abstract":false,"args":[{"name":"globs","external_name":"globs","restriction":""}],"args_string":"(globs)","args_html":"(globs)","location":{"filename":"src/ameba/glob_utils.cr","line_number":12,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/glob_utils.cr#L12"},"def":{"name":"find_files_by_globs","args":[{"name":"globs","external_name":"globs","restriction":""}],"visibility":"Public","body":"rejected = rejected_globs(globs)\nselected = globs - rejected\n\n(expand(selected)) - (expand(rejected.map!(&.[](1..-1))))\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/InlineComments","path":"Ameba/InlineComments.html","kind":"module","full_name":"Ameba::InlineComments","name":"InlineComments","abstract":false,"locations":[{"filename":"src/ameba/inline_comments.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"COMMENT_DIRECTIVE_REGEX","name":"COMMENT_DIRECTIVE_REGEX","value":"/# ameba:(?<action>\\w+) (?<rules>\\w+(?:\\/\\w+)?(?:,? \\w+(?:\\/\\w+)?)*)/"}],"including_types":[{"html_id":"crinja_lint/Ameba/Source","kind":"class","full_name":"Ameba::Source","name":"Source"}],"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"A module that utilizes inline comments parsing and processing logic.","summary":"<p>A module that utilizes inline comments parsing and processing logic.</p>","instance_methods":[{"html_id":"comment?(line_number:Int32)-instance-method","name":"comment?","doc":"Returns `true` if the line at the given `line_number` is a comment.","summary":"<p>Returns <code>true</code> if the line at the given <code>line_number</code> is a comment.</p>","abstract":false,"args":[{"name":"line_number","external_name":"line_number","restriction":"Int32"}],"args_string":"(line_number : Int32)","args_html":"(line_number : Int32)","location":{"filename":"src/ameba/inline_comments.cr","line_number":78,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L78"},"def":{"name":"comment?","args":[{"name":"line_number","external_name":"line_number","restriction":"Int32"}],"visibility":"Public","body":"if line = lines[line_number]?\nelse\n  return\nend\ncomment?(line)\n"},"external_var":false},{"html_id":"location_disabled?(location:Crinja::Parser::StreamPosition|Nil,rule)-instance-method","name":"location_disabled?","doc":"Returns `true` if current location is disabled for a particular rule,\n`false` otherwise.\n\nLocation is disabled in two cases:\n  1. The line of the location ends with a comment directive.\n  2. The line above the location is a comment directive.\n\nFor example, here are two examples of disabled location:\n\n```\n# ameba:disable Style/LargeNumbers\nTime.epoch(1483859302)\n\nTime.epoch(1483859302) # ameba:disable Style/LargeNumbers\n```\n\nBut here are examples which are not considered as disabled location:\n\n```\n# ameba:disable Style/LargeNumbers\n#\nTime.epoch(1483859302)\n\nif use_epoch? # ameba:disable Style/LargeNumbers\n  Time.epoch(1483859302)\nend\n```","summary":"<p>Returns <code>true</code> if current location is disabled for a particular rule, <code>false</code> otherwise.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"rule","external_name":"rule","restriction":""}],"args_string":"(location : Crinja::Parser::StreamPosition | Nil, rule)","args_html":"(location : Crinja::Parser::StreamPosition | Nil, rule)","location":{"filename":"src/ameba/inline_comments.cr","line_number":40,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L40"},"def":{"name":"location_disabled?","args":[{"name":"location","external_name":"location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"rule","external_name":"rule","restriction":""}],"visibility":"Public","body":"if rule.name.in?(Rule::SPECIAL)\n  return false\nend\nif line_number = location.try do |__arg0|\n  __arg0.line_number.try(&.-(1))\nend\nelse\n  return false\nend\nif line = lines[line_number]?\nelse\n  return false\nend\n\n(line_disabled?(line, rule)) || (((line_number > 0 && (prev_line = lines[line_number - 1])) && (comment?(prev_line))) && (line_disabled?(prev_line, rule)))\n"},"external_var":false},{"html_id":"parse_inline_directive(line)-instance-method","name":"parse_inline_directive","doc":"Parses inline comment directive. Returns a tuple that consists of\nan action and parsed rules if directive found, nil otherwise.\n\n```\nline = \"# ameba:disable Rule1, Rule2\"\ndirective = parse_inline_directive(line)\ndirective[:action] # => \"disable\"\ndirective[:rules]  # => [\"Rule1\", \"Rule2\"]\n```\n\nIt ignores the directive if it is commented out.\n\n```\nline = \"# # ameba:disable Rule1, Rule2\"\nparse_inline_directive(line) # => nil\n```","summary":"<p>Parses inline comment directive.</p>","abstract":false,"args":[{"name":"line","external_name":"line","restriction":""}],"args_string":"(line)","args_html":"(line)","location":{"filename":"src/ameba/inline_comments.cr","line_number":68,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L68"},"def":{"name":"parse_inline_directive","args":[{"name":"line","external_name":"line","restriction":""}],"visibility":"Public","body":"if directive = COMMENT_DIRECTIVE_REGEX.match(line)\nelse\n  return\nend\nif commented_out?(line.gsub(directive[0], \"\"))\n  return\nend\n{action: directive[\"action\"], rules: directive[\"rules\"].split(/[\\s,]/, remove_empty: true)}\n"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/InlineComments/Action","path":"Ameba/InlineComments/Action.html","kind":"enum","full_name":"Ameba::InlineComments::Action","name":"Action","abstract":false,"ancestors":[{"html_id":"crinja_lint/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crinja_lint/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crinja_lint/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/inline_comments.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L8"}],"repository_name":"crinja_lint","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Disable","name":"Disable","value":"0"},{"id":"Enable","name":"Enable","value":"1"}],"namespace":{"html_id":"crinja_lint/Ameba/InlineComments","kind":"module","full_name":"Ameba::InlineComments","name":"InlineComments"},"doc":"Available actions in the inline comments","summary":"<p>Available actions in the inline comments</p>","instance_methods":[{"html_id":"disable?-instance-method","name":"disable?","doc":"Returns `true` if this enum value equals `Disable`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Ameba/InlineComments/Action.html#Disable\">Disable</a></code></p>","abstract":false,"location":{"filename":"src/ameba/inline_comments.cr","line_number":9,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L9"},"def":{"name":"disable?","visibility":"Public","body":"self == Disable"},"external_var":false},{"html_id":"enable?-instance-method","name":"enable?","doc":"Returns `true` if this enum value equals `Enable`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Ameba/InlineComments/Action.html#Enable\">Enable</a></code></p>","abstract":false,"location":{"filename":"src/ameba/inline_comments.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/inline_comments.cr#L10"},"def":{"name":"enable?","visibility":"Public","body":"self == Enable"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Issue","path":"Ameba/Issue.html","kind":"struct","full_name":"Ameba::Issue","name":"Issue","abstract":false,"superclass":{"html_id":"crinja_lint/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crinja_lint/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crinja_lint/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/issue.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Represents an issue reported by Ameba.","summary":"<p>Represents an issue reported by Ameba.</p>","constructors":[{"html_id":"new(code:String,rule:Ameba::Rule::Base,location:Crinja::Parser::StreamPosition|Nil,end_location:Crinja::Parser::StreamPosition|Nil,message:String,status:Status|Nil=nil,block:Source::Corrector->|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"code","external_name":"code","restriction":"::String"},{"name":"rule","external_name":"rule","restriction":"::Ameba::Rule::Base"},{"name":"location","external_name":"location","restriction":"::Crinja::Parser::StreamPosition | ::Nil"},{"name":"end_location","external_name":"end_location","restriction":"::Crinja::Parser::StreamPosition | ::Nil"},{"name":"message","external_name":"message","restriction":"::String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"args_string":"(code : String, rule : Ameba::Rule::Base, location : Crinja::Parser::StreamPosition | Nil, end_location : Crinja::Parser::StreamPosition | Nil, message : String, status : Status | Nil = nil, block : Source::Corrector ->  | Nil = nil)","args_html":"(code : String, rule : <a href=\"../Ameba/Rule/Base.html\">Ameba::Rule::Base</a>, location : Crinja::Parser::StreamPosition | Nil, end_location : Crinja::Parser::StreamPosition | Nil, message : String, status : <a href=\"../Ameba/Issue/Status.html\">Status</a> | Nil = <span class=\"n\">nil</span>, block : <a href=\"../Ameba/Source/Corrector.html\">Source::Corrector</a> ->  | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/issue.cr","line_number":30,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L30"},"def":{"name":"new","args":[{"name":"code","external_name":"code","restriction":"::String"},{"name":"rule","external_name":"rule","restriction":"::Ameba::Rule::Base"},{"name":"location","external_name":"location","restriction":"::Crinja::Parser::StreamPosition | ::Nil"},{"name":"end_location","external_name":"end_location","restriction":"::Crinja::Parser::StreamPosition | ::Nil"},{"name":"message","external_name":"message","restriction":"::String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(code, rule, location, end_location, message, status, block)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"code:String-instance-method","name":"code","doc":"The source code that triggered this issue.","summary":"<p>The source code that triggered this issue.</p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L10"},"def":{"name":"code","return_type":"String","visibility":"Public","body":"@code"},"external_var":false},{"html_id":"correct(corrector)-instance-method","name":"correct","abstract":false,"args":[{"name":"corrector","external_name":"corrector","restriction":""}],"args_string":"(corrector)","args_html":"(corrector)","location":{"filename":"src/ameba/issue.cr","line_number":42,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L42"},"def":{"name":"correct","args":[{"name":"corrector","external_name":"corrector","restriction":""}],"visibility":"Public","body":"@block.try(&.call(corrector))"},"external_var":false},{"html_id":"correctable?-instance-method","name":"correctable?","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":38,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L38"},"def":{"name":"correctable?","visibility":"Public","body":"!@block.nil?"},"external_var":false},{"html_id":"disabled?(*args,**options)-instance-method","name":"disabled?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/ameba/issue.cr","line_number":27,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L27"},"def":{"name":"disabled?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"status.disabled?(*args, **options)"},"external_var":false},{"html_id":"disabled?(*args,**options,&)-instance-method","name":"disabled?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/ameba/issue.cr","line_number":27,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L27"},"def":{"name":"disabled?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"status.disabled?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"enabled?(*args,**options)-instance-method","name":"enabled?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/ameba/issue.cr","line_number":27,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L27"},"def":{"name":"enabled?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"status.enabled?(*args, **options)"},"external_var":false},{"html_id":"enabled?(*args,**options,&)-instance-method","name":"enabled?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/ameba/issue.cr","line_number":27,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L27"},"def":{"name":"enabled?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"status.enabled?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"end_location:Crinja::Parser::StreamPosition|Nil-instance-method","name":"end_location","doc":"End location of the issue.","summary":"<p>End location of the issue.</p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":19,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L19"},"def":{"name":"end_location","return_type":"Crinja::Parser::StreamPosition | ::Nil","visibility":"Public","body":"@end_location"},"external_var":false},{"html_id":"location:Crinja::Parser::StreamPosition|Nil-instance-method","name":"location","doc":"Location of the issue.","summary":"<p>Location of the issue.</p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":16,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L16"},"def":{"name":"location","return_type":"Crinja::Parser::StreamPosition | ::Nil","visibility":"Public","body":"@location"},"external_var":false},{"html_id":"message:String-instance-method","name":"message","doc":"Issue message.","summary":"<p>Issue message.</p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":22,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L22"},"def":{"name":"message","return_type":"String","visibility":"Public","body":"@message"},"external_var":false},{"html_id":"rule:Rule::Base-instance-method","name":"rule","doc":"A rule that triggers this issue.","summary":"<p>A rule that triggers this issue.</p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L13"},"def":{"name":"rule","return_type":"Rule::Base","visibility":"Public","body":"@rule"},"external_var":false},{"html_id":"status:Status-instance-method","name":"status","doc":"Issue status.","summary":"<p>Issue status.</p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":25,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L25"},"def":{"name":"status","return_type":"Status","visibility":"Public","body":"@status"},"external_var":false},{"html_id":"syntax?-instance-method","name":"syntax?","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L34"},"def":{"name":"syntax?","visibility":"Public","body":"rule.is_a?(Rule::Lint::Syntax)"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Issue/Status","path":"Ameba/Issue/Status.html","kind":"enum","full_name":"Ameba::Issue::Status","name":"Status","abstract":false,"ancestors":[{"html_id":"crinja_lint/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crinja_lint/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crinja_lint/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/issue.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L4"}],"repository_name":"crinja_lint","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Enabled","name":"Enabled","value":"0"},{"id":"Disabled","name":"Disabled","value":"1"}],"namespace":{"html_id":"crinja_lint/Ameba/Issue","kind":"struct","full_name":"Ameba::Issue","name":"Issue"},"instance_methods":[{"html_id":"disabled?-instance-method","name":"disabled?","doc":"Returns `true` if this enum value equals `Disabled`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Ameba/Issue/Status.html#Disabled\">Disabled</a></code></p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":6,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L6"},"def":{"name":"disabled?","visibility":"Public","body":"self == Disabled"},"external_var":false},{"html_id":"enabled?-instance-method","name":"enabled?","doc":"Returns `true` if this enum value equals `Enabled`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Ameba/Issue/Status.html#Enabled\">Enabled</a></code></p>","abstract":false,"location":{"filename":"src/ameba/issue.cr","line_number":5,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/issue.cr#L5"},"def":{"name":"enabled?","visibility":"Public","body":"self == Enabled"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Lsp","path":"Ameba/Lsp.html","kind":"module","full_name":"Ameba::Lsp","name":"Lsp","abstract":false,"locations":[{"filename":"src/ameba/lsp/lsp.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/lsp.cr#L3"},{"filename":"src/ameba/lsp/provider.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"class_methods":[{"html_id":"run-class-method","name":"run","abstract":false,"location":{"filename":"src/ameba/lsp/lsp.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/lsp.cr#L4"},"def":{"name":"run","visibility":"Public","body":"server = Larimar::Server.new(STDIN, STDOUT)\n\nbackend = Larimar::LogBackend.new(server, formatter: Larimar::LogFormatter)\n::Log.setup_from_env(backend: backend)\n\ncontroller = Larimar::ProviderController.new\ncontroller.register_provider(Lsp::Provider.new)\n\nserver.start(controller)\n"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Lsp/Provider","path":"Ameba/Lsp/Provider.html","kind":"class","full_name":"Ameba::Lsp::Provider","name":"Provider","abstract":false,"superclass":{"html_id":"crinja_lint/Larimar/Provider","kind":"class","full_name":"Larimar::Provider","name":"Provider"},"ancestors":[{"html_id":"crinja_lint/Larimar/CodeActionProvider","kind":"module","full_name":"Larimar::CodeActionProvider","name":"CodeActionProvider"},{"html_id":"crinja_lint/Larimar/Provider","kind":"class","full_name":"Larimar::Provider","name":"Provider"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/lsp/provider.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Larimar::Log.for(self)"}],"included_modules":[{"html_id":"crinja_lint/Larimar/CodeActionProvider","kind":"module","full_name":"Larimar::CodeActionProvider","name":"CodeActionProvider"}],"namespace":{"html_id":"crinja_lint/Ameba/Lsp","kind":"module","full_name":"Ameba::Lsp","name":"Lsp"},"instance_methods":[{"html_id":"on_change(document:Larimar::TextDocument):Nil-instance-method","name":"on_change","abstract":false,"args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"args_string":"(document : Larimar::TextDocument) : Nil","args_html":"(document : Larimar::TextDocument) : Nil","location":{"filename":"src/ameba/lsp/provider.cr","line_number":60,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L60"},"def":{"name":"on_change","args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"return_type":"Nil","visibility":"Public","body":"handle_ameba(document)"},"external_var":false},{"html_id":"on_close(document:Larimar::TextDocument):Nil-instance-method","name":"on_close","abstract":false,"args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"args_string":"(document : Larimar::TextDocument) : Nil","args_html":"(document : Larimar::TextDocument) : Nil","location":{"filename":"src/ameba/lsp/provider.cr","line_number":68,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L68"},"def":{"name":"on_close","args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"return_type":"Nil","visibility":"Public","body":"controller.server.send_msg(LSProtocol::PublishDiagnosticsNotification.new(params: LSProtocol::PublishDiagnosticsParams.new(diagnostics: [] of LSProtocol::Diagnostic, uri: document.uri)))"},"external_var":false},{"html_id":"on_open(document:Larimar::TextDocument):Nil-instance-method","name":"on_open","abstract":false,"args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"args_string":"(document : Larimar::TextDocument) : Nil","args_html":"(document : Larimar::TextDocument) : Nil","location":{"filename":"src/ameba/lsp/provider.cr","line_number":56,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L56"},"def":{"name":"on_open","args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"return_type":"Nil","visibility":"Public","body":"handle_ameba(document)"},"external_var":false},{"html_id":"on_save(document:Larimar::TextDocument):Nil-instance-method","name":"on_save","abstract":false,"args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"args_string":"(document : Larimar::TextDocument) : Nil","args_html":"(document : Larimar::TextDocument) : Nil","location":{"filename":"src/ameba/lsp/provider.cr","line_number":64,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L64"},"def":{"name":"on_save","args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"}],"return_type":"Nil","visibility":"Public","body":"handle_ameba(document)"},"external_var":false},{"html_id":"provide_code_actions(document:Larimar::TextDocument,range:LSProtocol::Range|LSProtocol::SelectionRange,context:LSProtocol::CodeActionContext,token:CancellationToken|Nil):Array(LSProtocol::CodeAction|LSProtocol::Command)|Nil-instance-method","name":"provide_code_actions","abstract":false,"args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"},{"name":"range","external_name":"range","restriction":"LSProtocol::Range | LSProtocol::SelectionRange"},{"name":"context","external_name":"context","restriction":"LSProtocol::CodeActionContext"},{"name":"token","external_name":"token","restriction":"CancellationToken | ::Nil"}],"args_string":"(document : Larimar::TextDocument, range : LSProtocol::Range | LSProtocol::SelectionRange, context : LSProtocol::CodeActionContext, token : CancellationToken | Nil) : Array(LSProtocol::CodeAction | LSProtocol::Command) | Nil","args_html":"(document : Larimar::TextDocument, range : LSProtocol::Range | LSProtocol::SelectionRange, context : LSProtocol::CodeActionContext, token : CancellationToken | Nil) : Array(LSProtocol::CodeAction | LSProtocol::Command) | Nil","location":{"filename":"src/ameba/lsp/provider.cr","line_number":121,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L121"},"def":{"name":"provide_code_actions","args":[{"name":"document","external_name":"document","restriction":"Larimar::TextDocument"},{"name":"range","external_name":"range","restriction":"LSProtocol::Range | LSProtocol::SelectionRange"},{"name":"context","external_name":"context","restriction":"LSProtocol::CodeActionContext"},{"name":"token","external_name":"token","restriction":"CancellationToken | ::Nil"}],"return_type":"Array(LSProtocol::CodeAction | LSProtocol::Command) | ::Nil","visibility":"Public","body":"result = [] of LSProtocol::CodeAction | LSProtocol::Command\ndiagnostics = @diagnostics[document.uri]?\nissues = @issues[document.uri]?\n\nif diagnostics.nil? || issues.nil?\n  return\nend\n\ndiagnostics.each_with_index do |diagnostic, idx|\n  if issue = issues[idx]?\n  else\n    break\n  end\n  if issue.correctable?\n  else\n    next\n  end\n\n  result << LSProtocol::CodeAction.new(title: \"Fix #{issue.rule.name}\", diagnostics: [diagnostic], kind: LSProtocol::CodeActionKind::QuickFix, is_preferred: true, data: JSON::Any.new({\"uri\" => JSON::Any.new(document.uri.to_s), \"idx\" => JSON::Any.new(idx)} of String => JSON::Any))\nend\n\nresult\n"},"external_var":false},{"html_id":"resolve_code_action(code_action:LSProtocol::CodeAction,token:CancellationToken|Nil):LSProtocol::CodeAction|Nil-instance-method","name":"resolve_code_action","abstract":false,"args":[{"name":"code_action","external_name":"code_action","restriction":"LSProtocol::CodeAction"},{"name":"token","external_name":"token","restriction":"CancellationToken | ::Nil"}],"args_string":"(code_action : LSProtocol::CodeAction, token : CancellationToken | Nil) : LSProtocol::CodeAction | Nil","args_html":"(code_action : LSProtocol::CodeAction, token : CancellationToken | Nil) : LSProtocol::CodeAction | Nil","location":{"filename":"src/ameba/lsp/provider.cr","line_number":154,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L154"},"def":{"name":"resolve_code_action","args":[{"name":"code_action","external_name":"code_action","restriction":"LSProtocol::CodeAction"},{"name":"token","external_name":"token","restriction":"CancellationToken | ::Nil"}],"return_type":"LSProtocol::CodeAction | ::Nil","visibility":"Public","body":"if ((((((data = code_action.data.try(&.as_h?)) && (document_uri_string = data[\"uri\"]?.try(&.as_s?))) && (document_uri = URI.parse(document_uri_string))) && (document = (controller.@documents)[document_uri]?)) && (diagnostic = code_action.diagnostics.try(&.first?))) && (issue_idx = data[\"idx\"]?.try(&.as_i?))) && (issue = @issues[document_uri]?.try(&.[](issue_idx)))\nelse\n  return\nend\n\nresult = nil\n\ndocument.mutex.synchronize do\n  corrector = Ameba::Source::Corrector.new(document.to_s)\n  issue.correct(corrector)\n\n  text_edits = [] of LSProtocol::TextEdit\n  get_text_edits(document, text_edits, corrector.@rewriter.@action_root)\n\n  workspace_edit = LSProtocol::WorkspaceEdit.new(changes: {document.uri => text_edits})\n\n  result = LSProtocol::CodeAction.new(title: \"Fix #{issue.rule.name}\", diagnostics: [diagnostic], edit: workspace_edit, kind: LSProtocol::CodeActionKind::QuickFix, is_preferred: true)\nend\n\nresult\n"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Lsp/Provider/DiagnosticsFormatter","path":"Ameba/Lsp/Provider/DiagnosticsFormatter.html","kind":"class","full_name":"Ameba::Lsp::Provider::DiagnosticsFormatter","name":"DiagnosticsFormatter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/lsp/provider.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L10"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Lsp/Provider","kind":"class","full_name":"Ameba::Lsp::Provider","name":"Provider"},"instance_methods":[{"html_id":"cancellation_token:CancellationToken|Nil-instance-method","name":"cancellation_token","abstract":false,"location":{"filename":"src/ameba/lsp/provider.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L13"},"def":{"name":"cancellation_token","return_type":"CancellationToken | ::Nil","visibility":"Public","body":"@cancellation_token"},"external_var":false},{"html_id":"cancellation_token=(cancellation_token:CancellationToken|Nil)-instance-method","name":"cancellation_token=","abstract":false,"args":[{"name":"cancellation_token","external_name":"cancellation_token","restriction":"CancellationToken | ::Nil"}],"args_string":"(cancellation_token : CancellationToken | Nil)","args_html":"(cancellation_token : CancellationToken | Nil)","location":{"filename":"src/ameba/lsp/provider.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L13"},"def":{"name":"cancellation_token=","args":[{"name":"cancellation_token","external_name":"cancellation_token","restriction":"CancellationToken | ::Nil"}],"visibility":"Public","body":"@cancellation_token = cancellation_token"},"external_var":false},{"html_id":"convert_severity(severity:Ameba::Severity):LSProtocol::DiagnosticSeverity-instance-method","name":"convert_severity","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"Ameba::Severity"}],"args_string":"(severity : Ameba::Severity) : LSProtocol::DiagnosticSeverity","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>) : LSProtocol::DiagnosticSeverity","location":{"filename":"src/ameba/lsp/provider.cr","line_number":44,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L44"},"def":{"name":"convert_severity","args":[{"name":"severity","external_name":"severity","restriction":"Ameba::Severity"}],"return_type":"LSProtocol::DiagnosticSeverity","visibility":"Public","body":"case severity\nin .error?\n  LSProtocol::DiagnosticSeverity::Error\nin .warning?\n  LSProtocol::DiagnosticSeverity::Warning\nin .convention?\n  LSProtocol::DiagnosticSeverity::Information\nend"},"external_var":false},{"html_id":"diagnostics:Array(LSProtocol::Diagnostic)-instance-method","name":"diagnostics","abstract":false,"location":{"filename":"src/ameba/lsp/provider.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L11"},"def":{"name":"diagnostics","return_type":"Array(LSProtocol::Diagnostic)","visibility":"Public","body":"@diagnostics"},"external_var":false},{"html_id":"source_finished(source:Ameba::Source):Nil-instance-method","name":"source_finished","doc":"Callback that indicates when source inspection is finished.\nA corresponding source is passed as an argument.\n\nWARNING: This method needs to be MT safe","summary":"<p>Callback that indicates when source inspection is finished.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Ameba::Source"}],"args_string":"(source : Ameba::Source) : Nil","args_html":"(source : <a href=\"../../../Ameba/Source.html\">Ameba::Source</a>) : Nil","location":{"filename":"src/ameba/lsp/provider.cr","line_number":15,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/lsp/provider.cr#L15"},"def":{"name":"source_finished","args":[{"name":"source","external_name":"source","restriction":"Ameba::Source"}],"return_type":"Nil","visibility":"Public","body":"source.issues.each do |issue|\n  if issue.disabled?\n    next\n  end\n\n  cancellation_token.try(&.cancelled!)\n\n  start_location = LSProtocol::Position.new(line: (issue.location.try() do |__arg1|\n    __arg1.line_number.to_u32\n  end || 1_u32) - 1, character: (issue.location.try() do |__arg2|\n    __arg2.column_number.to_u32\n  end || 1_u32) - 1)\n\n  end_location = LSProtocol::Position.new(line: ((issue.end_location.try() do |__arg3|\n    __arg3.line_number.to_u32\n  end || issue.location.try() do |__arg4|\n    __arg4.line_number.to_u32\n  end) || 1_u32) - 1, character: ((issue.end_location.try() do |__arg5|\n    __arg5.column_number.to_u32\n  end || issue.location.try() do |__arg6|\n    __arg6.column_number.to_u32\n  end) || 1_u32))\n\n  @mutex.synchronize do\n    diagnostics << LSProtocol::Diagnostic.new(message: \"[#{issue.rule.name}] #{issue.message}\", range: LSProtocol::Range.new(start: start_location, end: end_location), severity: convert_severity(issue.rule.severity))\n  end\nend"},"external_var":false}]}]}]},{"html_id":"crinja_lint/Ameba/Presenter","path":"Ameba/Presenter.html","kind":"module","full_name":"Ameba::Presenter","name":"Presenter","abstract":false,"locations":[{"filename":"src/ameba/presenter/base_presenter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/base_presenter.cr#L1"},{"filename":"src/ameba/presenter/rule_collection_presenter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_collection_presenter.cr#L1"},{"filename":"src/ameba/presenter/rule_presenter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_presenter.cr#L1"},{"filename":"src/ameba/presenter/rule_versions_presenter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_versions_presenter.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"types":[{"html_id":"crinja_lint/Ameba/Presenter/BasePresenter","path":"Ameba/Presenter/BasePresenter.html","kind":"class","full_name":"Ameba::Presenter::BasePresenter","name":"BasePresenter","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/presenter/base_presenter.cr","line_number":5,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/base_presenter.cr#L5"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crinja_lint/Ameba/Presenter/RuleCollectionPresenter","kind":"class","full_name":"Ameba::Presenter::RuleCollectionPresenter","name":"RuleCollectionPresenter"},{"html_id":"crinja_lint/Ameba/Presenter/RulePresenter","kind":"class","full_name":"Ameba::Presenter::RulePresenter","name":"RulePresenter"},{"html_id":"crinja_lint/Ameba/Presenter/RuleVersionsPresenter","kind":"class","full_name":"Ameba::Presenter::RuleVersionsPresenter","name":"RuleVersionsPresenter"}],"namespace":{"html_id":"crinja_lint/Ameba/Presenter","kind":"module","full_name":"Ameba::Presenter","name":"Presenter"},"constructors":[{"html_id":"new(output:IO=STDOUT)-class-method","name":"new","abstract":false,"args":[{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"::IO"}],"args_string":"(output : IO = STDOUT)","args_html":"(output : IO = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/ameba/presenter/base_presenter.cr","line_number":9,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/base_presenter.cr#L9"},"def":{"name":"new","args":[{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"::IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"output:IO::FileDescriptor|IO::Memory-instance-method","name":"output","doc":"TODO: allow other IOs","summary":"<p><span class=\"flag orange\">TODO</span>  allow other IOs</p>","abstract":false,"location":{"filename":"src/ameba/presenter/base_presenter.cr","line_number":7,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/base_presenter.cr#L7"},"def":{"name":"output","return_type":"IO::FileDescriptor | IO::Memory","visibility":"Public","body":"@output"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Presenter/RuleCollectionPresenter","path":"Ameba/Presenter/RuleCollectionPresenter.html","kind":"class","full_name":"Ameba::Presenter::RuleCollectionPresenter","name":"RuleCollectionPresenter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Presenter/BasePresenter","kind":"class","full_name":"Ameba::Presenter::BasePresenter","name":"BasePresenter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Presenter/BasePresenter","kind":"class","full_name":"Ameba::Presenter::BasePresenter","name":"BasePresenter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/presenter/rule_collection_presenter.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_collection_presenter.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Presenter","kind":"module","full_name":"Ameba::Presenter","name":"Presenter"},"instance_methods":[{"html_id":"run(rules):Nil-instance-method","name":"run","abstract":false,"args":[{"name":"rules","external_name":"rules","restriction":""}],"args_string":"(rules) : Nil","args_html":"(rules) : Nil","location":{"filename":"src/ameba/presenter/rule_collection_presenter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_collection_presenter.cr#L3"},"def":{"name":"run","args":[{"name":"rules","external_name":"rules","restriction":""}],"return_type":"Nil","visibility":"Public","body":"rules = rules.to_h do |rule|\n  name = rule.name.split('/')\n  name = \"%s/%s\" % {(name[0...-1].join('/')).colorize(:light_gray), name.last.colorize(:white)}\n  {name, rule}\nend\nlongest_name = rules.max_of() do |__arg0|\n  __arg0.first.size\nend\n\nrules.group_by() do |__arg1|\n  __arg1.last.group\nend.each do |group, group_rules|\n  output.puts(\"â€” %s\" % (group.colorize(:light_blue)).underline)\n  output.puts\n  group_rules.each do |name, rule|\n    output.puts(\"  %s  [%s]    %s    %s\" % {rule.enabled? ? ENABLED_MARK : DISABLED_MARK, rule.severity.symbol.to_s.colorize(:green), name.ljust(longest_name), rule.description.colorize(:dark_gray)})\n  end\n  output.puts\nend\n\noutput.puts(\"Total rules: %s / %s enabled\" % {rules.size.to_s.colorize(:light_blue), rules.count() do |__arg2|\n  __arg2.last.enabled?\nend.to_s.colorize(:light_blue)})\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Presenter/RulePresenter","path":"Ameba/Presenter/RulePresenter.html","kind":"class","full_name":"Ameba::Presenter::RulePresenter","name":"RulePresenter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Presenter/BasePresenter","kind":"class","full_name":"Ameba::Presenter::BasePresenter","name":"BasePresenter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Presenter/BasePresenter","kind":"class","full_name":"Ameba::Presenter::BasePresenter","name":"BasePresenter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/presenter/rule_presenter.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_presenter.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Presenter","kind":"module","full_name":"Ameba::Presenter","name":"Presenter"},"instance_methods":[{"html_id":"run(rule):Nil-instance-method","name":"run","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":""}],"args_string":"(rule) : Nil","args_html":"(rule) : Nil","location":{"filename":"src/ameba/presenter/rule_presenter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_presenter.cr#L3"},"def":{"name":"run","args":[{"name":"rule","external_name":"rule","restriction":""}],"return_type":"Nil","visibility":"Public","body":"output_title(\"Rule info\")\n\ninfo = \"Name:           %s\\nSeverity:       %s\\nEnabled:        %s\\nSince version:  %s\"\n\noutput_paragraph(info % {rule.name.colorize(:magenta), rule.severity.to_s.colorize(rule.severity.color), rule.enabled? ? ENABLED_MARK : DISABLED_MARK, (rule.since_version.try(&.to_s) || \"N/A\").colorize(:white)})\n\nif rule_description = colorize_code_fences(rule.description)\n  output_title(\"Description\")\n  output_paragraph(rule_description)\nend\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Presenter/RuleVersionsPresenter","path":"Ameba/Presenter/RuleVersionsPresenter.html","kind":"class","full_name":"Ameba::Presenter::RuleVersionsPresenter","name":"RuleVersionsPresenter","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Presenter/BasePresenter","kind":"class","full_name":"Ameba::Presenter::BasePresenter","name":"BasePresenter"},"ancestors":[{"html_id":"crinja_lint/Ameba/Presenter/BasePresenter","kind":"class","full_name":"Ameba::Presenter::BasePresenter","name":"BasePresenter"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/presenter/rule_versions_presenter.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_versions_presenter.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Presenter","kind":"module","full_name":"Ameba::Presenter","name":"Presenter"},"instance_methods":[{"html_id":"run(rules,verbose=true)-instance-method","name":"run","abstract":false,"args":[{"name":"rules","external_name":"rules","restriction":""},{"name":"verbose","default_value":"true","external_name":"verbose","restriction":""}],"args_string":"(rules, verbose = true)","args_html":"(rules, verbose = <span class=\"n\">true</span>)","location":{"filename":"src/ameba/presenter/rule_versions_presenter.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/presenter/rule_versions_presenter.cr#L3"},"def":{"name":"run","args":[{"name":"rules","external_name":"rules","restriction":""},{"name":"verbose","default_value":"true","external_name":"verbose","restriction":""}],"visibility":"Public","body":"missing_version = SemanticVersion.new(0, 0, 0)\nversions = rules.sort_by do |rule|\n  rule.since_version || missing_version\nend.group_by(&.since_version)\n\nfirst = true\n\nversions.each do |version, version_rules|\n  if verbose\n    if first\n    else\n      output.puts\n    end\n    if version\n      output.puts(\"- %s\" % (version.to_s.colorize(:green)))\n    else\n      output.puts(\"- %s\" % (\"N/A\".colorize(:dark_gray)))\n    end\n    version_rules.map(&.name).sort!.each do |name|\n      output.puts(\"  - %s\" % (name.colorize(:dark_gray)))\n    end\n  else\n    if version\n      output.puts(\"- %s\" % (version.to_s.colorize(:green)))\n    end\n  end\n\n  first = false\nend\n"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Reportable","path":"Ameba/Reportable.html","kind":"module","full_name":"Ameba::Reportable","name":"Reportable","abstract":false,"locations":[{"filename":"src/ameba/reportable.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"crinja_lint/Ameba/Source","kind":"class","full_name":"Ameba::Source","name":"Source"}],"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Represents a module used to report issues.","summary":"<p>Represents a module used to report issues.</p>","instance_methods":[{"html_id":"add_issue(rule,location:Crinja::Parser::StreamPosition|Nil,end_location:Crinja::Parser::StreamPosition|Nil,message:String,status:Issue::Status|Nil=nil,block:Source::Corrector->|Nil=nil):Issue-instance-method","name":"add_issue","doc":"Adds a new issue to the list of issues.","summary":"<p>Adds a new issue to the list of issues.</p>","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"end_location","external_name":"end_location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"message","external_name":"message","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"args_string":"(rule, location : Crinja::Parser::StreamPosition | Nil, end_location : Crinja::Parser::StreamPosition | Nil, message : String, status : Issue::Status | Nil = nil, block : Source::Corrector ->  | Nil = nil) : Issue","args_html":"(rule, location : Crinja::Parser::StreamPosition | Nil, end_location : Crinja::Parser::StreamPosition | Nil, message : String, status : <a href=\"../Ameba/Issue/Status.html\">Issue::Status</a> | Nil = <span class=\"n\">nil</span>, block : <a href=\"../Ameba/Source/Corrector.html\">Source::Corrector</a> ->  | Nil = <span class=\"n\">nil</span>) : <a href=\"../Ameba/Issue.html\">Issue</a>","location":{"filename":"src/ameba/reportable.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L8"},"def":{"name":"add_issue","args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"end_location","external_name":"end_location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"message","external_name":"message","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"return_type":"Issue","visibility":"Public","body":"if location_disabled?(location, rule)\n  status || (status = Issue::Status::Disabled)\nend\n\n(Issue.new(code, rule, location, end_location, message, status, block)).tap do |issue|\n  issues << issue\nend\n"},"external_var":false},{"html_id":"add_issue(rule,location:Crinja::Parser::StreamPosition|Nil,end_location:Crinja::Parser::StreamPosition|Nil,message:String,status:Issue::Status|Nil=nil,&block:Source::Corrector->):Issue-instance-method","name":"add_issue","doc":"Adds a new issue to the list of issues.","summary":"<p>Adds a new issue to the list of issues.</p>","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"end_location","external_name":"end_location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"message","external_name":"message","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"}],"args_string":"(rule, location : Crinja::Parser::StreamPosition | Nil, end_location : Crinja::Parser::StreamPosition | Nil, message : String, status : Issue::Status | Nil = nil, &block : Source::Corrector -> ) : Issue","args_html":"(rule, location : Crinja::Parser::StreamPosition | Nil, end_location : Crinja::Parser::StreamPosition | Nil, message : String, status : <a href=\"../Ameba/Issue/Status.html\">Issue::Status</a> | Nil = <span class=\"n\">nil</span>, &block : <a href=\"../Ameba/Source/Corrector.html\">Source::Corrector</a> -> ) : <a href=\"../Ameba/Issue.html\">Issue</a>","location":{"filename":"src/ameba/reportable.cr","line_number":23,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L23"},"def":{"name":"add_issue","args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"end_location","external_name":"end_location","restriction":"Crinja::Parser::StreamPosition | ::Nil"},{"name":"message","external_name":"message","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Source::Corrector ->)"},"return_type":"Issue","visibility":"Public","body":"add_issue(rule, location, end_location, message, status, block)"},"external_var":false},{"html_id":"add_issue(rule,location:Tuple(Int32,Int32),message,status:Issue::Status|Nil=nil,block:Source::Corrector->|Nil=nil):Issue-instance-method","name":"add_issue","doc":"Adds a new issue for *location* defined by line and column numbers.","summary":"<p>Adds a new issue for <em>location</em> defined by line and column numbers.</p>","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"args_string":"(rule, location : Tuple(Int32, Int32), message, status : Issue::Status | Nil = nil, block : Source::Corrector ->  | Nil = nil) : Issue","args_html":"(rule, location : Tuple(Int32, Int32), message, status : <a href=\"../Ameba/Issue/Status.html\">Issue::Status</a> | Nil = <span class=\"n\">nil</span>, block : <a href=\"../Ameba/Source/Corrector.html\">Source::Corrector</a> ->  | Nil = <span class=\"n\">nil</span>) : <a href=\"../Ameba/Issue.html\">Issue</a>","location":{"filename":"src/ameba/reportable.cr","line_number":33,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L33"},"def":{"name":"add_issue","args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"return_type":"Issue","visibility":"Public","body":"location = Crinja::Parser::StreamPosition.new(path, *location)\n\nadd_issue(rule, location, nil, message, status, block)\n"},"external_var":false},{"html_id":"add_issue(rule,location:Tuple(Int32,Int32),message,status:Issue::Status|Nil=nil,&block:Source::Corrector->):Issue-instance-method","name":"add_issue","doc":"Adds a new issue for *location* defined by line and column numbers.","summary":"<p>Adds a new issue for <em>location</em> defined by line and column numbers.</p>","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"}],"args_string":"(rule, location : Tuple(Int32, Int32), message, status : Issue::Status | Nil = nil, &block : Source::Corrector -> ) : Issue","args_html":"(rule, location : Tuple(Int32, Int32), message, status : <a href=\"../Ameba/Issue/Status.html\">Issue::Status</a> | Nil = <span class=\"n\">nil</span>, &block : <a href=\"../Ameba/Source/Corrector.html\">Source::Corrector</a> -> ) : <a href=\"../Ameba/Issue.html\">Issue</a>","location":{"filename":"src/ameba/reportable.cr","line_number":41,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L41"},"def":{"name":"add_issue","args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Source::Corrector ->)"},"return_type":"Issue","visibility":"Public","body":"add_issue(rule, location, message, status, block)"},"external_var":false},{"html_id":"add_issue(rule,location:Tuple(Int32,Int32),end_location:Tuple(Int32,Int32),message,status:Issue::Status|Nil=nil,block:Source::Corrector->|Nil=nil):Issue-instance-method","name":"add_issue","doc":"Adds a new issue for *location* and *end_location* defined by line and column numbers.","summary":"<p>Adds a new issue for <em>location</em> and <em>end_location</em> defined by line and column numbers.</p>","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"end_location","external_name":"end_location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"args_string":"(rule, location : Tuple(Int32, Int32), end_location : Tuple(Int32, Int32), message, status : Issue::Status | Nil = nil, block : Source::Corrector ->  | Nil = nil) : Issue","args_html":"(rule, location : Tuple(Int32, Int32), end_location : Tuple(Int32, Int32), message, status : <a href=\"../Ameba/Issue/Status.html\">Issue::Status</a> | Nil = <span class=\"n\">nil</span>, block : <a href=\"../Ameba/Source/Corrector.html\">Source::Corrector</a> ->  | Nil = <span class=\"n\">nil</span>) : <a href=\"../Ameba/Issue.html\">Issue</a>","location":{"filename":"src/ameba/reportable.cr","line_number":46,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L46"},"def":{"name":"add_issue","args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"end_location","external_name":"end_location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"(Source::Corrector ->) | ::Nil"}],"return_type":"Issue","visibility":"Public","body":"location = Crinja::Parser::StreamPosition.new(path, *location)\nend_location = Crinja::Parser::StreamPosition.new(path, *end_location)\n\nadd_issue(rule, location, end_location, message, status, block)\n"},"external_var":false},{"html_id":"add_issue(rule,location:Tuple(Int32,Int32),end_location:Tuple(Int32,Int32),message,status:Issue::Status|Nil=nil,&block:Source::Corrector->):Issue-instance-method","name":"add_issue","doc":"Adds a new issue for *location* and *end_location* defined by line and column numbers.","summary":"<p>Adds a new issue for <em>location</em> and <em>end_location</em> defined by line and column numbers.</p>","abstract":false,"args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"end_location","external_name":"end_location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"}],"args_string":"(rule, location : Tuple(Int32, Int32), end_location : Tuple(Int32, Int32), message, status : Issue::Status | Nil = nil, &block : Source::Corrector -> ) : Issue","args_html":"(rule, location : Tuple(Int32, Int32), end_location : Tuple(Int32, Int32), message, status : <a href=\"../Ameba/Issue/Status.html\">Issue::Status</a> | Nil = <span class=\"n\">nil</span>, &block : <a href=\"../Ameba/Source/Corrector.html\">Source::Corrector</a> -> ) : <a href=\"../Ameba/Issue.html\">Issue</a>","location":{"filename":"src/ameba/reportable.cr","line_number":61,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L61"},"def":{"name":"add_issue","args":[{"name":"rule","external_name":"rule","restriction":""},{"name":"location","external_name":"location","restriction":"::Tuple(Int32, Int32)"},{"name":"end_location","external_name":"end_location","restriction":"::Tuple(Int32, Int32)"},{"name":"message","external_name":"message","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Issue::Status | ::Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Source::Corrector ->)"},"return_type":"Issue","visibility":"Public","body":"add_issue(rule, location, end_location, message, status, block)"},"external_var":false},{"html_id":"issues-instance-method","name":"issues","doc":"List of reported issues.","summary":"<p>List of reported issues.</p>","abstract":false,"location":{"filename":"src/ameba/reportable.cr","line_number":5,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L5"},"def":{"name":"issues","visibility":"Public","body":"@issues"},"external_var":false},{"html_id":"valid?-instance-method","name":"valid?","doc":"Returns `true` if the list of not disabled issues is empty, `false` otherwise.","summary":"<p>Returns <code>true</code> if the list of not disabled issues is empty, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/ameba/reportable.cr","line_number":71,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/reportable.cr#L71"},"def":{"name":"valid?","visibility":"Public","body":"issues.none?(&.enabled?)"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Rule","path":"Ameba/Rule.html","kind":"module","full_name":"Ameba::Rule","name":"Rule","abstract":false,"locations":[{"filename":"src/ameba/rule/base.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L1"},{"filename":"src/ameba/rule/lint/syntax.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/syntax.cr#L1"},{"filename":"src/ameba/rule/lint/tag.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/tag.cr#L1"},{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L1"},{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L1"},{"filename":"src/ameba/rule/style/string_literal_in_expression.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/string_literal_in_expression.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"SPECIAL","name":"SPECIAL","value":"{Lint::Syntax.rule_name}","doc":"List of names of the special rules, which\nbehave differently than usual rules.","summary":"<p>List of names of the special rules, which behave differently than usual rules.</p>"}],"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"class_methods":[{"html_id":"rules-class-method","name":"rules","doc":"Returns a list of all available rules.\n\n```\nAmeba::Rule.rules # => [Rule1, Rule2, ....]\n```","summary":"<p>Returns a list of all available rules.</p>","abstract":false,"location":{"filename":"src/ameba/rule/base.cr","line_number":164,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L164"},"def":{"name":"rules","visibility":"Public","body":"Base.inherited_rules"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Rule/Base","path":"Ameba/Rule/Base.html","kind":"class","full_name":"Ameba::Rule::Base","name":"Base","abstract":true,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/base.cr","line_number":28,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L28"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"GROUP_SEVERITY","name":"GROUP_SEVERITY","value":"{Lint: Ameba::Severity::Warning, Metrics: Ameba::Severity::Warning, Performance: Ameba::Severity::Warning}"}],"included_modules":[{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"}],"subclasses":[{"html_id":"crinja_lint/Ameba/Rule/Layout/LineLength","kind":"class","full_name":"Ameba::Rule::Layout::LineLength","name":"LineLength"},{"html_id":"crinja_lint/Ameba/Rule/Layout/TrailingBlankLines","kind":"class","full_name":"Ameba::Rule::Layout::TrailingBlankLines","name":"TrailingBlankLines"},{"html_id":"crinja_lint/Ameba/Rule/Layout/TrailingWhitespace","kind":"class","full_name":"Ameba::Rule::Layout::TrailingWhitespace","name":"TrailingWhitespace"},{"html_id":"crinja_lint/Ameba/Rule/Lint/Syntax","kind":"class","full_name":"Ameba::Rule::Lint::Syntax","name":"Syntax"},{"html_id":"crinja_lint/Ameba/Rule/Lint/Tag","kind":"class","full_name":"Ameba::Rule::Lint::Tag","name":"Tag"},{"html_id":"crinja_lint/Ameba/Rule/Lint/UselessAssign","kind":"class","full_name":"Ameba::Rule::Lint::UselessAssign","name":"UselessAssign"},{"html_id":"crinja_lint/Ameba/Rule/Style/BlockEndTagName","kind":"class","full_name":"Ameba::Rule::Style::BlockEndTagName","name":"BlockEndTagName"},{"html_id":"crinja_lint/Ameba/Rule/Style/StringLiteralInExpression","kind":"class","full_name":"Ameba::Rule::Style::StringLiteralInExpression","name":"StringLiteralInExpression"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"Represents a base of all rules. In other words, all rules\ninherits from this struct:\n\n```\nclass MyRule < Ameba::Rule::Base\n  def test(source)\n    if invalid?(source)\n      issue_for line, column, \"Something wrong.\"\n    end\n  end\n\n  private def invalid?(source)\n    # ...\n  end\nend\n```\n\nEnforces rules to implement an abstract `#test` method which\nis designed to test the source passed in. If source has issues\nthat are tested by this rule, it should add an issue.","summary":"<p>Represents a base of all rules.</p>","class_methods":[{"html_id":"default_severity:Ameba::Severity-class-method","name":"default_severity","abstract":false,"def":{"name":"default_severity","return_type":"Ameba::Severity","visibility":"Public","body":"if (__temp_391 = @@default_severity).nil?\n  @@default_severity = (GROUP_SEVERITY[group_name]? || Ameba::Severity::Convention)\nelse\n  __temp_391\nend"},"external_var":false}],"instance_methods":[{"html_id":"==(other)-instance-method","name":"==","doc":"Returns `false` (other can only be a `Value` here).","summary":"<p>Returns <code>false</code> (other can only be a <code>Value</code> here).</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/ameba/rule/base.cr","line_number":123,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L123"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"name == other.try(&.name)"},"external_var":false},{"html_id":"catch(source:Source)-instance-method","name":"catch","doc":"A convenient addition to `#test` method that does the same\nbut returns a passed in `source` as an addition.\n\n```\nsource = MyRule.new.catch(source)\nsource.valid?\n```","summary":"<p>A convenient addition to <code><a href=\"../../Ameba/Rule/Base.html#test%28source%2Cnode%3ACrinja%3A%3AAST%3A%3AASTNode%29-instance-method\">#test</a></code> method that does the same but returns a passed in <code>source</code> as an addition.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>)","location":{"filename":"src/ameba/rule/base.cr","line_number":56,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L56"},"def":{"name":"catch","args":[{"name":"source","external_name":"source","restriction":"Source"}],"visibility":"Public","body":"source.tap do\n  test(source)\nend"},"external_var":false},{"html_id":"excluded?(source)-instance-method","name":"excluded?","doc":"Checks whether the source is excluded from this rule.\nIt searches for a path in `excluded` property which matches\nthe one of the given source.\n\n```\nmy_rule.excluded?(source) # => true or false\n```","summary":"<p>Checks whether the source is excluded from this rule.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/rule/base.cr","line_number":94,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L94"},"def":{"name":"excluded?","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"!!excluded.try(&.any? do |path|\n  (source.matches_path?(path)) || (Dir.glob(path)).any? do |glob|\n    source.matches_path?(glob)\n  end\nend)"},"external_var":false},{"html_id":"group-instance-method","name":"group","doc":"Returns a group this rule belong to.\n\n```\nclass MyGroup::MyRule < Ameba::Rule::Base\n  # ...\nend\n\nMyGroup::MyRule.new.group # => \"MyGroup\"\n```","summary":"<p>Returns a group this rule belong to.</p>","abstract":false,"location":{"filename":"src/ameba/rule/base.cr","line_number":83,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L83"},"def":{"name":"group","visibility":"Public","body":"({{ @type }}).group_name"},"external_var":false},{"html_id":"hash-instance-method","name":"hash","doc":"Generates an `UInt64` hash value for this object.\n\nThis method must have the property that `a == b` implies `a.hash == b.hash`.\n\nThe hash value is used along with `==` by the `Hash` class to determine if two objects\nreference the same hash key.\n\nSubclasses must not override this method. Instead, they must define `hash(hasher)`,\nthough usually the macro `def_hash` can be used to generate this method.","summary":"<p>Generates an <code>UInt64</code> hash value for this object.</p>","abstract":false,"location":{"filename":"src/ameba/rule/base.cr","line_number":127,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L127"},"def":{"name":"hash","visibility":"Public","body":"name.hash"},"external_var":false},{"html_id":"name-instance-method","name":"name","doc":"Returns a name of this rule, which is basically a class name.\n\n```\nclass MyRule < Ameba::Rule::Base\n  def test(source)\n  end\nend\n\nMyRule.new.name # => \"MyRule\"\n```","summary":"<p>Returns a name of this rule, which is basically a class name.</p>","abstract":false,"location":{"filename":"src/ameba/rule/base.cr","line_number":70,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L70"},"def":{"name":"name","visibility":"Public","body":"({{ @type }}).rule_name"},"external_var":false},{"html_id":"special?-instance-method","name":"special?","doc":"Returns `true` if this rule is special and behaves differently than\nusual rules.\n\n```\nmy_rule.special? # => true or false\n```","summary":"<p>Returns <code>true</code> if this rule is special and behaves differently than usual rules.</p>","abstract":false,"location":{"filename":"src/ameba/rule/base.cr","line_number":119,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L119"},"def":{"name":"special?","visibility":"Public","body":"name.in?(SPECIAL)"},"external_var":false},{"html_id":"test(source,node:Crinja::AST::ASTNode)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"}],"args_string":"(source, node : Crinja::AST::ASTNode)","args_html":"(source, node : Crinja::AST::ASTNode)","location":{"filename":"src/ameba/rule/base.cr","line_number":43,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L43"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"test(source,node:Crinja::AST::ASTNode,*args)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(source, node : Crinja::AST::ASTNode, *args)","args_html":"(source, node : Crinja::AST::ASTNode, *args)","location":{"filename":"src/ameba/rule/base.cr","line_number":46,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L46"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"args","external_name":"args","restriction":""}],"splat_index":2,"visibility":"Public","body":""},"external_var":false},{"html_id":"test(source:Source)-instance-method","name":"test","doc":"This method is designed to test the source passed in. If source has issues\nthat are tested by this rule, it should add an issue.\n\nBy default it uses a node visitor to traverse all the nodes in the source.\n\nNOTE: Must be overridden for other type of rules.","summary":"<p>This method is designed to test the source passed in.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","args_html":"(source : <a href=\"../../Ameba/Source.html\">Source</a>)","location":{"filename":"src/ameba/rule/base.cr","line_number":37,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L37"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":"Source"}],"visibility":"Public","body":"visitor = AST::NodeVisitor.new(self, source)\n\nsource.ast.accept(visitor)\n"},"external_var":false}],"macros":[{"html_id":"issue_for(*args,**kwargs,&block)-macro","name":"issue_for","doc":"Adds an issue to the *source*","summary":"<p>Adds an issue to the <em>source</em></p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs, &block)","args_html":"(*args, **kwargs, &block)","location":{"filename":"src/ameba/rule/base.cr","line_number":132,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/base.cr#L132"},"def":{"name":"issue_for","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":0,"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"      source.add_issue(self, \n{{ args.splat(\", \") }}\n{{ kwargs.double_splat }}\n) \n{{ block }}\n\n    \n"}}]},{"html_id":"crinja_lint/Ameba/Rule/Layout","path":"Ameba/Rule/Layout.html","kind":"module","full_name":"Ameba::Rule::Layout","name":"Layout","abstract":false,"locations":[{"filename":"src/ameba/rule/layout/line_length.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/line_length.cr#L1"},{"filename":"src/ameba/rule/layout/trailing_blank_lines.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_blank_lines.cr#L1"},{"filename":"src/ameba/rule/layout/trailing_whitespace.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_whitespace.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"types":[{"html_id":"crinja_lint/Ameba/Rule/Layout/LineLength","path":"Ameba/Rule/Layout/LineLength.html","kind":"class","full_name":"Ameba::Rule::Layout::LineLength","name":"LineLength","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/layout/line_length.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/line_length.cr#L11"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MSG","name":"MSG","value":"\"Line too long\""}],"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Layout","kind":"module","full_name":"Ameba::Rule::Layout","name":"Layout"},"doc":"A rule that disallows lines longer than `max_length` number of symbols.\n\nYAML configuration example:\n\n```\nLayout/LineLength:\n  Enabled: true\n  MaxLength: 100\n```","summary":"<p>A rule that disallows lines longer than <code><a href=\"../../../Ameba/Rule/Layout/LineLength.html#max_length%3AInt32-instance-method\">#max_length</a></code> number of symbols.</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows lines longer than `max_length` number of symbols.\n\nYAML configuration example:\n\n```\nLayout/LineLength:\n  Enabled: true\n  MaxLength: 100\n```","summary":"<p>A rule that disallows lines longer than <code><a href=\"../../../Ameba/Rule/Layout/LineLength.html#max_length%3AInt32-instance-method\">#max_length</a></code> number of symbols.</p>","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/layout/line_length.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/line_length.cr#L11"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","return_type":"Bool","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"max_length:Int32-instance-method","name":"max_length","abstract":false,"def":{"name":"max_length","return_type":"Int32","visibility":"Public","body":"@max_length"},"external_var":false},{"html_id":"max_length=(max_length:Int32)-instance-method","name":"max_length=","abstract":false,"args":[{"name":"max_length","external_name":"max_length","restriction":"Int32"}],"args_string":"(max_length : Int32)","args_html":"(max_length : Int32)","def":{"name":"max_length=","args":[{"name":"max_length","external_name":"max_length","restriction":"Int32"}],"visibility":"Public","body":"@max_length = max_length"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/layout/line_length.cr","line_number":12,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/line_length.cr#L12"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/rule/layout/line_length.cr","line_number":21,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/line_length.cr#L21"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"source.lines.each_with_index do |line, index|\n  if line.size > max_length\n    issue_for({index + 1, max_length + 1}, MSG)\n  end\nend"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Rule/Layout/TrailingBlankLines","path":"Ameba/Rule/Layout/TrailingBlankLines.html","kind":"class","full_name":"Ameba::Rule::Layout::TrailingBlankLines","name":"TrailingBlankLines","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/layout/trailing_blank_lines.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_blank_lines.cr#L10"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MSG","name":"MSG","value":"\"Excessive trailing newline detected\""},{"id":"MSG_FINAL_NEWLINE","name":"MSG_FINAL_NEWLINE","value":"\"Trailing newline missing\""}],"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Layout","kind":"module","full_name":"Ameba::Rule::Layout","name":"Layout"},"doc":"A rule that disallows trailing blank lines at the end of the source file.\n\nYAML configuration example:\n\n```\nLayout/TrailingBlankLines:\n  Enabled: true\n```","summary":"<p>A rule that disallows trailing blank lines at the end of the source file.</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows trailing blank lines at the end of the source file.\n\nYAML configuration example:\n\n```\nLayout/TrailingBlankLines:\n  Enabled: true\n```","summary":"<p>A rule that disallows trailing blank lines at the end of the source file.</p>","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/layout/trailing_blank_lines.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_blank_lines.cr#L10"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/layout/trailing_blank_lines.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_blank_lines.cr#L11"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/rule/layout/trailing_blank_lines.cr","line_number":19,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_blank_lines.cr#L19"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"source_lines = source.lines\nif source_lines.empty?\n  return\nend\n\nlast_source_line = source_lines.last\nsource_lines_size = source_lines.size\nif (source_lines_size == 1) && last_source_line.empty?\n  return\nend\n\nlast_line_empty = last_source_line.empty?\nif source_lines_size.zero? || ((source_lines.last(2)).join.presence && last_line_empty)\n  return\nend\n\nlocation = {source_lines_size, 1}\n\nif last_line_empty\n  issue_for(location, MSG)\nelse\n  issue_for(location, MSG_FINAL_NEWLINE) do |corrector|\n    corrector.insert_before({source_lines_size + 1, 1}, '\\n')\n  end\nend\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Rule/Layout/TrailingWhitespace","path":"Ameba/Rule/Layout/TrailingWhitespace.html","kind":"class","full_name":"Ameba::Rule::Layout::TrailingWhitespace","name":"TrailingWhitespace","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/layout/trailing_whitespace.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_whitespace.cr#L10"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MSG","name":"MSG","value":"\"Trailing whitespace detected\""}],"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Layout","kind":"module","full_name":"Ameba::Rule::Layout","name":"Layout"},"doc":"A rule that disallows trailing whitespace.\n\nYAML configuration example:\n\n```\nLayout/TrailingWhitespace:\n  Enabled: true\n```","summary":"<p>A rule that disallows trailing whitespace.</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows trailing whitespace.\n\nYAML configuration example:\n\n```\nLayout/TrailingWhitespace:\n  Enabled: true\n```","summary":"<p>A rule that disallows trailing whitespace.</p>","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/layout/trailing_whitespace.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_whitespace.cr#L10"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/layout/trailing_whitespace.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_whitespace.cr#L11"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/rule/layout/trailing_whitespace.cr","line_number":18,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/layout/trailing_whitespace.cr#L18"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"source.lines.each_with_index do |line, index|\n  if ws_index = line =~ (/\\s+$/)\n  else\n    next\n  end\n\n  location = {index + 1, ws_index + 1}\n  end_location = {index + 1, line.size}\n\n  issue_for(location, end_location, MSG) do |corrector|\n    corrector.remove(location, end_location)\n  end\nend"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Rule/Lint","path":"Ameba/Rule/Lint.html","kind":"module","full_name":"Ameba::Rule::Lint","name":"Lint","abstract":false,"locations":[{"filename":"src/ameba/rule/lint/syntax.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/syntax.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"types":[{"html_id":"crinja_lint/Ameba/Rule/Lint/Syntax","path":"Ameba/Rule/Lint/Syntax.html","kind":"class","full_name":"Ameba::Rule::Lint::Syntax","name":"Syntax","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/lint/syntax.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/syntax.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Lint","kind":"module","full_name":"Ameba::Rule::Lint","name":"Lint"},"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/lint/syntax.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/syntax.cr#L2"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"severity-instance-method","name":"severity","abstract":false,"location":{"filename":"src/ameba/rule/lint/syntax.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/syntax.cr#L8"},"def":{"name":"severity","visibility":"Public","body":"Severity::Error"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/lint/syntax.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/syntax.cr#L3"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/rule/lint/syntax.cr","line_number":12,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/syntax.cr#L12"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"begin\n  source.ast\nrescue ex : Crinja::Error\n  source.add_issue(self, location_start(ex), location_end(ex), (ex.message.split(\"\\n\")).first)\nend"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Rule/Lint/Tag","path":"Ameba/Rule/Lint/Tag.html","kind":"class","full_name":"Ameba::Rule::Lint::Tag","name":"Tag","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/lint/tag.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/tag.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MSG_SECURITY","name":"MSG_SECURITY","value":"\"Access to `%s` is disabled\""},{"id":"MSG_UNKNOWN","name":"MSG_UNKNOWN","value":"\"`%s` tag not found\""}],"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Lint","kind":"module","full_name":"Ameba::Rule::Lint","name":"Lint"},"doc":"Verifies all tags are formatted correctly","summary":"<p>Verifies all tags are formatted correctly</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","doc":"Verifies all tags are formatted correctly","summary":"<p>Verifies all tags are formatted correctly</p>","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/lint/tag.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/tag.cr#L3"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/lint/tag.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/tag.cr#L4"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source,node:Crinja::AST::TagNode)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::TagNode"}],"args_string":"(source, node : Crinja::AST::TagNode)","args_html":"(source, node : Crinja::AST::TagNode)","location":{"filename":"src/ameba/rule/lint/tag.cr","line_number":12,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/tag.cr#L12"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::TagNode"}],"visibility":"Public","body":"begin\n  tag = source.env.tags[node.name]\n\n  tag.validate_arguments(node, source.env)\nrescue ex : Crinja::TemplateSyntaxError\n  source.add_issue(self, location_start(ex), location_end(ex), (ex.message.split(\"\\n\")).first)\nrescue Crinja::SecurityError\n  source.add_issue(self, location_start(node), location_end(node), MSG_SECURITY % node.name)\nrescue Crinja::FeatureLibrary::UnknownFeatureError\n  source.add_issue(self, location_start(node), location_end(node), MSG_UNKNOWN % node.name)\nrescue ex\n  source.add_issue(self, location_start(node), location_end(node), ex.message.try do |__arg0|\n    (__arg0.split(\"\\n\")).first\n  end || \"Unknown error\")\nend"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Rule/Lint/UselessAssign","path":"Ameba/Rule/Lint/UselessAssign.html","kind":"class","full_name":"Ameba::Rule::Lint::UselessAssign","name":"UselessAssign","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MSG","name":"MSG","value":"\"Useless assignment to `%s`\""}],"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Lint","kind":"module","full_name":"Ameba::Rule::Lint","name":"Lint"},"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L2"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L3"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L10"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"begin\n  visitor = AssignVisitor.new(self, source)\n\n  source.ast.accept(visitor)\n\n  visitor.assigns.each do |name, arg|\n    if name.starts_with?(\"_\")\n      next\n    end\n\n    source.add_issue(self, location_start(arg), (location_end(arg)).try(&.adjust(column_number: -1)), MSG % name) do |corrector|\n      corrector.insert_before(arg.location_start, \"_\")\n    end\n  end\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\nend"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Rule/Lint/UselessAssign/AssignVisitor","path":"Ameba/Rule/Lint/UselessAssign/AssignVisitor.html","kind":"class","full_name":"Ameba::Rule::Lint::UselessAssign::AssignVisitor","name":"AssignVisitor","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/AST/TagVisitor","kind":"class","full_name":"Ameba::AST::TagVisitor","name":"TagVisitor"},"ancestors":[{"html_id":"crinja_lint/Ameba/AST/TagVisitor","kind":"class","full_name":"Ameba::AST::TagVisitor","name":"TagVisitor"},{"html_id":"crinja_lint/Ameba/AST/NodeVisitor","kind":"class","full_name":"Ameba::AST::NodeVisitor","name":"NodeVisitor"},{"html_id":"crinja_lint/Crinja/AST","kind":"module","full_name":"Crinja::AST","name":"AST"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":31,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L31"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Rule/Lint/UselessAssign","kind":"class","full_name":"Ameba::Rule::Lint::UselessAssign","name":"UselessAssign"},"instance_methods":[{"html_id":"assigns:Hash(String,Crinja::AST::ASTNode|Crinja::Parser::Token)-instance-method","name":"assigns","abstract":false,"location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":32,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L32"},"def":{"name":"assigns","return_type":"Hash(String, Crinja::AST::ASTNode | Crinja::Parser::Token)","visibility":"Public","body":"@assigns"},"external_var":false},{"html_id":"visit(node:Crinja::AST::IdentifierLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::IdentifierLiteral"}],"args_string":"(node : Crinja::AST::IdentifierLiteral)","args_html":"(node : Crinja::AST::IdentifierLiteral)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":90,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L90"},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::IdentifierLiteral"}],"visibility":"Public","body":"@assigns.delete(node.name)\nsuper(node)\n"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag::Set)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Set"}],"args_string":"(node, tag : Crinja::Tag::Set)","args_html":"(node, tag : <a href=\"../../../../Crinja/Tag/Set.html\">Crinja::Tag::Set</a>)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L34"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Set"}],"visibility":"Public","body":"begin\n  variables = tag.validate_arguments(node, @source.env)\n\n  variables.each do |variable, _|\n    @assigns[variable] = node.arguments.find(node) do |i|\n      i.value == variable\n    end\n  end\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\nelse\n  super(node, tag)\nend"},"external_var":false},{"html_id":"visit_tag(node:Crinja::AST::ASTNode,tag:Crinja::Tag::For)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::For"}],"args_string":"(node : Crinja::AST::ASTNode, tag : Crinja::Tag::For)","args_html":"(node : Crinja::AST::ASTNode, tag : <a href=\"../../../../Crinja/Tag/For.html\">Crinja::Tag::For</a>)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":46,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L46"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::For"}],"visibility":"Public","body":"begin\n  super(node, tag)\n\n  variables, _, _, _ = tag.validate_arguments(node, @source.env)\n\n  variables.each do |variable|\n    @assigns[variable] = node.arguments.find(node) do |i|\n      i.value == variable\n    end\n  end\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\nend"},"external_var":false},{"html_id":"visit_tag(node:Crinja::AST::ASTNode,tag:Crinja::Tag::With)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::With"}],"args_string":"(node : Crinja::AST::ASTNode, tag : Crinja::Tag::With)","args_html":"(node : Crinja::AST::ASTNode, tag : <a href=\"../../../../Crinja/Tag/With.html\">Crinja::Tag::With</a>)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":58,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L58"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::With"}],"visibility":"Public","body":"begin\n  variables = tag.validate_arguments(node, @source.env)\n\n  variables.each do |variable, _|\n    @assigns[variable] = node.arguments.find(node) do |i|\n      i.value == variable\n    end\n  end\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\nelse\n  super(node, tag)\nend"},"external_var":false},{"html_id":"visit_tag(node:Crinja::AST::ASTNode,tag:Crinja::Tag::Call)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Call"}],"args_string":"(node : Crinja::AST::ASTNode, tag : Crinja::Tag::Call)","args_html":"(node : Crinja::AST::ASTNode, tag : <a href=\"../../../../Crinja/Tag/Call.html\">Crinja::Tag::Call</a>)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":70,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L70"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Call"}],"visibility":"Public","body":"begin\n  defaults, _ = tag.validate_arguments(node, @source.env)\n\n  defaults.each do |variable, _|\n    @assigns[variable] = node.arguments.find(node) do |i|\n      i.value == variable\n    end\n  end\nrescue Crinja::TemplateSyntaxError | Crinja::SecurityError | Crinja::FeatureLibrary::UnknownFeatureError\nelse\n  super(node, tag)\nend"},"external_var":false},{"html_id":"visit_tag(node:Crinja::AST::ASTNode,tag:Crinja::Tag::Include|Crinja::Tag::Extends)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Include | Crinja::Tag::Extends"}],"args_string":"(node : Crinja::AST::ASTNode, tag : Crinja::Tag::Include | Crinja::Tag::Extends)","args_html":"(node : Crinja::AST::ASTNode, tag : <a href=\"../../../../Crinja/Tag/Include.html\">Crinja::Tag::Include</a> | <a href=\"../../../../Crinja/Tag/Extends.html\">Crinja::Tag::Extends</a>)","location":{"filename":"src/ameba/rule/lint/useless_assign.cr","line_number":82,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/lint/useless_assign.cr#L82"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::ASTNode"},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Include | Crinja::Tag::Extends"}],"visibility":"Public","body":"@assigns.clear\n\nsuper(node, tag)\n"},"external_var":false}]}]}]},{"html_id":"crinja_lint/Ameba/Rule/Style","path":"Ameba/Rule/Style.html","kind":"module","full_name":"Ameba::Rule::Style","name":"Style","abstract":false,"locations":[{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"types":[{"html_id":"crinja_lint/Ameba/Rule/Style/BlockEndTagName","path":"Ameba/Rule/Style/BlockEndTagName.html","kind":"class","full_name":"Ameba::Rule::Style::BlockEndTagName","name":"BlockEndTagName","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L3"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MSG_END_TAG_NAME","name":"MSG_END_TAG_NAME","value":"\"End tag `%s` does not accept arguments\""},{"id":"MSG_NAME_MISMATCH","name":"MSG_NAME_MISMATCH","value":"\"End tag name `%s` does not match opening tag name `%s`\""},{"id":"MSG_NO_NAME","name":"MSG_NO_NAME","value":"\"Missing end tag name `%s`\""},{"id":"TAGS","name":"TAGS","value":"[\"block\", \"endblock\"] of ::String"}],"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Style","kind":"module","full_name":"Ameba::Rule::Style","name":"Style"},"doc":"Verifies block and other tag names match their end tag name","summary":"<p>Verifies block and other tag names match their end tag name</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","doc":"Verifies block and other tag names match their end tag name","summary":"<p>Verifies block and other tag names match their end tag name</p>","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L3"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L4"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source,node,tag:Crinja::Tag::Block,tag_stack:Array(String|Nil))-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Block"},{"name":"tag_stack","external_name":"tag_stack","restriction":"Array(String | ::Nil)"}],"args_string":"(source, node, tag : Crinja::Tag::Block, tag_stack : Array(String | Nil))","args_html":"(source, node, tag : <a href=\"../../../Crinja/Tag/Block.html\">Crinja::Tag::Block</a>, tag_stack : Array(String | Nil))","location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":21,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L21"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Block"},{"name":"tag_stack","external_name":"tag_stack","restriction":"Array(String | ::Nil)"}],"visibility":"Public","body":"if node.name.in?(TAGS)\nelse\n  return\nend\n\nif (name = node.arguments.first?) && name.kind.identifier?\n  tag_stack.push(name.value)\nelse\n  tag_stack.push(nil)\nend\n"},"external_var":false},{"html_id":"test(source,node:Crinja::AST::EndTagNode,tag_stack:Array(String|Nil))-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::EndTagNode"},{"name":"tag_stack","external_name":"tag_stack","restriction":"Array(String | ::Nil)"}],"args_string":"(source, node : Crinja::AST::EndTagNode, tag_stack : Array(String | Nil))","args_html":"(source, node : Crinja::AST::EndTagNode, tag_stack : Array(String | Nil))","location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":31,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L31"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::EndTagNode"},{"name":"tag_stack","external_name":"tag_stack","restriction":"Array(String | ::Nil)"}],"visibility":"Public","body":"if node.name.in?(TAGS)\n  if expected_name = tag_stack.pop\n  else\n    return\n  end\n\n  if (name = node.arguments.first?) && name.kind.identifier?\n    if name.value != expected_name\n      source.add_issue(self, location_start(node), location_end(node), MSG_NAME_MISMATCH % {name.value, expected_name})\n    end\n  else\n    source.add_issue(self, location_start(node), location_end(node), MSG_NO_NAME % expected_name) do |corrector|\n      corrector.insert_after(node.location_end, expected_name + \" \")\n    end\n  end\nelse\n  if node.arguments.size > 0 && !node.arguments.first.kind.eof?\n    source.add_issue(self, location_start(node), location_end(node), MSG_END_TAG_NAME % (node.name || \"unknown name\"))\n  end\nend"},"external_var":false},{"html_id":"test(source)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":15,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L15"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"visitor = BlockTagVisitor.new(self, source)\n\nsource.ast.accept(visitor)\n"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Rule/Style/BlockEndTagName/BlockTagVisitor","path":"Ameba/Rule/Style/BlockEndTagName/BlockTagVisitor.html","kind":"class","full_name":"Ameba::Rule::Style::BlockEndTagName::BlockTagVisitor","name":"BlockTagVisitor","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/AST/TagVisitor","kind":"class","full_name":"Ameba::AST::TagVisitor","name":"TagVisitor"},"ancestors":[{"html_id":"crinja_lint/Ameba/AST/TagVisitor","kind":"class","full_name":"Ameba::AST::TagVisitor","name":"TagVisitor"},{"html_id":"crinja_lint/Ameba/AST/NodeVisitor","kind":"class","full_name":"Ameba::AST::NodeVisitor","name":"NodeVisitor"},{"html_id":"crinja_lint/Crinja/AST","kind":"module","full_name":"Crinja::AST","name":"AST"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":64,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L64"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Rule/Style/BlockEndTagName","kind":"class","full_name":"Ameba::Rule::Style::BlockEndTagName","name":"BlockEndTagName"},"instance_methods":[{"html_id":"tag_stack:Array(String|Nil)-instance-method","name":"tag_stack","abstract":false,"location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":65,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L65"},"def":{"name":"tag_stack","return_type":"Array(String | ::Nil)","visibility":"Public","body":"@tag_stack"},"external_var":false},{"html_id":"visit(node:Crinja::AST::EndTagNode)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::EndTagNode"}],"args_string":"(node : Crinja::AST::EndTagNode)","args_html":"(node : Crinja::AST::EndTagNode)","location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":67,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L67"},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crinja::AST::EndTagNode"}],"visibility":"Public","body":"@rule.test(@source, node, tag_stack)"},"external_var":false},{"html_id":"visit_tag(node,tag:Crinja::Tag::Block)-instance-method","name":"visit_tag","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Block"}],"args_string":"(node, tag : Crinja::Tag::Block)","args_html":"(node, tag : <a href=\"../../../../Crinja/Tag/Block.html\">Crinja::Tag::Block</a>)","location":{"filename":"src/ameba/rule/style/block_end_tag_name.cr","line_number":71,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/block_end_tag_name.cr#L71"},"def":{"name":"visit_tag","args":[{"name":"node","external_name":"node","restriction":""},{"name":"tag","external_name":"tag","restriction":"Crinja::Tag::Block"}],"visibility":"Public","body":"@rule.test(@source, node, tag, tag_stack)"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Rule/Style/StringLiteralInExpression","path":"Ameba/Rule/Style/StringLiteralInExpression.html","kind":"class","full_name":"Ameba::Rule::Style::StringLiteralInExpression","name":"StringLiteralInExpression","abstract":false,"superclass":{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/Ameba/Rule/Base","kind":"class","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"crinja_lint/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/rule/style/string_literal_in_expression.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/string_literal_in_expression.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MSG","name":"MSG","value":"\"String literal in expression\""}],"included_modules":[{"html_id":"crinja_lint/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"crinja_lint/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"crinja_lint/Ameba/Rule/Style","kind":"module","full_name":"Ameba::Rule::Style","name":"Style"},"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(config=nil)-class-method","name":"new","abstract":false,"args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = nil)","args_html":"(config = <span class=\"n\">nil</span>)","location":{"filename":"src/ameba/rule/style/string_literal_in_expression.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/string_literal_in_expression.cr#L2"},"def":{"name":"new","args":[{"name":"config","default_value":"nil","external_name":"config","restriction":""}],"visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"},"external_var":false}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"description=(description:String)-instance-method","name":"description=","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"}],"args_string":"(description : String)","args_html":"(description : String)","def":{"name":"description=","args":[{"name":"description","external_name":"description","restriction":"String"}],"visibility":"Public","body":"@description = description"},"external_var":false},{"html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","abstract":false,"args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"args_string":"(enabled : Bool)","args_html":"(enabled : Bool)","def":{"name":"enabled=","args":[{"name":"enabled","external_name":"enabled","restriction":"::Bool"}],"visibility":"Public","body":"@enabled = enabled"},"external_var":false},{"html_id":"enabled?:Bool-instance-method","name":"enabled?","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@enabled"},"external_var":false},{"html_id":"excluded:Array(String)|Nil-instance-method","name":"excluded","abstract":false,"def":{"name":"excluded","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@excluded"},"external_var":false},{"html_id":"excluded=(excluded:Array(String)|Nil)-instance-method","name":"excluded=","abstract":false,"args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"args_string":"(excluded : Array(String) | Nil)","args_html":"(excluded : Array(String) | Nil)","def":{"name":"excluded=","args":[{"name":"excluded","external_name":"excluded","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@excluded = excluded"},"external_var":false},{"html_id":"severity:Ameba::Severity-instance-method","name":"severity","abstract":false,"def":{"name":"severity","visibility":"Public","body":"@severity"},"external_var":false},{"html_id":"severity=(severity:Ameba::Severity)-instance-method","name":"severity=","abstract":false,"args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"args_string":"(severity : Ameba::Severity)","args_html":"(severity : <a href=\"../../../Ameba/Severity.html\">Ameba::Severity</a>)","def":{"name":"severity=","args":[{"name":"severity","external_name":"severity","restriction":"::Ameba::Severity"}],"visibility":"Public","body":"@severity = severity"},"external_var":false},{"html_id":"since_version:SemanticVersion|Nil-instance-method","name":"since_version","abstract":false,"location":{"filename":"src/ameba/rule/style/string_literal_in_expression.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/string_literal_in_expression.cr#L3"},"def":{"name":"since_version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"if version = @since_version\n  SemanticVersion.parse(version)\nend"},"external_var":false},{"html_id":"since_version=(since_version:String)-instance-method","name":"since_version=","abstract":false,"args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"args_string":"(since_version : String)","args_html":"(since_version : String)","def":{"name":"since_version=","args":[{"name":"since_version","external_name":"since_version","restriction":"String"}],"visibility":"Public","body":"@since_version = since_version"},"external_var":false},{"html_id":"test(source,node:Crinja::AST::PrintStatement)-instance-method","name":"test","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::PrintStatement"}],"args_string":"(source, node : Crinja::AST::PrintStatement)","args_html":"(source, node : Crinja::AST::PrintStatement)","location":{"filename":"src/ameba/rule/style/string_literal_in_expression.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/rule/style/string_literal_in_expression.cr#L10"},"def":{"name":"test","args":[{"name":"source","external_name":"source","restriction":""},{"name":"node","external_name":"node","restriction":"Crinja::AST::PrintStatement"}],"visibility":"Public","body":"if node.expression.is_a?(Crinja::AST::StringLiteral)\nelse\n  return\nend\n\nsource.add_issue(self, location_start(node), location_end(node), MSG)\n"},"external_var":false}]}]}]},{"html_id":"crinja_lint/Ameba/Runner","path":"Ameba/Runner.html","kind":"class","full_name":"Ameba::Runner","name":"Runner","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/runner.cr","line_number":12,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L12"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Represents a runner for inspecting sources files.\nHolds a list of rules to do inspection based on,\nlist of sources to run inspection on and a formatter\nto prepare a report.\n\n```\nconfig = Ameba::Config.load\nrunner = Ameba::Runner.new config\nrunner.run.success? # => true or false\n```","summary":"<p>Represents a runner for inspecting sources files.</p>","constructors":[{"html_id":"new(config:Config)-class-method","name":"new","doc":"Instantiates a runner using a `config`.\n\n```\nconfig = Ameba::Config.load\nconfig.files = files\nconfig.formatter = formatter\n\nAmeba::Runner.new config\n```","summary":"<p>Instantiates a runner using a <code>config</code>.</p>","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"}],"args_string":"(config : Config)","args_html":"(config : <a href=\"../Ameba/Config.html\">Config</a>)","location":{"filename":"src/ameba/runner.cr","line_number":61,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L61"},"def":{"name":"new","args":[{"name":"config","external_name":"config","restriction":"Config"}],"visibility":"Public","body":"_ = allocate\n_.initialize(config)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"explain(location,output=STDOUT)-instance-method","name":"explain","doc":"Explains an issue at a specified *location*.\n\nRunner should perform inspection before doing the explain.\nThis is necessary to be able to find the issue at a specified location.\n\n```\nrunner = Ameba::Runner.new config\nrunner.run\nrunner.explain({file: file, line: l, column: c})\n```","summary":"<p>Explains an issue at a specified <em>location</em>.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"output","default_value":"STDOUT","external_name":"output","restriction":""}],"args_string":"(location, output = STDOUT)","args_html":"(location, output = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/ameba/runner.cr","line_number":179,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L179"},"def":{"name":"explain","args":[{"name":"location","external_name":"location","restriction":""},{"name":"output","default_value":"STDOUT","external_name":"output","restriction":""}],"visibility":"Public","body":"(Formatter::ExplainFormatter.new(output, location)).finished(@sources)"},"external_var":false},{"html_id":"run-instance-method","name":"run","doc":"Performs the inspection. Iterates through all sources and test it using\nlist of rules. If a specific rule fails on a specific source, it adds\nan issue to that source.\n\nThis action also notifies formatter when inspection is started/finished,\nand when a specific source started/finished to be inspected.\n\n```\nrunner = Ameba::Runner.new config\nrunner.run # => returns runner again\n```","summary":"<p>Performs the inspection.</p>","abstract":false,"location":{"filename":"src/ameba/runner.cr","line_number":98,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L98"},"def":{"name":"run","visibility":"Public","body":"begin\n  @formatter.started(@sources)\n\n  channels = @sources.map do\n    Channel(Exception | ::Nil).new\n  end\n  (@sources.zip(channels)).each do |source, channel|\n    spawn do\n      begin\n        run_source(source)\n      rescue e\n        channel.send(e)\n      else\n        channel.send(nil)\n      end\n    end\n  end\n\n  channels.each do |chan|\n    chan.receive.try do |e|\n      raise(e)\n    end\n  end\n\n  self\nensure\n  @formatter.finished(@sources)\nend"},"external_var":false},{"html_id":"sources:Array(Source)-instance-method","name":"sources","doc":"A list of sources to run inspection on.","summary":"<p>A list of sources to run inspection on.</p>","abstract":false,"location":{"filename":"src/ameba/runner.cr","line_number":35,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L35"},"def":{"name":"sources","return_type":"Array(Source)","visibility":"Public","body":"@sources"},"external_var":false},{"html_id":"success?-instance-method","name":"success?","doc":"Indicates whether the last inspection successful or not.\nIt returns `true` if no issues matching severity in sources found, `false` otherwise.\n\n```\nrunner = Ameba::Runner.new config\nrunner.run\nrunner.success? # => true or false\n```","summary":"<p>Indicates whether the last inspection successful or not.</p>","abstract":false,"location":{"filename":"src/ameba/runner.cr","line_number":191,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L191"},"def":{"name":"success?","visibility":"Public","body":"@sources.all? do |__arg3|\n  __arg3.issues.none? do |issue|\n    issue.enabled? && issue.rule.severity <= @severity\n  end\nend"},"external_var":false},{"html_id":"version:SemanticVersion|Nil-instance-method","name":"version","doc":"Returns an ameba version up to which the rules should be ran.","summary":"<p>Returns an ameba version up to which the rules should be ran.</p>","abstract":false,"location":{"filename":"src/ameba/runner.cr","line_number":50,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L50"},"def":{"name":"version","return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@version"},"external_var":false},{"html_id":"version=(version:SemanticVersion|Nil)-instance-method","name":"version=","doc":"Returns an ameba version up to which the rules should be ran.","summary":"<p>Returns an ameba version up to which the rules should be ran.</p>","abstract":false,"args":[{"name":"version","external_name":"version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(version : SemanticVersion | Nil)","args_html":"(version : SemanticVersion | Nil)","location":{"filename":"src/ameba/runner.cr","line_number":50,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L50"},"def":{"name":"version=","args":[{"name":"version","external_name":"version","restriction":"SemanticVersion | ::Nil"}],"visibility":"Public","body":"@version = version"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Runner/InfiniteCorrectionLoopError","path":"Ameba/Runner/InfiniteCorrectionLoopError.html","kind":"class","full_name":"Ameba::Runner::InfiniteCorrectionLoopError","name":"InfiniteCorrectionLoopError","abstract":false,"superclass":{"html_id":"crinja_lint/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},"ancestors":[{"html_id":"crinja_lint/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},{"html_id":"crinja_lint/SystemError","kind":"module","full_name":"SystemError","name":"SystemError"},{"html_id":"crinja_lint/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/runner.cr","line_number":15,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L15"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Runner","kind":"class","full_name":"Ameba::Runner","name":"Runner"},"doc":"An error indicating that the inspection loop got stuck correcting\nissues back and forth.","summary":"<p>An error indicating that the inspection loop got stuck correcting issues back and forth.</p>","constructors":[{"html_id":"new(path,issues_by_iteration,loop_start=-1)-class-method","name":"new","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"issues_by_iteration","external_name":"issues_by_iteration","restriction":""},{"name":"loop_start","default_value":"-1","external_name":"loop_start","restriction":""}],"args_string":"(path, issues_by_iteration, loop_start = -1)","args_html":"(path, issues_by_iteration, loop_start = <span class=\"n\">-1</span>)","location":{"filename":"src/ameba/runner.cr","line_number":16,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/runner.cr#L16"},"def":{"name":"new","args":[{"name":"path","external_name":"path","restriction":""},{"name":"issues_by_iteration","external_name":"issues_by_iteration","restriction":""},{"name":"loop_start","default_value":"-1","external_name":"loop_start","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(path, issues_by_iteration, loop_start)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Severity","path":"Ameba/Severity.html","kind":"enum","full_name":"Ameba::Severity","name":"Severity","abstract":false,"ancestors":[{"html_id":"crinja_lint/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crinja_lint/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crinja_lint/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/severity.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L4"}],"repository_name":"crinja_lint","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Error","name":"Error","value":"0"},{"id":"Warning","name":"Warning","value":"1"},{"id":"Convention","name":"Convention","value":"2"}],"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"class_methods":[{"html_id":"parse(name:String)-class-method","name":"parse","doc":"Creates Severity by the name.\n\n```\nSeverity.parse(\"convention\") # => Severity::Convention\nSeverity.parse(\"foo-bar\")    # => Exception: Incorrect severity name\n```","summary":"<p>Creates Severity by the name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/ameba/severity.cr","line_number":41,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L41"},"def":{"name":"parse","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"begin\n  super(name)\nrescue ArgumentError\n  raise(\"Incorrect severity name #{name}. Try one of: #{values.join(\", \")}\")\nend"},"external_var":false}],"instance_methods":[{"html_id":"color:Colorize::Color-instance-method","name":"color","doc":"Returns a color uniquely indicating severity.\n\n```\nSeverity::Warning.color # => Colorize::ColorANSI::Red\n```","summary":"<p>Returns a color uniquely indicating severity.</p>","abstract":false,"location":{"filename":"src/ameba/severity.cr","line_number":27,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L27"},"def":{"name":"color","return_type":"Colorize::Color","visibility":"Public","body":"case self\nin Error\n  Colorize::ColorANSI::Red\nin Warning\n  Colorize::ColorANSI::Red\nin Convention\n  Colorize::ColorANSI::Blue\nend"},"external_var":false},{"html_id":"convention?-instance-method","name":"convention?","doc":"Returns `true` if this enum value equals `Convention`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Ameba/Severity.html#Convention\">Convention</a></code></p>","abstract":false,"location":{"filename":"src/ameba/severity.cr","line_number":7,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L7"},"def":{"name":"convention?","visibility":"Public","body":"self == Convention"},"external_var":false},{"html_id":"error?-instance-method","name":"error?","doc":"Returns `true` if this enum value equals `Error`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Ameba/Severity.html#Error\">Error</a></code></p>","abstract":false,"location":{"filename":"src/ameba/severity.cr","line_number":5,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L5"},"def":{"name":"error?","visibility":"Public","body":"self == Error"},"external_var":false},{"html_id":"symbol:Char-instance-method","name":"symbol","doc":"Returns a symbol uniquely indicating severity.\n\n```\nSeverity::Warning.symbol # => 'W'\n```","summary":"<p>Returns a symbol uniquely indicating severity.</p>","abstract":false,"location":{"filename":"src/ameba/severity.cr","line_number":14,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L14"},"def":{"name":"symbol","return_type":"Char","visibility":"Public","body":"case self\nin Error\n  'E'\nin Warning\n  'W'\nin Convention\n  'C'\nend"},"external_var":false},{"html_id":"warning?-instance-method","name":"warning?","doc":"Returns `true` if this enum value equals `Warning`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Ameba/Severity.html#Warning\">Warning</a></code></p>","abstract":false,"location":{"filename":"src/ameba/severity.cr","line_number":6,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L6"},"def":{"name":"warning?","visibility":"Public","body":"self == Warning"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/SeverityYamlConverter","path":"Ameba/SeverityYamlConverter.html","kind":"class","full_name":"Ameba::SeverityYamlConverter","name":"SeverityYamlConverter","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/severity.cr","line_number":49,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L49"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Converter for `YAML.mapping` which converts severity enum to and from YAML.","summary":"<p>Converter for <code>YAML.mapping</code> which converts severity enum to and from YAML.</p>","class_methods":[{"html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"from_yaml","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/ameba/severity.cr","line_number":50,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L50"},"def":{"name":"from_yaml","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  raise(\"Severity must be a scalar, not #{node.class}\")\nend\n\ncase value = node.value\nwhen String\n  Severity.parse(value)\nwhen Nil\n  raise(\"Missing severity\")\nelse\n  raise(\"Incorrect severity: #{value}\")\nend\n"},"external_var":false},{"html_id":"to_yaml(value:Severity,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Severity"},{"name":"yaml","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(value : Severity, yaml : YAML::Nodes::Builder)","args_html":"(value : <a href=\"../Ameba/Severity.html\">Severity</a>, yaml : YAML::Nodes::Builder)","location":{"filename":"src/ameba/severity.cr","line_number":63,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/severity.cr#L63"},"def":{"name":"to_yaml","args":[{"name":"value","external_name":"value","restriction":"Severity"},{"name":"yaml","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"visibility":"Public","body":"yaml.scalar(value)"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Source","path":"Ameba/Source.html","kind":"class","full_name":"Ameba::Source","name":"Source","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Ameba/Spec/Util","kind":"module","full_name":"Ameba::Spec::Util","name":"Util"},{"html_id":"crinja_lint/Ameba/Reportable","kind":"module","full_name":"Ameba::Reportable","name":"Reportable"},{"html_id":"crinja_lint/Ameba/InlineComments","kind":"module","full_name":"Ameba::InlineComments","name":"InlineComments"},{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/source.cr","line_number":4,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L4"},{"filename":"src/ameba/source/corrector.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L3"},{"filename":"src/ameba/source/rewriter.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L1"},{"filename":"src/ameba/spec/support.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/support.cr#L8"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/Ameba/InlineComments","kind":"module","full_name":"Ameba::InlineComments","name":"InlineComments"},{"html_id":"crinja_lint/Ameba/Reportable","kind":"module","full_name":"Ameba::Reportable","name":"Reportable"},{"html_id":"crinja_lint/Ameba/Spec/Util","kind":"module","full_name":"Ameba::Spec::Util","name":"Util"}],"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"An entity that represents a Crystal source file.\nHas path, lines of code and issues reported by rules.","summary":"<p>An entity that represents a Crystal source file.</p>","constructors":[{"html_id":"new(env:Crinja,code:String,path:String)-class-method","name":"new","abstract":false,"args":[{"name":"env","external_name":"env","restriction":"Crinja"},{"name":"code","external_name":"code","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(env : Crinja, code : String, path : String)","args_html":"(env : Crinja, code : String, path : String)","location":{"filename":"src/ameba/source.cr","line_number":24,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L24"},"def":{"name":"new","args":[{"name":"env","external_name":"env","restriction":"Crinja"},{"name":"code","external_name":"code","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(env, code, path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(code:String,path:String,normalize:Bool):self-class-method","name":"new","abstract":false,"args":[{"name":"code","external_name":"code","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"normalize","external_name":"normalize","restriction":"Bool"}],"args_string":"(code : String, path : String, normalize : Bool) : self","args_html":"(code : String, path : String, normalize : Bool) : <span class=\"k\">self</span>","location":{"filename":"src/ameba/spec/support.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/support.cr#L11"},"def":{"name":"new","args":[{"name":"code","external_name":"code","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"normalize","external_name":"normalize","restriction":"Bool"}],"return_type":"self","visibility":"Public","body":"code = normalize ? normalize_code(code) : code\nnew(code, path)\n"},"external_var":false},{"html_id":"new(code:String=\"\",path:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"code","default_value":"\"\"","external_name":"code","restriction":"String"},{"name":"path","default_value":"\"\"","external_name":"path","restriction":"String"}],"args_string":"(code : String = \"\", path : String = \"\")","args_html":"(code : String = <span class=\"s\">&quot;&quot;</span>, path : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/ameba/source.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L13"},"def":{"name":"new","args":[{"name":"code","default_value":"\"\"","external_name":"code","restriction":"String"},{"name":"path","default_value":"\"\"","external_name":"path","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(code, path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"ast:Crinja::AST::NodeList-instance-method","name":"ast","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":36,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L36"},"def":{"name":"ast","return_type":"Crinja::AST::NodeList","visibility":"Public","body":"@ast || (@ast = ((Crinja::Parser::TemplateParser.new(@env, @code)).parse))"},"external_var":false},{"html_id":"code:String-instance-method","name":"code","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":10,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L10"},"def":{"name":"code","return_type":"String","visibility":"Public","body":"@code"},"external_var":false},{"html_id":"correct!-instance-method","name":"correct!","doc":"Corrects any correctable issues and updates `code`.\nReturns `false` if no issues were corrected.","summary":"<p>Corrects any correctable issues and updates <code><a href=\"../Ameba/Source.html#code%3AString-instance-method\">#code</a></code>.</p>","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":65,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L65"},"def":{"name":"correct!","visibility":"Public","body":"corrector = Corrector.new(code)\nissues.each(&.correct(corrector))\n\ncorrected_code = corrector.process\nif code == corrected_code\n  return false\nend\n\n@code = corrected_code\n@lines = nil\n@ast = nil\n\ntrue\n"},"external_var":false},{"html_id":"env:Crinja-instance-method","name":"env","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L8"},"def":{"name":"env","return_type":"Crinja","visibility":"Public","body":"@env"},"external_var":false},{"html_id":"fullpath:String-instance-method","name":"fullpath","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":91,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L91"},"def":{"name":"fullpath","return_type":"String","visibility":"Public","body":"if (__temp_385 = @fullpath).nil?\n  @fullpath = (File.expand_path(path))\nelse\n  __temp_385\nend"},"external_var":false},{"html_id":"lines:Array(String)-instance-method","name":"lines","doc":"Returns lines of code split by new line character.\nSince `code` is immutable and can't be changed, this\nmethod caches lines in an instance variable, so calling\nit second time will not perform a split, but will return\nlines instantly.\n\n```\nsource = Ameba::Source.new \"a = 1\\nb = 2\", path\nsource.lines # => [\"a = 1\", \"b = 2\"]\n```","summary":"<p>Returns lines of code split by new line character.</p>","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":89,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L89"},"def":{"name":"lines","return_type":"Array(String)","visibility":"Public","body":"if (__temp_384 = @lines).nil?\n  @lines = (code.split(/\\r?\\n/))\nelse\n  __temp_384\nend"},"external_var":false},{"html_id":"matches_path?(filepath)-instance-method","name":"matches_path?","doc":"Returns `true` if *filepath* matches the source's path, `false` otherwise.","summary":"<p>Returns <code>true</code> if <em>filepath</em> matches the source's path, <code>false</code> otherwise.</p>","abstract":false,"args":[{"name":"filepath","external_name":"filepath","restriction":""}],"args_string":"(filepath)","args_html":"(filepath)","location":{"filename":"src/ameba/source.cr","line_number":106,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L106"},"def":{"name":"matches_path?","args":[{"name":"filepath","external_name":"filepath","restriction":""}],"visibility":"Public","body":"fullpath == (File.expand_path(filepath))"},"external_var":false},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":9,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L9"},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"},"external_var":false},{"html_id":"template:Crinja::Template-instance-method","name":"template","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":11,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L11"},"def":{"name":"template","return_type":"Crinja::Template","visibility":"Public","body":"@template"},"external_var":false},{"html_id":"valid?-instance-method","name":"valid?","doc":"Returns `true` if the list of not disabled issues is empty, `false` otherwise.","summary":"<p>Returns <code>true</code> if the list of not disabled issues is empty, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/ameba/source.cr","line_number":42,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source.cr#L42"},"def":{"name":"valid?","visibility":"Public","body":"@issues.empty?"},"external_var":false}],"types":[{"html_id":"crinja_lint/Ameba/Source/Corrector","path":"Ameba/Source/Corrector.html","kind":"class","full_name":"Ameba::Source::Corrector","name":"Corrector","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/source/corrector.cr","line_number":6,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L6"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Source","kind":"class","full_name":"Ameba::Source","name":"Source"},"doc":"This class takes source code and rewrites it based\non the different correction actions supplied.","summary":"<p>This class takes source code and rewrites it based on the different correction actions supplied.</p>","constructors":[{"html_id":"new(code:String)-class-method","name":"new","abstract":false,"args":[{"name":"code","external_name":"code","restriction":"String"}],"args_string":"(code : String)","args_html":"(code : String)","location":{"filename":"src/ameba/source/corrector.cr","line_number":9,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L9"},"def":{"name":"new","args":[{"name":"code","external_name":"code","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(code)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"insert_after(location,end_location,content)-instance-method","name":"insert_after","doc":"Shortcut for `wrap(location, end_location, nil, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#wrap%28location%2Cend_location%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(location, end_location, nil, content)</a></code></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(location, end_location, content)","args_html":"(location, end_location, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":65,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L65"},"def":{"name":"insert_after","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@rewriter.insert_after(loc_to_pos(location), (loc_to_pos(end_location)) + 1, content)"},"external_var":false},{"html_id":"insert_after(range:Range(Int32,Int32),content)-instance-method","name":"insert_after","doc":"Shortcut for `wrap(range, nil, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#wrap%28range%3ARange%28Int32%2CInt32%29%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(range, nil, content)</a></code></p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(range : Range(Int32, Int32), content)","args_html":"(range : Range(Int32, Int32), content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":70,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L70"},"def":{"name":"insert_after","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"begin_pos, end_pos = range.begin, range.end\nif range.excludes_end?\nelse\n  end_pos = end_pos - 1\nend\n@rewriter.insert_after(begin_pos, end_pos, content)\n"},"external_var":false},{"html_id":"insert_after(pos:Int32,content)-instance-method","name":"insert_after","doc":"Shortcut for `insert_after(...pos, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#insert_after%28range%3ARange%28Int32%2CInt32%29%2Ccontent%29-instance-method\">#insert_after(...pos, content)</a></code></p>","abstract":false,"args":[{"name":"pos","external_name":"pos","restriction":"Int32"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(pos : Int32, content)","args_html":"(pos : Int32, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":92,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L92"},"def":{"name":"insert_after","args":[{"name":"pos","external_name":"pos","restriction":"Int32"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@rewriter.insert_after(pos, content)"},"external_var":false},{"html_id":"insert_after(node:Crystal::ASTNode,content)-instance-method","name":"insert_after","doc":"Shortcut for `wrap(node, nil, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#wrap%28range%3ARange%28Int32%2CInt32%29%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(node, nil, content)</a></code></p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(node : Crystal::ASTNode, content)","args_html":"(node : Crystal::ASTNode, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":164,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L164"},"def":{"name":"insert_after","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"insert_after(end_location(node), content)"},"external_var":false},{"html_id":"insert_after(location,content)-instance-method","name":"insert_after","doc":"Shortcut for `insert_after(location, location, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#insert_after%28location%2Cend_location%2Ccontent%29-instance-method\">#insert_after(location, location, content)</a></code></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(location, content)","args_html":"(location, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":87,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L87"},"def":{"name":"insert_after","args":[{"name":"location","external_name":"location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@rewriter.insert_after((loc_to_pos(location)) + 1, content)"},"external_var":false},{"html_id":"insert_before(location,end_location,content)-instance-method","name":"insert_before","doc":"Shortcut for `wrap(location, end_location, content, nil)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#wrap%28location%2Cend_location%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(location, end_location, content, nil)</a></code></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(location, end_location, content)","args_html":"(location, end_location, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":53,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L53"},"def":{"name":"insert_before","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@rewriter.insert_before(loc_to_pos(location), (loc_to_pos(end_location)) + 1, content)"},"external_var":false},{"html_id":"insert_before(range:Range(Int32,Int32),content)-instance-method","name":"insert_before","doc":"Shortcut for `wrap(range, content, nil)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#wrap%28range%3ARange%28Int32%2CInt32%29%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(range, content, nil)</a></code></p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(range : Range(Int32, Int32), content)","args_html":"(range : Range(Int32, Int32), content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":58,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L58"},"def":{"name":"insert_before","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"begin_pos, end_pos = range.begin, range.end\nif range.excludes_end?\nelse\n  end_pos = end_pos - 1\nend\n@rewriter.insert_before(begin_pos, end_pos, content)\n"},"external_var":false},{"html_id":"insert_before(pos:Int32,content)-instance-method","name":"insert_before","doc":"Shortcut for `insert_before(pos.., content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#insert_before%28range%3ARange%28Int32%2CInt32%29%2Ccontent%29-instance-method\">#insert_before(pos.., content)</a></code></p>","abstract":false,"args":[{"name":"pos","external_name":"pos","restriction":"Int32"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(pos : Int32, content)","args_html":"(pos : Int32, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":82,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L82"},"def":{"name":"insert_before","args":[{"name":"pos","external_name":"pos","restriction":"Int32"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@rewriter.insert_before(pos, content)"},"external_var":false},{"html_id":"insert_before(node:Crystal::ASTNode,content)-instance-method","name":"insert_before","doc":"Shortcut for `wrap(node, content, nil)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#wrap%28range%3ARange%28Int32%2CInt32%29%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(node, content, nil)</a></code></p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(node : Crystal::ASTNode, content)","args_html":"(node : Crystal::ASTNode, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":159,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L159"},"def":{"name":"insert_before","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"insert_before(location(node), content)"},"external_var":false},{"html_id":"insert_before(location,content)-instance-method","name":"insert_before","doc":"Shortcut for `insert_before(location, location, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#insert_before%28location%2Cend_location%2Ccontent%29-instance-method\">#insert_before(location, location, content)</a></code></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(location, content)","args_html":"(location, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":77,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L77"},"def":{"name":"insert_before","args":[{"name":"location","external_name":"location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@rewriter.insert_before(loc_to_pos(location), content)"},"external_var":false},{"html_id":"process-instance-method","name":"process","doc":"Applies all scheduled changes and returns modified source as a new string.","summary":"<p>Applies all scheduled changes and returns modified source as a new string.</p>","abstract":false,"location":{"filename":"src/ameba/source/corrector.cr","line_number":196,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L196"},"def":{"name":"process","visibility":"Public","body":"@rewriter.process"},"external_var":false},{"html_id":"remove(location,end_location)-instance-method","name":"remove","doc":"Shortcut for `replace(location, end_location, \"\")`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#replace%28location%2Cend_location%2Ccontent%29-instance-method\">#replace(location, end_location, &quot;&quot;)</a></code></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""}],"args_string":"(location, end_location)","args_html":"(location, end_location)","location":{"filename":"src/ameba/source/corrector.cr","line_number":41,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L41"},"def":{"name":"remove","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""}],"visibility":"Public","body":"@rewriter.remove(loc_to_pos(location), (loc_to_pos(end_location)) + 1)"},"external_var":false},{"html_id":"remove(range:Range(Int32,Int32))-instance-method","name":"remove","doc":"Shortcut for `replace(range, \"\")`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#replace%28range%3ARange%28Int32%2CInt32%29%2Ccontent%29-instance-method\">#replace(range, &quot;&quot;)</a></code></p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"}],"args_string":"(range : Range(Int32, Int32))","args_html":"(range : Range(Int32, Int32))","location":{"filename":"src/ameba/source/corrector.cr","line_number":46,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L46"},"def":{"name":"remove","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"}],"visibility":"Public","body":"begin_pos, end_pos = range.begin, range.end\nif range.excludes_end?\nelse\n  end_pos = end_pos - 1\nend\n@rewriter.remove(begin_pos, end_pos)\n"},"external_var":false},{"html_id":"remove(node:Crystal::ASTNode)-instance-method","name":"remove","doc":"Shortcut for `replace(node, \"\")`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Corrector.html#replace%28range%3ARange%28Int32%2CInt32%29%2Ccontent%29-instance-method\">#replace(node, &quot;&quot;)</a></code></p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"args_string":"(node : Crystal::ASTNode)","args_html":"(node : Crystal::ASTNode)","location":{"filename":"src/ameba/source/corrector.cr","line_number":154,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L154"},"def":{"name":"remove","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"visibility":"Public","body":"remove(location(node), end_location(node))"},"external_var":false},{"html_id":"remove_leading(location,end_location,size)-instance-method","name":"remove_leading","doc":"Removes *size* characters from the beginning of the given range.\nIf *size* is greater than the size of the range, the removed region can\noverrun the end of the range.","summary":"<p>Removes <em>size</em> characters from the beginning of the given range.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"size","external_name":"size","restriction":""}],"args_string":"(location, end_location, size)","args_html":"(location, end_location, size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":110,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L110"},"def":{"name":"remove_leading","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"@rewriter.remove(loc_to_pos(location), (loc_to_pos(location)) + size)"},"external_var":false},{"html_id":"remove_leading(range:Range(Int32,Int32),size)-instance-method","name":"remove_leading","doc":"Removes *size* characters from the beginning of the given range.\nIf *size* is greater than the size of the range, the removed region can\noverrun the end of the range.","summary":"<p>Removes <em>size</em> characters from the beginning of the given range.</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"size","external_name":"size","restriction":""}],"args_string":"(range : Range(Int32, Int32), size)","args_html":"(range : Range(Int32, Int32), size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":115,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L115"},"def":{"name":"remove_leading","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"begin_pos = range.begin\n@rewriter.remove(begin_pos, begin_pos + size)\n"},"external_var":false},{"html_id":"remove_leading(node:Crystal::ASTNode,size)-instance-method","name":"remove_leading","doc":"Removes *size* characters from the beginning of the given node.\nIf *size* is greater than the size of the node, the removed region can\noverrun the end of the node.","summary":"<p>Removes <em>size</em> characters from the beginning of the given node.</p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"size","external_name":"size","restriction":""}],"args_string":"(node : Crystal::ASTNode, size)","args_html":"(node : Crystal::ASTNode, size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":176,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L176"},"def":{"name":"remove_leading","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"remove_leading(location(node), end_location(node), size)"},"external_var":false},{"html_id":"remove_preceding(location,end_location,size)-instance-method","name":"remove_preceding","doc":"Removes *size* characters prior to the source range.","summary":"<p>Removes <em>size</em> characters prior to the source range.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"size","external_name":"size","restriction":""}],"args_string":"(location, end_location, size)","args_html":"(location, end_location, size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":97,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L97"},"def":{"name":"remove_preceding","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"@rewriter.remove((loc_to_pos(location)) - size, loc_to_pos(location))"},"external_var":false},{"html_id":"remove_preceding(range:Range(Int32,Int32),size)-instance-method","name":"remove_preceding","doc":"Removes *size* characters prior to the source range.","summary":"<p>Removes <em>size</em> characters prior to the source range.</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"size","external_name":"size","restriction":""}],"args_string":"(range : Range(Int32, Int32), size)","args_html":"(range : Range(Int32, Int32), size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":102,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L102"},"def":{"name":"remove_preceding","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"begin_pos = range.begin\n@rewriter.remove(begin_pos - size, begin_pos)\n"},"external_var":false},{"html_id":"remove_preceding(node:Crystal::ASTNode,size)-instance-method","name":"remove_preceding","doc":"Removes *size* characters prior to the given node.","summary":"<p>Removes <em>size</em> characters prior to the given node.</p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"size","external_name":"size","restriction":""}],"args_string":"(node : Crystal::ASTNode, size)","args_html":"(node : Crystal::ASTNode, size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":169,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L169"},"def":{"name":"remove_preceding","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"remove_preceding(location(node), end_location(node), size)"},"external_var":false},{"html_id":"remove_trailing(location,end_location,size)-instance-method","name":"remove_trailing","doc":"Removes *size* characters from the end of the given range.\nIf *size* is greater than the size of the range, the removed region can\noverrun the beginning of the range.","summary":"<p>Removes <em>size</em> characters from the end of the given range.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"size","external_name":"size","restriction":""}],"args_string":"(location, end_location, size)","args_html":"(location, end_location, size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":123,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L123"},"def":{"name":"remove_trailing","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"@rewriter.remove(((loc_to_pos(end_location)) + 1) - size, (loc_to_pos(end_location)) + 1)"},"external_var":false},{"html_id":"remove_trailing(range:Range(Int32,Int32),size)-instance-method","name":"remove_trailing","doc":"Removes *size* characters from the end of the given range.\nIf *size* is greater than the size of the range, the removed region can\noverrun the beginning of the range.","summary":"<p>Removes <em>size</em> characters from the end of the given range.</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"size","external_name":"size","restriction":""}],"args_string":"(range : Range(Int32, Int32), size)","args_html":"(range : Range(Int32, Int32), size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":128,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L128"},"def":{"name":"remove_trailing","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"end_pos = range.end\nif range.excludes_end?\nelse\n  end_pos = end_pos - 1\nend\n@rewriter.remove(end_pos - size, end_pos)\n"},"external_var":false},{"html_id":"remove_trailing(node:Crystal::ASTNode,size)-instance-method","name":"remove_trailing","doc":"Removes *size* characters from the end of the given node.\nIf *size* is greater than the size of the node, the removed region can\noverrun the beginning of the node.","summary":"<p>Removes <em>size</em> characters from the end of the given node.</p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"size","external_name":"size","restriction":""}],"args_string":"(node : Crystal::ASTNode, size)","args_html":"(node : Crystal::ASTNode, size)","location":{"filename":"src/ameba/source/corrector.cr","line_number":183,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L183"},"def":{"name":"remove_trailing","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"size","external_name":"size","restriction":""}],"visibility":"Public","body":"remove_trailing(location(node), end_location(node), size)"},"external_var":false},{"html_id":"replace(location,end_location,content)-instance-method","name":"replace","doc":"Replaces the code of the given range with *content*.","summary":"<p>Replaces the code of the given range with <em>content</em>.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(location, end_location, content)","args_html":"(location, end_location, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":17,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L17"},"def":{"name":"replace","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@rewriter.replace(loc_to_pos(location), (loc_to_pos(end_location)) + 1, content)"},"external_var":false},{"html_id":"replace(range:Range(Int32,Int32),content)-instance-method","name":"replace","doc":"Replaces the code of the given range with *content*.","summary":"<p>Replaces the code of the given range with <em>content</em>.</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(range : Range(Int32, Int32), content)","args_html":"(range : Range(Int32, Int32), content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":22,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L22"},"def":{"name":"replace","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"begin_pos, end_pos = range.begin, range.end\nif range.excludes_end?\nelse\n  end_pos = end_pos - 1\nend\n@rewriter.replace(begin_pos, end_pos, content)\n"},"external_var":false},{"html_id":"replace(node:Crystal::ASTNode,content)-instance-method","name":"replace","doc":"Replaces the code of the given node with *content*.","summary":"<p>Replaces the code of the given node with <em>content</em>.</p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"content","external_name":"content","restriction":""}],"args_string":"(node : Crystal::ASTNode, content)","args_html":"(node : Crystal::ASTNode, content)","location":{"filename":"src/ameba/source/corrector.cr","line_number":144,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L144"},"def":{"name":"replace","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"replace(location(node), end_location(node), content)"},"external_var":false},{"html_id":"wrap(location,end_location,insert_before,insert_after)-instance-method","name":"wrap","doc":"Inserts the given strings before and after the given range.","summary":"<p>Inserts the given strings before and after the given range.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"args_string":"(location, end_location, insert_before, insert_after)","args_html":"(location, end_location, insert_before, insert_after)","location":{"filename":"src/ameba/source/corrector.cr","line_number":29,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L29"},"def":{"name":"wrap","args":[{"name":"location","external_name":"location","restriction":""},{"name":"end_location","external_name":"end_location","restriction":""},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"visibility":"Public","body":"@rewriter.wrap(loc_to_pos(location), (loc_to_pos(end_location)) + 1, insert_before, insert_after)"},"external_var":false},{"html_id":"wrap(range:Range(Int32,Int32),insert_before,insert_after)-instance-method","name":"wrap","doc":"Inserts the given strings before and after the given range.","summary":"<p>Inserts the given strings before and after the given range.</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"args_string":"(range : Range(Int32, Int32), insert_before, insert_after)","args_html":"(range : Range(Int32, Int32), insert_before, insert_after)","location":{"filename":"src/ameba/source/corrector.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L34"},"def":{"name":"wrap","args":[{"name":"range","external_name":"range","restriction":"Range(Int32, Int32)"},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"visibility":"Public","body":"begin_pos, end_pos = range.begin, range.end\nif range.excludes_end?\nelse\n  end_pos = end_pos - 1\nend\n@rewriter.wrap(begin_pos, end_pos, insert_before, insert_after)\n"},"external_var":false},{"html_id":"wrap(node:Crystal::ASTNode,insert_before,insert_after)-instance-method","name":"wrap","doc":"Inserts the given strings before and after the given node.","summary":"<p>Inserts the given strings before and after the given node.</p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"args_string":"(node : Crystal::ASTNode, insert_before, insert_after)","args_html":"(node : Crystal::ASTNode, insert_before, insert_after)","location":{"filename":"src/ameba/source/corrector.cr","line_number":149,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/corrector.cr#L149"},"def":{"name":"wrap","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"visibility":"Public","body":"wrap(location(node), end_location(node), insert_before, insert_after)"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Source/Rewriter","path":"Ameba/Source/Rewriter.html","kind":"class","full_name":"Ameba::Source::Rewriter","name":"Rewriter","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/source/rewriter.cr","line_number":61,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L61"},{"filename":"src/ameba/source/rewriter/action.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter/action.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Source","kind":"class","full_name":"Ameba::Source","name":"Source"},"doc":"This class performs the heavy lifting in the source rewriting process.\nIt schedules code updates to be performed in the correct order.\n\nFor simple cases, the resulting source will be obvious.\n\nExamples for more complex cases follow. Assume these examples are acting on\nthe source `puts(:hello, :world)`. The methods `#wrap`, `#remove`, etc.\nreceive a range as the first two arguments; for clarity, examples below use\nEnglish sentences and a string of raw code instead.\n\n## Overlapping deletions:\n\n* remove `:hello, `\n* remove `, :world`\n\nThe overlapping ranges are merged and `:hello, :world` will be removed.\n\n## Multiple actions at the same end points:\n\nResults will always be independent of the order they were given.\nException: rewriting actions done on exactly the same range (covered next).\n\nExample:\n\n* replace `, ` by ` => `\n* wrap `:hello, :world` with `{` and `}`\n* replace `:world` with `:everybody`\n* wrap `:world` with `[`, `]`\n\nThe resulting string will be `puts({:hello => [:everybody]})`\nand this result is independent of the order the instructions were given in.\n\n## Multiple wraps on same range:\n\n* wrap `:hello` with `(` and `)`\n* wrap `:hello` with `[` and `]`\n\nThe wraps are combined in order given and results would be `puts([(:hello)], :world)`.\n\n## Multiple replacements on same range:\n\n* replace `:hello` by `:hi`, then\n* replace `:hello` by `:hey`\n\nThe replacements are made in the order given, so the latter replacement\nsupersedes the former and `:hello` will be replaced by `:hey`.\n\n## Swallowed insertions:\n\n* wrap `world` by `__`, `__`\n* replace `:hello, :world` with `:hi`\n\nA containing replacement will swallow the contained rewriting actions\nand `:hello, :world` will be replaced by `:hi`.\n\n## Implementation\n\nThe updates are organized in a tree, according to the ranges they act on\n(where children are strictly contained by their parent).","summary":"<p>This class performs the heavy lifting in the source rewriting process.</p>","constructors":[{"html_id":"new(code:String)-class-method","name":"new","abstract":false,"args":[{"name":"code","external_name":"code","restriction":"::String"}],"args_string":"(code : String)","args_html":"(code : String)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":64,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L64"},"def":{"name":"new","args":[{"name":"code","external_name":"code","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(code)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"code:String-instance-method","name":"code","abstract":false,"location":{"filename":"src/ameba/source/rewriter.cr","line_number":62,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L62"},"def":{"name":"code","return_type":"String","visibility":"Public","body":"@code"},"external_var":false},{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns `true` if no (non trivial) update has been recorded","summary":"<p>Returns <code>true</code> if no (non trivial) update has been recorded</p>","abstract":false,"location":{"filename":"src/ameba/source/rewriter.cr","line_number":69,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L69"},"def":{"name":"empty?","visibility":"Public","body":"@action_root.empty?"},"external_var":false},{"html_id":"insert_after(begin_pos,end_pos,content)-instance-method","name":"insert_after","doc":"Shortcut for `wrap(begin_pos, end_pos, nil, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Rewriter.html#wrap%28begin_pos%2Cend_pos%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(begin_pos, end_pos, nil, content)</a></code></p>","abstract":false,"args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(begin_pos, end_pos, content)","args_html":"(begin_pos, end_pos, content)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":97,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L97"},"def":{"name":"insert_after","args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"wrap(begin_pos, end_pos, nil, content)"},"external_var":false},{"html_id":"insert_after(pos,content)-instance-method","name":"insert_after","doc":"Shortcut for `insert_after(pos, pos, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Rewriter.html#insert_after%28begin_pos%2Cend_pos%2Ccontent%29-instance-method\">#insert_after(pos, pos, content)</a></code></p>","abstract":false,"args":[{"name":"pos","external_name":"pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(pos, content)","args_html":"(pos, content)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":107,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L107"},"def":{"name":"insert_after","args":[{"name":"pos","external_name":"pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"insert_after(pos, pos, content)"},"external_var":false},{"html_id":"insert_before(begin_pos,end_pos,content)-instance-method","name":"insert_before","doc":"Shortcut for `wrap(begin_pos, end_pos, content, nil)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Rewriter.html#wrap%28begin_pos%2Cend_pos%2Cinsert_before%2Cinsert_after%29-instance-method\">#wrap(begin_pos, end_pos, content, nil)</a></code></p>","abstract":false,"args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(begin_pos, end_pos, content)","args_html":"(begin_pos, end_pos, content)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":92,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L92"},"def":{"name":"insert_before","args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"wrap(begin_pos, end_pos, content, nil)"},"external_var":false},{"html_id":"insert_before(pos,content)-instance-method","name":"insert_before","doc":"Shortcut for `insert_before(pos, pos, content)`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Rewriter.html#insert_before%28begin_pos%2Cend_pos%2Ccontent%29-instance-method\">#insert_before(pos, pos, content)</a></code></p>","abstract":false,"args":[{"name":"pos","external_name":"pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(pos, content)","args_html":"(pos, content)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":102,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L102"},"def":{"name":"insert_before","args":[{"name":"pos","external_name":"pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"insert_before(pos, pos, content)"},"external_var":false},{"html_id":"process-instance-method","name":"process","doc":"Applies all scheduled changes and returns modified source as a new string.","summary":"<p>Applies all scheduled changes and returns modified source as a new string.</p>","abstract":false,"location":{"filename":"src/ameba/source/rewriter.cr","line_number":112,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L112"},"def":{"name":"process","visibility":"Public","body":"String.build do |io|\n  last_end = 0\n  @action_root.ordered_replacements.each do |begin_pos, end_pos, replacement|\n    (io << code[last_end...begin_pos]) << replacement\n    last_end = end_pos\n  end\n  io << code[last_end...code.size]\nend"},"external_var":false},{"html_id":"remove(begin_pos,end_pos)-instance-method","name":"remove","doc":"Shortcut for `replace(begin_pos, end_pos, \"\")`","summary":"<p>Shortcut for <code><a href=\"../../Ameba/Source/Rewriter.html#replace%28begin_pos%2Cend_pos%2Ccontent%29-instance-method\">#replace(begin_pos, end_pos, &quot;&quot;)</a></code></p>","abstract":false,"args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""}],"args_string":"(begin_pos, end_pos)","args_html":"(begin_pos, end_pos)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":87,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L87"},"def":{"name":"remove","args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""}],"visibility":"Public","body":"replace(begin_pos, end_pos, \"\")"},"external_var":false},{"html_id":"replace(begin_pos,end_pos,content)-instance-method","name":"replace","doc":"Replaces the code of the given range with *content*.","summary":"<p>Replaces the code of the given range with <em>content</em>.</p>","abstract":false,"args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(begin_pos, end_pos, content)","args_html":"(begin_pos, end_pos, content)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":74,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L74"},"def":{"name":"replace","args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"combine(begin_pos, end_pos, replacement: content.to_s)"},"external_var":false},{"html_id":"wrap(begin_pos,end_pos,insert_before,insert_after)-instance-method","name":"wrap","doc":"Inserts the given strings before and after the given range.","summary":"<p>Inserts the given strings before and after the given range.</p>","abstract":false,"args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"args_string":"(begin_pos, end_pos, insert_before, insert_after)","args_html":"(begin_pos, end_pos, insert_before, insert_after)","location":{"filename":"src/ameba/source/rewriter.cr","line_number":80,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/source/rewriter.cr#L80"},"def":{"name":"wrap","args":[{"name":"begin_pos","external_name":"begin_pos","restriction":""},{"name":"end_pos","external_name":"end_pos","restriction":""},{"name":"insert_before","external_name":"insert_before","restriction":""},{"name":"insert_after","external_name":"insert_after","restriction":""}],"visibility":"Public","body":"combine(begin_pos, end_pos, insert_before: insert_before.to_s, insert_after: insert_after.to_s)"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Spec","path":"Ameba/Spec.html","kind":"module","full_name":"Ameba::Spec","name":"Spec","abstract":false,"locations":[{"filename":"src/ameba/spec/annotated_source.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L2"},{"filename":"src/ameba/spec/be_valid.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"types":[{"html_id":"crinja_lint/Ameba/Spec/AnnotatedSource","path":"Ameba/Spec/AnnotatedSource.html","kind":"class","full_name":"Ameba::Spec::AnnotatedSource","name":"AnnotatedSource","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/spec/annotated_source.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ABBREV","name":"ABBREV","value":"\"[...]\""},{"id":"ANNOTATION_PATTERN_1","name":"ANNOTATION_PATTERN_1","value":"/\\A\\s*(# )?(\\^+|\\^{})( error:)? /"},{"id":"ANNOTATION_PATTERN_2","name":"ANNOTATION_PATTERN_2","value":"\" # error: \""}],"namespace":{"html_id":"crinja_lint/Ameba/Spec","kind":"module","full_name":"Ameba::Spec","name":"Spec"},"doc":"Parsed representation of code annotated with the `# ^^^ error: Message` style","summary":"<p>Parsed representation of code annotated with the <code># ^^^ error: Message</code> style</p>","class_methods":[{"html_id":"parse(annotated_code)-class-method","name":"parse","doc":"Separates annotation lines from code lines. Tracks the real\ncode line number that each annotation corresponds to.","summary":"<p>Separates annotation lines from code lines.</p>","abstract":false,"args":[{"name":"annotated_code","external_name":"annotated_code","restriction":""}],"args_string":"(annotated_code)","args_html":"(annotated_code)","location":{"filename":"src/ameba/spec/annotated_source.cr","line_number":16,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L16"},"def":{"name":"parse","args":[{"name":"annotated_code","external_name":"annotated_code","restriction":""}],"visibility":"Public","body":"lines = [] of String\nannotations = [] of ::Tuple(Int32, String, String)\n\ncode_lines = annotated_code.split('\\n')\ncode_lines.each do |code_line|\n  case\n  when annotation_match = ANNOTATION_PATTERN_1.match(code_line)\n    message_index = annotation_match.end\n    prefix = code_line[0...message_index]\n    message = code_line[message_index...]\n    annotations << {lines.size, prefix, message}\n  when annotation_index = code_line.index(ANNOTATION_PATTERN_2)\n    lines << code_line[...annotation_index]\n    message_index = annotation_index + ANNOTATION_PATTERN_2.size\n    message = code_line[message_index...]\n    annotations << {lines.size, \"\", message}\n  else\n    lines << code_line\n  end\nend\nif lines.empty?\n  annotations.map! do |_, prefix, message|\n    {1, prefix, message}\n  end\nend\nnew(lines, annotations)\n"},"external_var":false}],"constructors":[{"html_id":"new(lines:Array(String),annotations:Enumerable(Tuple(Int32,String,String)))-class-method","name":"new","doc":"NOTE: Annotations are sorted so that reconstructing the annotation\n      text via `#to_s` is deterministic.","summary":"<p><span class=\"flag purple\">NOTE</span>  Annotations are sorted so that reconstructing the annotation       text via <code><a href=\"../../Ameba/Spec/AnnotatedSource.html#to_s%28io%29-instance-method\">#to_s</a></code> is deterministic.</p>","abstract":false,"args":[{"name":"lines","external_name":"lines","restriction":"::Array(::String)"},{"name":"annotations","external_name":"annotations","restriction":"Enumerable(::Tuple(Int32, String, String))"}],"args_string":"(lines : Array(String), annotations : Enumerable(Tuple(Int32, String, String)))","args_html":"(lines : Array(String), annotations : Enumerable(Tuple(Int32, String, String)))","location":{"filename":"src/ameba/spec/annotated_source.cr","line_number":43,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L43"},"def":{"name":"new","args":[{"name":"lines","external_name":"lines","restriction":"::Array(::String)"},{"name":"annotations","external_name":"annotations","restriction":"Enumerable(::Tuple(Int32, String, String))"}],"visibility":"Public","body":"_ = allocate\n_.initialize(lines, annotations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(lines:Array(String),issues:Enumerable(Issue))-class-method","name":"new","doc":"Annotates the source code with the Ameba issues provided.\n\nNOTE: Annotations are sorted so that reconstructing the annotation\n      text via `#to_s` is deterministic.","summary":"<p>Annotates the source code with the Ameba issues provided.</p>","abstract":false,"args":[{"name":"lines","external_name":"lines","restriction":"::Array(::String)"},{"name":"issues","external_name":"issues","restriction":"Enumerable(Issue)"}],"args_string":"(lines : Array(String), issues : Enumerable(Issue))","args_html":"(lines : Array(String), issues : Enumerable(<a href=\"../../Ameba/Issue.html\">Issue</a>))","location":{"filename":"src/ameba/spec/annotated_source.cr","line_number":53,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L53"},"def":{"name":"new","args":[{"name":"lines","external_name":"lines","restriction":"::Array(::String)"},{"name":"issues","external_name":"issues","restriction":"Enumerable(Issue)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(lines, issues)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"==(other)-instance-method","name":"==","doc":"Returns `false` (other can only be a `Value` here).","summary":"<p>Returns <code>false</code> (other can only be a <code>Value</code> here).</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/ameba/spec/annotated_source.cr","line_number":59,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L59"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"(other.is_a?(AnnotatedSource) && (other.lines == lines)) && (match_annotations?(other))"},"external_var":false},{"html_id":"annotations:Array(Tuple(Int32,String,String))-instance-method","name":"annotations","doc":"Each entry is the line number, annotation prefix, and message.\nThe prefix is empty if the annotation is at the end of a code line.","summary":"<p>Each entry is the line number, annotation prefix, and message.</p>","abstract":false,"location":{"filename":"src/ameba/spec/annotated_source.cr","line_number":12,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L12"},"def":{"name":"annotations","return_type":"Array(::Tuple(Int32, String, String))","visibility":"Public","body":"@annotations"},"external_var":false},{"html_id":"lines:Array(String)-instance-method","name":"lines","abstract":false,"location":{"filename":"src/ameba/spec/annotated_source.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L8"},"def":{"name":"lines","return_type":"Array(String)","visibility":"Public","body":"@lines"},"external_var":false},{"html_id":"to_s(io)-instance-method","name":"to_s","doc":"Constructs an annotated source string (like what we parse).\n\nReconstructs a deterministic annotated source string. This is\nuseful for eliminating semantically irrelevant annotation\nordering differences.\n\n    source1 = AnnotatedSource.parse(<<-CRYSTAL)\n    line1\n    ^ Annotation 1\n     ^^ Annotation 2\n    CRYSTAL\n\n    source2 = AnnotatedSource.parse(<<-CRYSTAL)\n    line1\n     ^^ Annotation 2\n    ^ Annotation 1\n    CRYSTAL\n\n    source1.to_s == source2.to_s # => true","summary":"<p>Constructs an annotated source string (like what we parse).</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/ameba/spec/annotated_source.cr","line_number":110,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/annotated_source.cr#L110"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"reconstructed = lines.dup\nannotations.reverse_each do |line_number, prefix, message|\n  if prefix.empty?\n    __temp_399 = line_number - 1\n    reconstructed[__temp_399] = reconstructed[__temp_399] + \"#{ANNOTATION_PATTERN_2}#{message}\"\n  else\n    if lines.empty?\n      line_number = 0\n    end\n    reconstructed.insert(line_number, \"#{prefix}#{message}\")\n  end\nend\nio << (reconstructed.join('\\n'))\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Spec/BeValid","path":"Ameba/Spec/BeValid.html","kind":"module","full_name":"Ameba::Spec::BeValid","name":"BeValid","abstract":false,"locations":[{"filename":"src/ameba/spec/be_valid.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L2"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Spec","kind":"module","full_name":"Ameba::Spec","name":"Spec"},"instance_methods":[{"html_id":"be_valid-instance-method","name":"be_valid","abstract":false,"location":{"filename":"src/ameba/spec/be_valid.cr","line_number":3,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L3"},"def":{"name":"be_valid","visibility":"Public","body":"BeValidExpectation.new"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Spec/BeValidExpectation","path":"Ameba/Spec/BeValidExpectation.html","kind":"struct","full_name":"Ameba::Spec::BeValidExpectation","name":"BeValidExpectation","abstract":false,"superclass":{"html_id":"crinja_lint/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crinja_lint/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crinja_lint/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/spec/be_valid.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L8"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba/Spec","kind":"module","full_name":"Ameba::Spec","name":"Spec"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/ameba/spec/be_valid.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L8"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"},"external_var":false}],"instance_methods":[{"html_id":"failure_message(source)-instance-method","name":"failure_message","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/spec/be_valid.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L13"},"def":{"name":"failure_message","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"String.build do |str|\n  str << \"Source expected to be valid, but there are issues: \\n\\n\"\n  source.issues.reject(&.disabled?).each do |issue|\n    str << \"  * #{issue.rule.name}: #{issue.message}\\n\"\n  end\nend"},"external_var":false},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/ameba/spec/be_valid.cr","line_number":8,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L8"},"def":{"name":"initialize","visibility":"Public","body":""},"external_var":false},{"html_id":"match(source)-instance-method","name":"match","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/spec/be_valid.cr","line_number":9,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L9"},"def":{"name":"match","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"source.valid?"},"external_var":false},{"html_id":"negative_failure_message(source)-instance-method","name":"negative_failure_message","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/spec/be_valid.cr","line_number":22,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/be_valid.cr#L22"},"def":{"name":"negative_failure_message","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"\"Source expected to be invalid, but it is valid.\""},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Spec/ExpectIssue","path":"Ameba/Spec/ExpectIssue.html","kind":"module","full_name":"Ameba::Spec::ExpectIssue","name":"ExpectIssue","abstract":false,"ancestors":[{"html_id":"crinja_lint/Ameba/Spec/Util","kind":"module","full_name":"Ameba::Spec::Util","name":"Util"}],"locations":[{"filename":"src/ameba/spec/expect_issue.cr","line_number":96,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/expect_issue.cr#L96"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crinja_lint/Ameba/Spec/Util","kind":"module","full_name":"Ameba::Spec::Util","name":"Util"}],"namespace":{"html_id":"crinja_lint/Ameba/Spec","kind":"module","full_name":"Ameba::Spec","name":"Spec"},"doc":"Mixin for `expect_issue` and `expect_no_issues`\n\nThis mixin makes it easier to specify strict issue expectations\nin a declarative and visual fashion. Just type out the code that\nshould generate an issue, annotate code by writing '^'s\nunderneath each character that should be highlighted, and follow\nthe carets with a string (separated by a space) that is the\nmessage of the issue. You can include multiple issues in\none code snippet.\n\nUsage:\n\n    expect_issue subject, <<-CRYSTAL\n      a do\n        b\n      end.c\n      # ^^^ error: Avoid chaining a method call on a do...end block.\n      CRYSTAL\n\nEquivalent assertion without `expect_issue`:\n\n    source = Source.new <<-CRYSTAL, \"source.cr\"\n      a do\n        b\n      end.c\n      CRYSTAL\n    subject.catch(source).should_not be_valid\n    source.issues.size.should be(1)\n\n    issue = source.issues.first\n    issue.location.to_s.should eq \"source.cr:3:1\"\n    issue.end_location.to_s.should eq \"source.cr:3:5\"\n    issue.message.should eq(\n      \"Avoid chaining a method call on a do...end block.\"\n    )\n\nAutocorrection can be tested using `expect_correction` after\n`expect_issue`.\n\n    source = expect_issue subject, <<-CRYSTAL\n      x % 2 == 0\n      # ^^^^^^^^ error: Replace with `Int#even?`.\n      CRYSTAL\n\n    expect_correction source, <<-CRYSTAL\n      x.even?\n      CRYSTAL\n\nIf you do not want to specify an issue then use the\ncompanion method `expect_no_issues`. This method is a much\nsimpler assertion since it just inspects the code and checks\nthat there were no issues. The `expect_issue` method has\nto do more work by parsing out lines that contain carets.\n\nIf the code produces an issue that could not be auto-corrected, you can\nuse `expect_no_corrections` after `expect_issue`.\n\n    source = expect_issue subject, <<-CRYSTAL\n      a do\n        b\n      end.c\n      # ^^^ error: Avoid chaining a method call on a do...end block.\n      CRYSTAL\n\n    expect_no_corrections source\n\nIf your code has variables of different lengths, you can use `%{foo}`,\n`^{foo}`, and `_{foo}` to format your template; you can also abbreviate\nissue messages with `[...]`:\n\n    %w[raise fail].each do |keyword|\n      expect_issue subject, <<-CRYSTAL, keyword: keyword\n        %{keyword} Exception.new(msg)\n        # ^{keyword}^^^^^^^^^^^^^^^^^ error: Redundant `Exception.new` [...]\n        CRYSTAL\n\n    %w[has_one has_many].each do |type|\n      expect_issue subject, <<-CRYSTAL, type: type\n        class Book\n          %{type} :chapter, foreign_key: \"book_id\"\n          _{type}         # ^^^^^^^^^^^^^^^^^^^^^^ error: Specifying the default [...]\n        end\n        CRYSTAL\n    end\n\nIf you need to specify an issue on a blank line, use the empty `^{}` marker:\n\n    expect_issue subject, <<-CRYSTAL\n\n      # ^{} error: Missing frozen string literal comment.\n      puts 1\n      CRYSTAL","summary":"<p>Mixin for <code><a href=\"../../Ameba/Spec/ExpectIssue.html#expect_issue%28rules%3ARule%3A%3ABase%7CEnumerable%28Rule%3A%3ABase%29%2Cannotated_code%3AString%2Cpath%3D%22%22%2C%2A%2Cfile%3D__FILE__%2Cline%3D__LINE__%2C%2A%2Areplacements%29-instance-method\">#expect_issue</a></code> and <code><a href=\"../../Ameba/Spec/ExpectIssue.html#expect_no_issues%28rules%3ARule%3A%3ABase%7CEnumerable%28Rule%3A%3ABase%29%2Ccode%3AString%2Cpath%3D%22%22%2C%2A%2Cfile%3D__FILE__%2Cline%3D__LINE__%29-instance-method\">#expect_no_issues</a></code></p>","instance_methods":[{"html_id":"expect_correction(source,correction,*,file=__FILE__,line=__LINE__)-instance-method","name":"expect_correction","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"correction","external_name":"correction","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"args_string":"(source, correction, *, file = __FILE__, line = __LINE__)","args_html":"(source, correction, *, file = __FILE__, line = __LINE__)","location":{"filename":"src/ameba/spec/expect_issue.cr","line_number":131,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/expect_issue.cr#L131"},"def":{"name":"expect_correction","args":[{"name":"source","external_name":"source","restriction":""},{"name":"correction","external_name":"correction","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"splat_index":2,"visibility":"Public","body":"if source.correct!\nelse\n  raise(\"Use `expect_no_corrections` if the code will not change\")\nend\nif correction == source.code\n  return\nend\n\nfail(\"Expected correction:\\n\\n#{correction}\\n\\nGot:\\n\\n#{source.code}\", file, line)\n"},"external_var":false},{"html_id":"expect_issue(rules:Rule::Base|Enumerable(Rule::Base),annotated_code:String,path=\"\",*,file=__FILE__,line=__LINE__,**replacements)-instance-method","name":"expect_issue","abstract":false,"args":[{"name":"rules","external_name":"rules","restriction":"Rule::Base | Enumerable(Rule::Base)"},{"name":"annotated_code","external_name":"annotated_code","restriction":"String"},{"name":"path","default_value":"\"\"","external_name":"path","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"args_string":"(rules : Rule::Base | Enumerable(Rule::Base), annotated_code : String, path = \"\", *, file = __FILE__, line = __LINE__, **replacements)","args_html":"(rules : <a href=\"../../Ameba/Rule/Base.html\">Rule::Base</a> | Enumerable(<a href=\"../../Ameba/Rule/Base.html\">Rule::Base</a>), annotated_code : String, path = <span class=\"s\">&quot;&quot;</span>, *, file = __FILE__, line = __LINE__, **replacements)","location":{"filename":"src/ameba/spec/expect_issue.cr","line_number":99,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/expect_issue.cr#L99"},"def":{"name":"expect_issue","args":[{"name":"rules","external_name":"rules","restriction":"Rule::Base | Enumerable(Rule::Base)"},{"name":"annotated_code","external_name":"annotated_code","restriction":"String"},{"name":"path","default_value":"\"\"","external_name":"path","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"double_splat":{"name":"replacements","external_name":"replacements","restriction":""},"splat_index":3,"visibility":"Public","body":"annotated_code = format_issue(annotated_code, **replacements)\nexpected_annotations = AnnotatedSource.parse(annotated_code)\nlines = expected_annotations.lines\ncode = lines.join('\\n')\n\nif code == annotated_code\n  raise(\"Use `expect_no_issues` to assert that no issues are found\")\nend\n\nsource, actual_annotations = actual_annotations(rules, code, path, lines)\nif actual_annotations == expected_annotations\nelse\n  fail(\"Expected:\\n\\n#{expected_annotations}\\n\\nGot:\\n\\n#{actual_annotations}\", file, line)\nend\n\nsource\n"},"external_var":false},{"html_id":"expect_no_corrections(source,*,file=__FILE__,line=__LINE__)-instance-method","name":"expect_no_corrections","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"args_string":"(source, *, file = __FILE__, line = __LINE__)","args_html":"(source, *, file = __FILE__, line = __LINE__)","location":{"filename":"src/ameba/spec/expect_issue.cr","line_number":146,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/expect_issue.cr#L146"},"def":{"name":"expect_no_corrections","args":[{"name":"source","external_name":"source","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"splat_index":1,"visibility":"Public","body":"if source.correct!\nelse\n  return\nend\n\nfail(\"Expected no corrections, but got:\\n\\n#{source.code}\", file, line)\n"},"external_var":false},{"html_id":"expect_no_issues(rules:Rule::Base|Enumerable(Rule::Base),code:String,path=\"\",*,file=__FILE__,line=__LINE__)-instance-method","name":"expect_no_issues","abstract":false,"args":[{"name":"rules","external_name":"rules","restriction":"Rule::Base | Enumerable(Rule::Base)"},{"name":"code","external_name":"code","restriction":"String"},{"name":"path","default_value":"\"\"","external_name":"path","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"args_string":"(rules : Rule::Base | Enumerable(Rule::Base), code : String, path = \"\", *, file = __FILE__, line = __LINE__)","args_html":"(rules : <a href=\"../../Ameba/Rule/Base.html\">Rule::Base</a> | Enumerable(<a href=\"../../Ameba/Rule/Base.html\">Rule::Base</a>), code : String, path = <span class=\"s\">&quot;&quot;</span>, *, file = __FILE__, line = __LINE__)","location":{"filename":"src/ameba/spec/expect_issue.cr","line_number":156,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/expect_issue.cr#L156"},"def":{"name":"expect_no_issues","args":[{"name":"rules","external_name":"rules","restriction":"Rule::Base | Enumerable(Rule::Base)"},{"name":"code","external_name":"code","restriction":"String"},{"name":"path","default_value":"\"\"","external_name":"path","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"file","default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","default_value":"__LINE__","external_name":"line","restriction":""}],"splat_index":3,"visibility":"Public","body":"lines = code.split('\\n')\n\n_, actual_annotations = actual_annotations(rules, code, path, lines)\nif actual_annotations.to_s == code\n  return\nend\n\nfail(\"Expected no issues, but got:\\n\\n#{actual_annotations}\", file, line)\n"},"external_var":false}]},{"html_id":"crinja_lint/Ameba/Spec/Util","path":"Ameba/Spec/Util.html","kind":"module","full_name":"Ameba::Spec::Util","name":"Util","abstract":false,"locations":[{"filename":"src/ameba/spec/util.cr","line_number":1,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/util.cr#L1"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"crinja_lint/Ameba/Source","kind":"class","full_name":"Ameba::Source","name":"Source"},{"html_id":"crinja_lint/Ameba/Spec/ExpectIssue","kind":"module","full_name":"Ameba::Spec::ExpectIssue","name":"ExpectIssue"}],"namespace":{"html_id":"crinja_lint/Ameba/Spec","kind":"module","full_name":"Ameba::Spec","name":"Spec"},"instance_methods":[{"html_id":"normalize_code(code,separator='\\n')-instance-method","name":"normalize_code","abstract":false,"args":[{"name":"code","external_name":"code","restriction":""},{"name":"separator","default_value":"'\\n'","external_name":"separator","restriction":""}],"args_string":"(code, separator = '\\n')","args_html":"(code, separator = <span class=\"s\">&#39;\\n&#39;</span>)","location":{"filename":"src/ameba/spec/util.cr","line_number":2,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/spec/util.cr#L2"},"def":{"name":"normalize_code","args":[{"name":"code","external_name":"code","restriction":""},{"name":"separator","default_value":"'\\n'","external_name":"separator","restriction":""}],"visibility":"Public","body":"lines = code.split(separator)\n\n\nif lines[0].blank? && lines.size > 1\n  lines.shift\nend\n\n\nmin_indent = lines.min_of do |line|\n  line.blank? ? code.size : line.size - line.lstrip.size\nend\n\n\nlines.join(separator) do |line|\n  line.blank? ? line : line[min_indent..]\nend\n"},"external_var":false}]}]},{"html_id":"crinja_lint/Ameba/Tokenizer","path":"Ameba/Tokenizer.html","kind":"class","full_name":"Ameba::Tokenizer","name":"Tokenizer","abstract":false,"superclass":{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crinja_lint/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crinja_lint/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ameba/tokenizer.cr","line_number":13,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/tokenizer.cr#L13"}],"repository_name":"crinja_lint","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crinja_lint/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Represents Crystal syntax tokenizer based on `Crystal::Lexer`.\n\n```\nsource = Ameba::Source.new code, path\ntokenizer = Ameba::Tokenizer.new(source)\ntokenizer.run do |token|\n  puts token\nend\n```","summary":"<p>Represents Crystal syntax tokenizer based on <code>Crystal::Lexer</code>.</p>","constructors":[{"html_id":"new(lexer:Crystal::Lexer)-class-method","name":"new","doc":"Instantiates Tokenizer using a `lexer`.\n\n```\nlexer = Crystal::Lexer.new(code)\nAmeba::Tokenizer.new(lexer)\n```","summary":"<p>Instantiates Tokenizer using a <code>lexer</code>.</p>","abstract":false,"args":[{"name":"lexer","external_name":"lexer","restriction":"Crystal::Lexer"}],"args_string":"(lexer : Crystal::Lexer)","args_html":"(lexer : Crystal::Lexer)","location":{"filename":"src/ameba/tokenizer.cr","line_number":34,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/tokenizer.cr#L34"},"def":{"name":"new","args":[{"name":"lexer","external_name":"lexer","restriction":"Crystal::Lexer"}],"visibility":"Public","body":"_ = allocate\n_.initialize(lexer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(source)-class-method","name":"new","doc":"Instantiates Tokenizer using a `source`.\n\n```\nsource = Ameba::Source.new code, path\nAmeba::Tokenizer.new(source)\n```","summary":"<p>Instantiates Tokenizer using a <code>source</code>.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":""}],"args_string":"(source)","args_html":"(source)","location":{"filename":"src/ameba/tokenizer.cr","line_number":20,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/tokenizer.cr#L20"},"def":{"name":"new","args":[{"name":"source","external_name":"source","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"run(&block:Crystal::Token->_)-instance-method","name":"run","doc":"Runs the tokenizer and yields each token as a block argument.\n\n```\nAmeba::Tokenizer.new(source).run do |token|\n  puts token\nend\n```","summary":"<p>Runs the tokenizer and yields each token as a block argument.</p>","abstract":false,"location":{"filename":"src/ameba/tokenizer.cr","line_number":44,"url":"https://github.com/nobodywasishere/crinja_lint/blob/4d6b6c5/src/ameba/tokenizer.cr#L44"},"def":{"name":"run","yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Crystal::Token -> _)"},"visibility":"Public","body":"begin\n  run_normal_state(@lexer, &block)\n  true\nrescue e : Crystal::SyntaxException\n  false\nend"},"external_var":false}]}]}]}}